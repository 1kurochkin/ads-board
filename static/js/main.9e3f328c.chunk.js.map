{"version":3,"sources":["pictures/defaultAvatar.jpg","components/logo/logo.tsx","hooks/useOutsideClick.tsx","components/modalWindow/modalWindow.tsx","components/textInput/textInput.tsx","api/testAPI.ts","redux/reducers/mainState/mainState.tsx","redux/reducers/authorizationState/authorizationState.tsx","redux/reducers/authorizationState/authorizationStateActionCreators.tsx","components/searchBox/select/selectItem/selectItem.tsx","components/searchBox/select/select.tsx","redux/reducers/searchBoxState/searchBoxState.tsx","redux/reducers/searchBoxState/searchBoxStateActionCreators.tsx","redux/reducers/feedState/feedState.tsx","redux/reducers/feedState/feedStateActionCreators.tsx","redux/reducers/settingsState/settingsState.tsx","redux/reducers/settingsState/settingsStateActionCreators.tsx","redux/reducers/announcementState/announcementState.tsx","redux/reducers/announcementState/announcementStateActionCreators.tsx","redux/reducers/myAnnouncementState/myAnnouncementState.tsx","redux/reducers/myAnnouncementState/myAnnouncementStateActionCreators.tsx","redux/reducers/announcementsListState/announcementsListState.tsx","redux/reducers/announcementsListState/announcementsListStateActionCreators.tsx","redux/reducers/mainState/mainStateActionCreators.tsx","redux/thunks/thunks.tsx","redux/reducers/authorizationState/authorizationStateSelectors.tsx","redux/reducers/mainState/mainStateSelectors.tsx","components/button/button.tsx","redux/reducers/formState/formState.ts","redux/reducers/formState/formStateActionCreators.tsx","redux/reducers/formState/formStateSelectors.tsx","components/modalWindow/authorizationModalWindow/authorizationPopupBox.tsx","components/modalWindow/authorizationModalWindow/authorizationModalWindow.tsx","components/modalWindow/alertModalWindow/alertPopupBox.tsx","components/modalWindow/alertModalWindow/alertModalWindow.tsx","redux/reducers/settingsState/settingsStateSelectors.tsx","components/navCategoryButton/navCategoryButton.tsx","components/header/header.tsx","redux/reducers/searchBoxState/searchBoxStateSelectors.tsx","components/searchBox/searchBox.tsx","redux/reducers/feedState/feedStateSelectors.tsx","components/image/image.tsx","components/announcement/announcement.tsx","components/footer/footer.tsx","pages/feedPage/feedPage.tsx","pages/contactsPage/contactsPage.tsx","hocs/withAuthRedirectHoc.tsx","components/imagePicker/imagePicker.tsx","pages/settingsPage/settingsPage.tsx","redux/reducers/announcementState/announcementStateSelectors.tsx","components/slider/slider.tsx","pages/announcementPage/announcementPage.tsx","redux/reducers/myAnnouncementState/myAnnouncementStateSelectors.tsx","hooks/useInfinityScroll.tsx","pages/myAnnouncementsPage/myAnnouncementsPage.tsx","pages/createAnnouncement/createAnnouncement.tsx","redux/reducers/announcementsListState/announcementsListStateSelectors.tsx","components/preloader/preloader.tsx","components/buttonUp/buttonUp.tsx","pages/announcementsListPage/announcementsListPage.tsx","app/App.tsx","redux/store.tsx","index.tsx"],"names":["module","exports","Logo","props","to","className","useOutsideClick","ref","handler","listener","event","popupBox","current","path","composed","composedPath","includes","useEffect","document","addEventListener","removeEventListener","ModalWindow","isActiveFromProps","modal","withOpenBtn","children","alertCloseHandler","useRef","useState","isActive","setIsActive","closeModalWindow","withAlertClose","React","cloneElement","onClick","TextInput","placeholder","value","key","onBlurHandler","onChangeHandler","inputType","label","isValid","style","resize","rows","onChange","onBlur","type","testAPI","baseUrl","postAuthorizationData","data","console","log","fetch","postRegistrationData","getLastAnnouncements","getUserInfo","getSubwayStations","getAnnouncementsByFilters","page","name","category","subway","getAnnouncementsList","getAnnouncementByCategoryAndId","id","getMyAnnouncements","postDeleteAnnouncement","postSettingsByField","field","postSettingsAvatar","postSettingsName","postSettingsPhone","postSettingsLogin","postLogout","postDelete","postNewAnnouncement","getItemFromLocalStorage","feild","localStorage","getItem","setItemToLocalStorage","setItem","clearLocalStorage","clear","initialState","isFetching","subwayStationsData","categoriesData","subCategories","mainStateReducer","state","action","payload","isRegistration","isCorrectAuthData","isAuth","authorizationStateReducer","setIsCorrectAuthDataAC","SelectItem","initialStateSubway","initialStateCategory","Select","selectItems","placeHolder","onChangeHandlerSelectItem","toggleIsActive","boolean","prevIsActive","readOnly","map","selectItem","searchedData","currentPage","totalNumOfPages","searchConfig","categoryId","subwayStations","searchValue","searchBoxStateReducer","withConcat","location","pathname","initialStateSearchConfig","LOCATION_CHANGE","PATH_SEARCH","newSearchedData","concat","newCurrentPage","setSearchedDataAC","setIsFetchingSearchReducerAC","setTotalNumOfPageSearchReducerAC","setSearchConfigCategoryAC","lastAnnouncements","descriptionSalamRu","feedStateReducer","setIsFetchingFeedReducerAC","avatar","defaultAvatar","phone","login","password","settingsStateReducer","setSettingsInLocalStorageByFieldAC","announcement","announcementStateReducer","settIsFetchingAnnouncementReducerAC","myAnnouncements","myAnnouncementsStateReducer","newMyAnnouncementsSet","newMyAnnouncementsDel","filter","setMyAnnouncementsAC","settIsFetchingMyAnnouncementsReducerAC","setTotalNumOfPageMyAnnouncementReducerAC","announcementsList","announcementsListStateReducer","setAnnouncementsListAC","setTotalNumOfPageAnnouncementsListReducerAC","setIsFetchingMainStateAC","getAnnouncementsByFiltersThunk","dispatch","getState","searchBoxState","then","response","status","json","announcements","catch","err","error","postLogoutOrDeleteUser","logoutOrDelete","result","push","PATH_FEED","getMyAnnouncementsThunk","myAnnouncementsState","getAnnouncementsListThunk","announcementsListState","getUserInfoThunk","restUserData","Object","entries","forEach","getIsRegistrationSelector","authorizationState","getIsAuthSelector","getIsCorrectAuthDataSelector","getIsFetchingMainStateSelector","mainState","getSubwayStationsDataSelector","getCategoriesDataSelector","getTheSubCategoriesSelector","activeClassName","isIncludesSubCategory","categoryData","reduce","newCategoriesData","baseCategory","prepareCategoryToPush","Button","isDisabled","onClickHandler","defaultInitialStateForFormField","authorization","isReadyToSend","registration","phoneNumber","createAnnouncement","photos","price","description","settings","checkIsValid","length","JSON","stringify","prepareFormStateByPageForSend","restFormState","stateEntries","defaultCondition","postData","condition","formStateReducer","stateByPage","stateByField","stateKeys","keys","newState","seValueFormReducerAC","setIsValidFormReducerAC","checkIsReadyToSendByPageFormReducerAC","resetToInitialByPageFormReducerAC","getFieldsByPageFormReducerSelector","formState","AuthorizationPopupBox","useSelector","authFormState","regFormState","currentFormState","useDispatch","sendAuthorizationOrRegistration","useCallback","sendAuthorizationOrRegistrationThunk","setIsRegistration","seValueFormReducer","setIsCorrectAuthData","setIsValidFormReducer","resetToInitialByPageFormReducer","checkIsReadyToSend","getInputsConfig","currentTarget","AuthorizationModalWindow","openModalWindow","AlertPopupBox","alertText","btnOneLabel","btnOneConfiguration","btnTwoConfiguration","btnTwoHandler","btnTwoLabel","AlertModalWindow","openBtnElement","btnOneHandler","getSettingsFieldValueByFieldSelector","settingsState","NavCategoryButton","setSearchConfigCategory","configCategory","GET_PATH_SEARCH","Header","logoutUser","isActiveAuthModal","setIsActiveAuthModal","isActiveAuthMenu","setIsActiveAuthMenu","isActiveLogoutAlert","setIsActiveLogoutAlert","toggleIsActiveAuthMenu","prevState","alertCreateAnnouncement","alertLogout","linkToCreateAnnouncement","PATH_CREATE_ANNOUNCEMENT","authMenu","PATH_MY_ANNOUNCEMENTS","PATH_SETTINGS","index","getSearchedDataSelector","getSearchConfigCategorySelector","getSearchConfigSubwayStationsSelector","getSearchConfigSearchValueSelector","getIsFetchingSearchReducerSelector","getCurrentPageSearchReducerSelector","getTotalNumOfPageSearchReducerSelector","SearchBox","history","useHistory","searchConfigCategory","searchConfigSubwayStation","searchConfigSearchValue","resetToInitialStateSearchReducer","setSearchConfigSubwayStation","station","setSearchConfigSearchValue","setSearchConfigSearchValueAC","setSearchValue","selectItemOnChangeHandler","setIsActiveSelect","target","getLastAnnouncementsSelector","feedState","getIsFetchingFeedReducerSelector","getDescriptionSalamRuSelector","Image","photo","backgroundImage","Announcement","creationDate","subwayStation","Footer","FeedPage","lastAnnouncement","ContactsPage","withAuthRedirectHoc","Component","ImagePicker","onLoadHandler","file","files","Date","now","reader","FileReader","onload","readAsDataURL","settingsStateEntries","postSettingByField","values","postSettingByFieldThunk","deleteUser","image","imageName","restConfig","valueFromSettingsState","getAnnouncementSelector","announcementState","getIsFetchingAnnouncementReducerSelector","currentSlide","setCurrentSlide","changeSlide","nextOrPrev","transformStyle","transform","child","AnnouncementPage","contacts","user","getAnnouncementByCategoryAndIdThunk","useParams","goBack","getMyAnnouncementsSelector","getIsFetchingMyAnnouncementsReducerSelector","getCurrentPageMyAnnouncementsReducerSelector","getTotalNumOfPagesMyAnnouncementsReducerSelector","useInfinityScroll","scrollHandler","Math","ceil","window","innerHeight","scrollY","max","body","scrollHeight","documentElement","offsetHeight","clientHeight","setCurrentPage","delMyAnnouncementByIdAC","postDeleteAnnouncementThunk","restMyAnnouncement","scrollTo","phoneRedux","postNewAnnouncementThunk","getErrorClassName","height","newPhotosValue","deleteLoadedImage","getAnnouncementsListSelector","getCurrentPageAnnouncementsListReducerSelector","getTotalNumOfPagesAnnouncementsListReducerSelector","memo","ButtonUp","isView","setIsView","onScrollHandler","currentHeight","AnnouncementsListPage","substr","currentCategory","currentSubway","isFetchingSearchState","isEqualsCurrAndTotalPageSearch","isSearchState","isFetchingMainState","isEqualsCurrAndTotalPage","getAnnouncements","setCurrentPageSearchBox","resetToInitialStateAnnouncementsList","setState","subCategoryData","App","getUserData","exact","component","CreateAnnouncement","MyAnnouncementsPage","SettingsPage","createBrowserHistory","store","createStore","combineReducers","router","connectRouter","applyMiddleware","routerMiddleware","thunkMiddleWare","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.9e3f328c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/defaultAvatar.d73128e4.jpg\";","import React from 'react';\nimport \"./logoStyles.css\"\nimport { NavLink } from 'react-router-dom';\n\nconst Logo = (props: any) => {\n\n  return (\n      <NavLink to={\"/feed\"}>\n          <div className=\"logo navbar-brand mb-0 h1\">\n              SALAM\n          </div>\n      </NavLink>\n\n  );\n}\n\nexport default Logo;\n","import React, {useEffect} from 'react';\n\nconst useOutsideClick = (ref: any, handler: any) => {\n\n    const listener = (event: any) => {\n        const popupBox = ref.current\n        const target = event.path || ( event.composed && event.composedPath() )\n        !target.includes(popupBox) && handler(event);\n    }\n\n  useEffect(() => {\n        document.addEventListener('click', listener)\n        return () => document.removeEventListener('click', listener)\n      }, [ref, handler]\n  );\n}\n\nexport default useOutsideClick;\n","import React, {ReactElement, Ref, useEffect, useRef, useState} from 'react';\nimport \"./modalWindowStyles.css\"\nimport useOutsideClick from '../../hooks/useOutsideClick';\n\ntype propsTypes = {\n    alertCloseHandler?: Function\n    isActiveFromProps?: boolean\n    children?: any\n    withOpenBtn?: boolean\n    modal: ReactElement\n}\n\nconst ModalWindow = (props: propsTypes) => {\n\n    const {isActiveFromProps, modal, withOpenBtn = false, children, alertCloseHandler = () => null} = props\n    const ref: Ref<any> = useRef(null)\n\n    const [isActive, setIsActive] = useState(false)\n\n    useEffect(() => {\n      isActiveFromProps && setIsActive(true)\n    }, [isActiveFromProps])\n\n    const outsideClickHandler = () => {\n      isActive && closeModalWindow()\n    }\n    const closeModalWindow = (withAlertClose = true) => {\n        setIsActive(false)\n        withAlertClose && alertCloseHandler()\n    }\n\n    useOutsideClick(ref, outsideClickHandler)\n\n    return (\n\n        <>\n            <div className={`modalWindow ${isActive && \"modalWindow__active\"} `}>\n                <div ref={ref} className=\"modalWindow__popupBox\">\n                    {React.cloneElement(modal, {closeModalWindow})}\n                    <span onClick={() => closeModalWindow()} className={\"popup__close\"}>&times;</span>\n                </div>\n            </div>\n            { withOpenBtn && children(() => setIsActive(true)) }\n        </>\n    );\n}\n\nexport default ModalWindow;\n","import React from 'react';\r\nimport \"./textInputStyles.css\"\r\n\r\ntype propsTypes = {\r\n  placeholder?:string\r\n  inputType?: string\r\n  value: string\r\n  key?: number | string\r\n  onBlurHandler: Function\r\n  onChangeHandler: Function\r\n  isValid?: boolean\r\n  className?: string\r\n  label?: string\r\n}\r\n\r\nconst TextInput = (props: propsTypes) => {\r\n\r\n  const {\r\n    className,\r\n    placeholder,\r\n    value, key,\r\n    onBlurHandler,\r\n    onChangeHandler,\r\n    inputType = \"text\",\r\n    label = \"\",\r\n    isValid = true} = props\r\n\r\n  return (\r\n        <div className={`textInput ${!isValid ? \"textInput__alert\" : null} ${className}`}>\r\n          <label>{label}</label>\r\n          {inputType === \"textArea\" ?\r\n              <textarea style={{resize: \"none\"}} rows={6} className={\"form-control\"} onChange={(event) => onChangeHandler(event)} placeholder={placeholder}\r\n                        onBlur={(event) => onBlurHandler(event)} value={value}/> :\r\n              <input className={\"form-control\"} key={key} onBlur={(event) => onBlurHandler(event)} value={value} type={inputType} placeholder={placeholder}\r\n                     onChange={(event) => onChangeHandler(event)} />}\r\n        </div>\r\n  );\r\n}\r\n\r\nexport default TextInput;\r\n","// ------AUTHORIZATION-TYPES-----//\r\nimport {SettingsFieldType} from \"../redux/reducers/settingsState/settingsState\";\r\n\r\nexport type AuthorizationData = { login: string,  password: string }\r\nexport type RegistrationData = { name: string,  login: string, password: string }\r\n\r\n// ------CREATE-ANNOUNCEMENT-PAGE---//?\r\nexport type NewAnnouncementData = {\r\n    category: number,\r\n    name: string,\r\n    description: string\r\n    photos?: Array<string>,\r\n    price: number,\r\n    subway: string,\r\n    phone: string\r\n}\r\n\r\n// ------SEARCH-BOX-TYPES-----//\r\nexport type GetAnnouncementsCategoryType = \"announcements\" |  \"housing\" | \"apartment\" | \"bunk\" | \"room\" | \"job\" | \"vacancies\" | string\r\n\r\n// ------SETTINGS-TYPES---//\r\nexport type PostSettingsAvatarData = { avatar: string }\r\nexport type PostSettingsNameData = { name: string }\r\nexport type PostSettingsEmailData = { email: string }\r\nexport type PostSettingsPhoneData = { phone: string }\r\n\r\nexport class testAPI {\r\n\r\n    static baseUrl = './json/'\r\n\r\n    // ------AUTHORIZATION-----//\r\n    static postAuthorizationData = (data: AuthorizationData): Promise<Response> => {\r\n        console.log(data, \"postAuthorizationData\")\r\n         return fetch(`https://5faa7de0b5c645001602aa4e.mockapi.io/responseForPost`)\r\n    }\r\n\r\n    static postRegistrationData = (data: RegistrationData): Promise<Response> => {\r\n        console.log(data, \"postRegistrationData\")\r\n        return fetch(`https://5faa7de0b5c645001602aa4e.mockapi.io/responseForPost`)\r\n    }\r\n\r\n    // ------FEED-PAGE-----//\r\n    //@response  20 последних объявлений\r\n    static getLastAnnouncements = (): Promise<Response> => {\r\n        console.log(\"getLastAnnouncements\")\r\n        const path = `getMyAnnouncements`\r\n        return fetch(`https://5faa8c4eb5c645001602abd5.mockapi.io/getLastAnnouncements`)\r\n    }\r\n\r\n    // ------GET-USER-INFO-----//\r\n    static getUserInfo = (): Promise<Response> => {\r\n        console.log(\"getUserInfo\")\r\n        return fetch(`https://5faa8c4eb5c645001602abd5.mockapi.io/getUserData`)\r\n    }\r\n\r\n    // ------SEARCH-BOX-----//\r\n    static getSubwayStations = (): Promise<Response> => {\r\n        console.log(\"getSubwayStations\")\r\n        return fetch(`https://5faa7de0b5c645001602aa4e.mockapi.io/getSubwayStations`)\r\n    }\r\n\r\n    static getAnnouncementsByFilters = (page: number, name?: string, category?: string| number, subway?: string | number): Promise<Response> => {\r\n        const path = `getAnnouncementsByFilters?page=${page}&category=${category}&name=${name}&subway=${subway}`\r\n        console.log(page, category, name, subway, \"getAnnouncementsByFilters\", path)\r\n        return fetch(`https://5faa8c4eb5c645001602abd5.mockapi.io/getAnnouncementsByFilters`)\r\n    }\r\n\r\n    //---REQUEST-FOR-SEARCH-BOX/FEED-PAGE/HOUSING/JOB/TRADING---//\r\n    static getAnnouncementsList = (page: number, category: GetAnnouncementsCategoryType): Promise<Response> => {\r\n        const path = `getAnnouncementsByCategoryAndName?page=${page}&category=${category}`\r\n        console.log(page, category, \"getAnnouncementsByCategoryAndName\", path)\r\n        return fetch(`https://5faa8c4eb5c645001602abd5.mockapi.io/getAnnouncementsList`)\r\n    }\r\n\r\n    // ------GET-ANNOUNCEMENT-BY-CATEGORY-AND-ID----//\r\n    static getAnnouncementByCategoryAndId = (category: GetAnnouncementsCategoryType, id: number): Promise<Response> => {\r\n        console.log(\"getAnnouncementByCategoryAndId\", category, id)\r\n        const path = `getAnnouncementByCategoryAndId/${category}/${id}`\r\n        return fetch(`https://5faa7de0b5c645001602aa4e.mockapi.io/getAnnouncement`)\r\n    }\r\n\r\n    // ------MY-ANNOUNCEMENTS-PAGE---//\r\n    static getMyAnnouncements = (page: number): Promise<Response> => {\r\n        console.log(\"getMyAnnouncements\")\r\n        const path = `getMyAnnouncements?page=${page}`\r\n        return fetch(`https://5faa7de0b5c645001602aa4e.mockapi.io/getMyAnnouncements`)\r\n    }\r\n\r\n    static postDeleteAnnouncement = (id:number): Promise<Response> => {\r\n        console.log(id, \"postDeleteAnnouncement\")\r\n        return fetch(`https://5faa7de0b5c645001602aa4e.mockapi.io/responseForPost`)\r\n    }\r\n\r\n\r\n    // ------SETTINGS-PAGE---//\r\n\r\n    static postSettingsByField = (data: any, field: SettingsFieldType): Promise<Response> => {\r\n        console.log(data, \"postSettingsByField\")\r\n        switch (field) {\r\n            case \"avatar\": return testAPI.postSettingsAvatar(data)\r\n            case \"name\": return testAPI.postSettingsName(data)\r\n            case \"phone\": return testAPI.postSettingsPhone(data)\r\n            case \"login\": return testAPI.postSettingsLogin(data)\r\n            default: return testAPI.postSettingsAvatar(data)\r\n        }\r\n    }\r\n    static postSettingsAvatar = (data: PostSettingsAvatarData): Promise<Response> => {\r\n        console.log(data, \"postSettingsAvatar\")\r\n        return fetch(`https://5faa7de0b5c645001602aa4e.mockapi.io/responseForPost`)\r\n    }\r\n\r\n    static postSettingsName = (data: PostSettingsNameData): Promise<Response> => {\r\n        console.log(data, \"postSettingsName\")\r\n        return fetch(`https://5faa7de0b5c645001602aa4e.mockapi.io/responseForPost`)\r\n    }\r\n\r\n    static postSettingsLogin = (data: PostSettingsEmailData): Promise<Response> => {\r\n        console.log(data, \"postSettingsLogin\")\r\n        return fetch(`https://5faa7de0b5c645001602aa4e.mockapi.io/responseForPost`)\r\n    }\r\n\r\n    static postSettingsPhone = (data: PostSettingsPhoneData): Promise<Response> => {\r\n        console.log(data, \"postSettingsPhone\")\r\n        return fetch(`https://5faa7de0b5c645001602aa4e.mockapi.io/responseForPost`)\r\n    }\r\n\r\n    static postLogout = (): Promise<Response> => {\r\n        console.log(\"postLogout\")\r\n        return fetch(`https://5faa7de0b5c645001602aa4e.mockapi.io/responseForPost`)\r\n    }\r\n\r\n    static postDelete = (): Promise<Response> => {\r\n        console.log(\"postDelete\")\r\n        return fetch(`https://5faa7de0b5c645001602aa4e.mockapi.io/responseForPost`)\r\n    }\r\n\r\n    // ------CREATE-ANNOUNCEMENT-PAGE---//\r\n    static postNewAnnouncement = (data: NewAnnouncementData): Promise<Response> => {\r\n        console.log(data, \"postNewAnnouncement\")\r\n        return fetch(`https://5faa7de0b5c645001602aa4e.mockapi.io/responseForPost`)\r\n    }\r\n}","\r\nexport const getItemFromLocalStorage = (feild:string) => localStorage.getItem(feild)\r\nexport const setItemToLocalStorage = (feild:string, value:any) => localStorage.setItem(feild, value)\r\nexport const clearLocalStorage = () => localStorage.clear()\r\n\r\nexport const SET_IS_FETCHING_MAIN_STATE = \"SET_IS_FETCHING_MAIN_STATE\"\r\nexport const SET_SUBWAY_STATIONS_DATA = \"SET_SUBWAY_STATIONS_DATA\"\r\n\r\ntype initialStateType = typeof initialState\r\nconst initialState = {\r\n    isFetching: false,\r\n    subwayStationsData: [],\r\n    categoriesData : [\r\n        { id: 0, label: \"Любая категория\", category: \"all\"},\r\n        {\r\n            id: 1,\r\n            label: \"Недвижимость\",\r\n            category: \"housing\",\r\n            subCategories : [\r\n                {id: 2, label: \"Квартиры\", category: \"apartments\"},\r\n                {id: 3, label: \"Комната\", category: \"bunk\"},\r\n                {id: 4, label: \"Койко-место\", category: \"room\"}\r\n            ]\r\n        },\r\n        {\r\n            id: 5,\r\n            label: \"Работа\",\r\n            category: \"job\",\r\n            subCategories : [\r\n                {id: 6, label: \"Вакансии\", category: \"vacancies\"}\r\n            ]\r\n        }\r\n    ]\r\n}\r\n\r\nexport const mainStateReducer = (state = initialState, action : any): initialStateType => {\r\n    const {type, payload } = action\r\n    const { value } = payload || {}\r\n\r\n    switch (type) {\r\n        case SET_IS_FETCHING_MAIN_STATE :\r\n            console.log(\"SET_IS_FETCHING_MAIN_STATE\", value)\r\n            return {...state, isFetching: value}\r\n        case SET_SUBWAY_STATIONS_DATA :\r\n            console.log(\"SET_SUBWAY_STATIONS_DATA\", value)\r\n            return {...state, subwayStationsData: value}\r\n        default: return state\r\n    }\r\n}","import {AuthorizationStateActionTypes} from \"./authorizationStateActionCreators\";\r\nimport {getItemFromLocalStorage, setItemToLocalStorage, clearLocalStorage} from \"../mainState/mainState\";\r\nimport {SET_IS_FETCHING_SETTINGS_REDUCER} from \"../settingsState/settingsState\";\r\n\r\nexport const SET_IS_REGISTRATION = \"SET_IS_REGISTRATION\"\r\nexport const SET_IS_CORRECT_AUTH_DATA = \"SET_IS_CORRECT_AUTH_DATA\"\r\nexport const SET_IS_AUTH = \"SET_IS_AUTH\"\r\nexport const LOGOUT_OR_DELETE_USER = \"LOGOUT_OR_DELETE_USER\"\r\n\r\ntype initialStateType = typeof initialState\r\nconst initialState = {\r\n    isRegistration: false,\r\n    isCorrectAuthData: true,\r\n    isAuth: () => getItemFromLocalStorage(\"isAuth\") !== null\r\n}\r\n\r\nexport const authorizationStateReducer = (state = initialState, action : AuthorizationStateActionTypes): initialStateType => {\r\n    const {type, payload } = action\r\n    const { value } = payload || {}\r\n\r\n    switch (type) {\r\n        case SET_IS_REGISTRATION :\r\n            console.log(\"SET_IS_REGISTRATION\", value)\r\n            return {...state, isRegistration: value}\r\n        case SET_IS_CORRECT_AUTH_DATA :\r\n            console.log(\"SET_IS_CORRECT_AUTH_DATA\", value)\r\n            return {...state, isCorrectAuthData: value}\r\n        case SET_IS_AUTH :\r\n            console.log(\"SET_IS_AUTH\", value)\r\n            setItemToLocalStorage(\"isAuth\", value)\r\n            return {...state, isAuth: () => getItemFromLocalStorage(\"isAuth\") !== null}\r\n        case LOGOUT_OR_DELETE_USER:\r\n            console.log(\"LOGOUT_OR_DELETE_USER\")\r\n            clearLocalStorage()\r\n            return state\r\n        default: return state\r\n    }\r\n}","import {LOGOUT_OR_DELETE_USER, SET_IS_AUTH, SET_IS_CORRECT_AUTH_DATA, SET_IS_REGISTRATION} from \"./authorizationState\";\r\n\r\nexport type AuthorizationStateActionTypes  = SetIsRegistrationACType | SetIsAuthACType | SetIsCorrectAuthDataACType\r\n\r\nexport type SetIsRegistrationACType = {\r\n    type: typeof SET_IS_REGISTRATION\r\n    payload : { value: boolean }\r\n}\r\nexport type SetIsAuthACType = {\r\n    type: typeof SET_IS_AUTH | string\r\n    payload : { value: boolean }\r\n}\r\nexport type SetIsCorrectAuthDataACType = {\r\n    type: typeof SET_IS_CORRECT_AUTH_DATA | string\r\n    payload : { value: boolean }\r\n}\r\n\r\nexport type LogoutOrDeleteUserACType = { type: typeof LOGOUT_OR_DELETE_USER | string }\r\n\r\nexport const setIsRegistrationAC = (value:boolean):SetIsRegistrationACType => ({ type: SET_IS_REGISTRATION, payload: {value} })\r\nexport const setIsCorrectAuthDataAC = (value:boolean):SetIsCorrectAuthDataACType => ({ type: SET_IS_CORRECT_AUTH_DATA, payload: {value} })\r\nexport const setIsAuthAC = (value:boolean): SetIsAuthACType => ({ type: SET_IS_AUTH, payload: {value} })\r\nexport const logoutOrDeleteUseAC = (): LogoutOrDeleteUserACType => ({ type: LOGOUT_OR_DELETE_USER })","import React from 'react';\nimport \"./selectItem.css\"\n\ntype PropsType = {\n    label: string\n    isActive: any\n    onChangeHandler: any\n    className?: string\n}\n\nconst SelectItem = (props: PropsType) => {\n\n    const {label, isActive, onChangeHandler, className} = props\n\n    return (\n        <div onClick={onChangeHandler} className={`selectItem dropdown-item ${className}`}>\n            {label}\n            {/*<input checked={isActive} type=\"radio\" className=\"selectItem__checkBox\"/>*/}\n        </div>\n    );\n}\n\nexport default SelectItem;\n","import React, {useRef, useState} from 'react';\nimport \"./selectStyles.css\"\nimport SelectItem from \"./selectItem/selectItem\";\nimport useOutsideClick from \"../../../hooks/useOutsideClick\";\n\n//TODO Перенести в mainState\nexport const initialStateSubway = {id: 0, label: \"Все станции метро\"}\nexport const initialStateCategory = { id: 0, label: \"Любая категория\", category: \"all\"}\n\nconst Select = (props: any) => {\n    const {\n        selectItems = [],\n        placeHolder,\n        onChangeHandler,\n        onBlurHandler = null,\n        onChangeHandlerSelectItem,\n        value,\n        className\n    } = props\n\n    const [isActive, setIsActive] = useState(false)\n    const ref = useRef(null)\n    const outsideClickHandler = () => isActive && setIsActive(false)\n    useOutsideClick(ref, outsideClickHandler)\n\n    const toggleIsActive: (boolean?: any) => void = (boolean:boolean | null = null) => {\n        setIsActive(prevIsActive => boolean !== null ? boolean : !prevIsActive)\n    }\n\n    return (\n        <div ref={ref} className={`select dropdown ${className} p-0`}>\n                <input onClick={toggleIsActive} onBlur={onBlurHandler} readOnly={true} onChange={onChangeHandler}\n                       placeholder={placeHolder}\n                       className={\"select__current form-control dropdown-toggle w-100\"}\n                       value={value} type=\"text\"/>\n                {/*<div className={\"select__current-arrow\"}>&darr;</div>*/}\n            <div className={`select__items dropdown-menu w-100 ${isActive && \"show\"}`}>\n                {selectItems.map((selectItem: any) =>\n                    <SelectItem {...selectItem} onChangeHandler={(event:any) => onChangeHandlerSelectItem(selectItem, toggleIsActive)}/>)}\n            </div>\n        </div>\n    );\n}\n\nexport default Select;\n","import {initialStateCategory, initialStateSubway} from \"../../../components/searchBox/select/select\";\r\nimport {LOCATION_CHANGE} from \"connected-react-router\";\r\nimport {PATH_SEARCH} from \"../../../app/App\";\r\n\r\nexport const SET_SEARCHED_DATA = \"SET_SEARCHED_DATA\"\r\nexport const SET_IS_FETCHING_SEARCH_REDUCER = \"SET_IS_FETCHING_SEARCH_REDUCER\"\r\nexport const SET_CURRENT_PAGE_SEARCH_REDUCER = \"SET_CURRENT_PAGE_SEARCH_REDUCER\"\r\nexport const SET_TOTAL_NUM_OF_PAGE_SEARCH_REDUCER = \"SET_TOTAL_NUM_OF_PAGE_SEARCH_REDUCER\"\r\nexport const RESET_TO_INITIAL_SEARCH_REDUCER = \"RESET_TO_INITIAL_SEARCH_REDUCER\"\r\nexport const SET_SEARCH_CONFIG_CATEGORY_ID = \"SET_SEARCH_CONFIG_CATEGORY_ID\"\r\nexport const SET_SEARCH_CONFIG_SUBWAY_STATIONS = \"SET_SEARCH_CONFIG_SUBWAY_STATIONS\"\r\nexport const SET_SEARCH_CONFIG_SEARCH_VALUE = \"SET_SEARCH_CONFIG_SEARCH_VALUE\"\r\n\r\nexport type initialStateType = typeof initialState\r\n\r\nconst initialState = {\r\n    searchedData : [],\r\n    currentPage : 0,\r\n    totalNumOfPages: 1,\r\n    isFetching: false,\r\n    searchConfig : {\r\n        categoryId: initialStateCategory,\r\n        subwayStations: initialStateSubway,\r\n        searchValue: \"\"\r\n    }\r\n}\r\n\r\nexport const searchBoxStateReducer = (state = initialState, action: any): initialStateType => {\r\n    const { type, payload } = action\r\n    const { value, withConcat, location : {pathname = \"/\"} = {} } = payload || {}\r\n    const { searchedData, currentPage, searchConfig } = state\r\n    const {searchConfig: initialStateSearchConfig} = initialState\r\n\r\n    switch (type) {\r\n        case LOCATION_CHANGE :\r\n            console.log(\"LOCATION_CHANGE\", payload)\r\n            return !pathname.includes(PATH_SEARCH) ?\r\n                {...state, searchConfig: initialStateSearchConfig} : state\r\n        case SET_SEARCHED_DATA :\r\n            console.log(\"SET_SEARCHED_DATA\", value)\r\n            const newSearchedData = withConcat ? searchedData.concat(value) : value\r\n            return {...state, searchedData: newSearchedData}\r\n        case SET_IS_FETCHING_SEARCH_REDUCER :\r\n            console.log(\"SET_IS_FETCHING_SEARCH_REDUCER\", value)\r\n            return {...state, isFetching: value}\r\n        case SET_CURRENT_PAGE_SEARCH_REDUCER :\r\n            const newCurrentPage = currentPage + 1\r\n            console.log(\"SET_CURRENT_PAGE_SEARCH_REDUCER\", newCurrentPage)\r\n            return {...state, currentPage: newCurrentPage}\r\n        case SET_TOTAL_NUM_OF_PAGE_SEARCH_REDUCER :\r\n            console.log(\"SET_TOTAL_NUM_OF_PAGE_SEARCH_REDUCER\", value)\r\n            return {...state, totalNumOfPages: value}\r\n        case RESET_TO_INITIAL_SEARCH_REDUCER :\r\n            console.log(\"RESET_TO_INITIAL_SEARCH_REDUCER\", value)\r\n            return {...initialState, searchConfig: {...searchConfig}}\r\n        case SET_SEARCH_CONFIG_CATEGORY_ID :\r\n            console.log(\"SET_SEARCH_CONFIG_CATEGORY_ID\", value)\r\n            return {...state, searchConfig: {...searchConfig, categoryId: value}}\r\n        case SET_SEARCH_CONFIG_SUBWAY_STATIONS :\r\n            console.log(\"SET_SEARCH_CONFIG_SUBWAY_STATIONS\", value)\r\n            return {...state, searchConfig: {...searchConfig, subwayStations: value}}\r\n        case SET_SEARCH_CONFIG_SEARCH_VALUE :\r\n            console.log(\"SET_SEARCH_CONFIG_SEARCH_VALUE\", value)\r\n            return {...state, searchConfig: {...searchConfig, searchValue: value}}\r\n        default: return state\r\n    }\r\n}","import {\r\n    SET_SEARCHED_DATA,\r\n    SET_IS_FETCHING_SEARCH_REDUCER,\r\n    SET_CURRENT_PAGE_SEARCH_REDUCER,\r\n    SET_TOTAL_NUM_OF_PAGE_SEARCH_REDUCER,\r\n    RESET_TO_INITIAL_SEARCH_REDUCER,\r\n    SET_SEARCH_CONFIG_CATEGORY_ID,\r\n    SET_SEARCH_CONFIG_SUBWAY_STATIONS, SET_SEARCH_CONFIG_SEARCH_VALUE,\r\n} from \"./searchBoxState\";\r\n\r\nexport const setSearchedDataAC = (value:Array<any>, withConcat:boolean):SetSearchedDataAType => ({ type: SET_SEARCHED_DATA, payload: {value, withConcat} })\r\nexport const setIsFetchingSearchReducerAC = (value:boolean):SetIsFetchingSearchReducerACType => ({ type: SET_IS_FETCHING_SEARCH_REDUCER, payload: {value} })\r\nexport const setCurrentPageSearchReducerAC = ():SetCurrentPageSearchReducerACType => ({ type: SET_CURRENT_PAGE_SEARCH_REDUCER })\r\nexport const setTotalNumOfPageSearchReducerAC = (value:number):SetTotalNumOfPageSearchReducerACType => ({ type: SET_TOTAL_NUM_OF_PAGE_SEARCH_REDUCER, payload: {value} })\r\nexport const resetToInitialStateSearchReducerAC = ():ResetToInitialStateSearchReducerACType => ({ type: RESET_TO_INITIAL_SEARCH_REDUCER })\r\nexport const setSearchConfigCategoryAC = (value:number):SetSearchConfigCategoryACType => ({ type: SET_SEARCH_CONFIG_CATEGORY_ID, payload: {value} })\r\nexport const setSearchConfigSubwayStationsAC = (value:string):SetSearchConfigSubwayStationsACType => ({ type: SET_SEARCH_CONFIG_SUBWAY_STATIONS, payload: {value} })\r\nexport const setSearchConfigSearchValueAC = (value:string):SetSearchConfigSearchValueACType => ({ type: SET_SEARCH_CONFIG_SEARCH_VALUE, payload: {value} })\r\n\r\n\r\n\r\nexport type SetSearchedDataAType = { type: typeof SET_SEARCHED_DATA, payload: { value: Array<any>, withConcat: boolean}}\r\nexport type SetIsFetchingSearchReducerACType = { type: typeof SET_IS_FETCHING_SEARCH_REDUCER, payload: { value: boolean }}\r\nexport type SetCurrentPageSearchReducerACType = { type: typeof SET_CURRENT_PAGE_SEARCH_REDUCER }\r\nexport type SetTotalNumOfPageSearchReducerACType = { type: typeof SET_TOTAL_NUM_OF_PAGE_SEARCH_REDUCER, payload: { value: number } }\r\nexport type ResetToInitialStateSearchReducerACType = { type: typeof RESET_TO_INITIAL_SEARCH_REDUCER }\r\nexport type SetSearchConfigCategoryACType = { type: typeof SET_SEARCH_CONFIG_CATEGORY_ID, payload: { value: number } }\r\nexport type SetSearchConfigSubwayStationsACType = { type: typeof SET_SEARCH_CONFIG_SUBWAY_STATIONS, payload: { value: string }}\r\nexport type SetSearchConfigSearchValueACType = { type: typeof SET_SEARCH_CONFIG_SEARCH_VALUE, payload: { value: string }}\r\n","export const SET_IS_FETCHING_FEED_REDUCER = \"SET_IS_FETCHING_FEED_REDUCER\"\r\nexport const SET_LAST_ANNOUNCEMENTS = \"SET_LAST_ANNOUNCEMENTS\"\r\n\r\ntype initialStateType = typeof initialState\r\nconst initialState = {\r\n    lastAnnouncements: [],\r\n    isFetching: false,\r\n    descriptionSalamRu: \"\"\r\n}\r\n\r\nexport const feedStateReducer = (state = initialState, action: any): initialStateType => {\r\n    const {type, payload } = action\r\n    const { value } = payload || {}\r\n\r\n    switch (type) {\r\n        case SET_LAST_ANNOUNCEMENTS :\r\n            console.log(\"SET_LAST_ANNOUNCEMENTS\", value)\r\n            return {...state, lastAnnouncements: value}\r\n        case SET_IS_FETCHING_FEED_REDUCER :\r\n            console.log(\"SET_IS_FETCHING_FEED_REDUCER\", value)\r\n            return {...state, isFetching: value}\r\n        default: return state\r\n    }\r\n}","import { SET_LAST_ANNOUNCEMENTS, SET_IS_FETCHING_FEED_REDUCER } from \"./feedState\"\r\n\r\nexport type SetLastAnnouncementsACType = { type: typeof SET_LAST_ANNOUNCEMENTS, payload: { value: boolean }}\r\nexport type SetetIsFetchingFeedReducerACType = { type: typeof SET_IS_FETCHING_FEED_REDUCER, payload: { value: boolean }}\r\n\r\nexport const setLastAnnouncementsAC = (value:boolean):SetLastAnnouncementsACType => ({ type: SET_LAST_ANNOUNCEMENTS, payload: {value} })\r\nexport const setIsFetchingFeedReducerAC = (value:boolean):SetetIsFetchingFeedReducerACType => ({ type: SET_IS_FETCHING_FEED_REDUCER, payload: {value} })","import {getItemFromLocalStorage, setItemToLocalStorage} from \"../mainState/mainState\";\r\nimport defaultAvatar from \"../../../pictures/defaultAvatar.jpg\"\r\nexport const SET_SETTINGS_IN_LOCAL_STORAGE_BY_FIELD = \"SET_SETTINGS_IN_LOCAL_STORAGE_BY_FIELD\"\r\nexport const SET_IS_FETCHING_SETTINGS_REDUCER = \"SET_IS_FETCHING_SETTINGS_REDUCER\"\r\n\r\ntype initialStateType = typeof initialState\r\nconst initialState = {\r\n    avatar: () => getItemFromLocalStorage(\"avatar\") || defaultAvatar,\r\n    name: () => getItemFromLocalStorage(\"name\") || \"\",\r\n    phone: () => getItemFromLocalStorage(\"phone\") || \"\",\r\n    login: () => getItemFromLocalStorage(\"login\") || \"\",\r\n    password: () => getItemFromLocalStorage(\"password\") || \"\",\r\n    isFetching: false\r\n}\r\n\r\nexport type SettingsFieldType = \"avatar\" | \"name\" | \"phone\" | \"login\" | \"currentPassword\" | \"password\" | string\r\n\r\nexport const settingsStateReducer = (state = initialState, action : any): initialStateType => {\r\n    const {type, payload } = action\r\n    const { value, field } = payload || {}\r\n\r\n    switch (type) {\r\n        case SET_SETTINGS_IN_LOCAL_STORAGE_BY_FIELD :\r\n            console.log(\"SET_SETTINGS_IN_LOCAL_STORAGE_BY_FIELD\", value)\r\n            setItemToLocalStorage(field, value)\r\n            return state\r\n        case SET_IS_FETCHING_SETTINGS_REDUCER :\r\n            console.log(\"SET_IS_FETCHING_SETTINGS_REDUCER\", value)\r\n            return {...state, isFetching: value}\r\n        default: return state\r\n    }\r\n}","import {\r\n    SET_IS_FETCHING_SETTINGS_REDUCER,\r\n    SET_SETTINGS_IN_LOCAL_STORAGE_BY_FIELD,\r\n    SettingsFieldType\r\n} from \"./settingsState\";\r\n\r\nexport type SetSettingsInLocalStorageByFieldACType = {\r\n    type: typeof SET_SETTINGS_IN_LOCAL_STORAGE_BY_FIELD\r\n    payload : { value: any, field:  SettingsFieldType}\r\n}\r\n\r\nexport type SetIsFetchingSettingsReducerACType = {\r\n    type: typeof SET_IS_FETCHING_SETTINGS_REDUCER\r\n    payload : { value: boolean}\r\n}\r\nexport const setSettingsInLocalStorageByFieldAC = (value:any, field:SettingsFieldType):SetSettingsInLocalStorageByFieldACType =>\r\n    ({ type: SET_SETTINGS_IN_LOCAL_STORAGE_BY_FIELD, payload: {value, field} })\r\n\r\nexport const setIsFetchingSettingsReducerAC = (value:boolean):SetIsFetchingSettingsReducerACType =>\r\n    ({ type: SET_IS_FETCHING_SETTINGS_REDUCER, payload: {value} })\r\n","export const SET_IS_FETCHING_ANNOUNCEMENT_REDUCER = \"SET_IS_FETCHING_ANNOUNCEMENT_REDUCER\"\r\nexport const SET_ANNOUNCEMENT = \"SET_ANNOUNCEMENT\"\r\n\r\ntype initialStateType = typeof initialState\r\nconst initialState = {\r\n    announcement: {},\r\n    isFetching: false,\r\n}\r\n\r\nexport const announcementStateReducer = (state = initialState, action: any): initialStateType => {\r\n    const {type, payload } = action\r\n    const { value } = payload || {}\r\n\r\n    switch (type) {\r\n        case SET_ANNOUNCEMENT :\r\n            console.log(\"SET_ANNOUNCEMENT\", value)\r\n            return {...state, announcement: value}\r\n        case SET_IS_FETCHING_ANNOUNCEMENT_REDUCER :\r\n            console.log(\"SET_IS_FETCHING_FEED_REDUCER\", value)\r\n            return {...state, isFetching: value}\r\n        default: return state\r\n    }\r\n}","import { SET_ANNOUNCEMENT, SET_IS_FETCHING_ANNOUNCEMENT_REDUCER } from \"./announcementState\"\r\n\r\nexport type SetAnnouncementsACType = { type: typeof SET_ANNOUNCEMENT, payload: { value: boolean }}\r\nexport type SettIsFetchingAnnouncementReducerACType = { type: typeof SET_IS_FETCHING_ANNOUNCEMENT_REDUCER, payload: { value: boolean }}\r\n\r\nexport const setAnnouncementAC = (value:boolean):SetAnnouncementsACType => ({ type: SET_ANNOUNCEMENT, payload: {value} })\r\nexport const settIsFetchingAnnouncementReducerAC = (value:boolean):SettIsFetchingAnnouncementReducerACType => ({ type: SET_IS_FETCHING_ANNOUNCEMENT_REDUCER, payload: {value} })","import {SET_CURRENT_PAGE_SEARCH_REDUCER, SET_TOTAL_NUM_OF_PAGE_SEARCH_REDUCER} from \"../searchBoxState/searchBoxState\";\r\n\r\nexport const SET_IS_FETCHING_MY_ANNOUNCEMENTS_REDUCER = \"SET_IS_FETCHING_MY_ANNOUNCEMENTS_REDUCER\"\r\nexport const DELETE_MY_ANNOUNCEMENT_BY_ID = \"DELETE_MY_ANNOUNCEMENT_BY_ID\"\r\nexport const SET_MY_ANNOUNCEMENTS = \"SET_MY_ANNOUNCEMENTS\"\r\nexport const SET_CURRENT_PAGE_MY_ANNOUNCEMENTS_REDUCER = \"SET_CURRENT_PAGE_MY_ANNOUNCEMENTS_REDUCER\"\r\nexport const SET_TOTAL_NUM_OF_PAGE_MY_ANNOUNCEMENTS_REDUCER = \"SET_TOTAL_NUM_OF_PAGE_MY_ANNOUNCEMENTS_REDUCER\"\r\n\r\ntype initialStateType = typeof initialState\r\nconst initialState = {\r\n    myAnnouncements: [],\r\n    currentPage: 0,\r\n    totalNumOfPages: 1,\r\n    isFetching: false\r\n}\r\n\r\nexport const myAnnouncementsStateReducer = (state = initialState, action: any): initialStateType => {\r\n    const {type, payload } = action\r\n    const { value, id, withConcat = false } = payload || {}\r\n    const { myAnnouncements, currentPage } = state\r\n\r\n    switch (type) {\r\n        case SET_MY_ANNOUNCEMENTS :\r\n            console.log(\"SET_MY_ANNOUNCEMENTS\", value)\r\n            const newMyAnnouncementsSet = withConcat ? myAnnouncements.concat(value) : value\r\n            return {...state, myAnnouncements: newMyAnnouncementsSet}\r\n        case DELETE_MY_ANNOUNCEMENT_BY_ID :\r\n            console.log(\"DELETE_MY_ANNOUNCEMENT_BY_ID\", id)\r\n            const newMyAnnouncementsDel = myAnnouncements.filter( ({id: myAnnouncementId}:any) => myAnnouncementId !== id )\r\n            return {...state, myAnnouncements: newMyAnnouncementsDel}\r\n        case SET_IS_FETCHING_MY_ANNOUNCEMENTS_REDUCER :\r\n            console.log(\"SET_IS_FETCHING_MY_ANNOUNCEMENTS_REDUCER\", value)\r\n            return {...state, isFetching: value}\r\n        case SET_CURRENT_PAGE_MY_ANNOUNCEMENTS_REDUCER :\r\n            const newCurrentPage = currentPage + 1\r\n            console.log(\"SET_CURRENT_PAGE_SEARCH_REDUCER\", newCurrentPage)\r\n            return {...state, currentPage: newCurrentPage}\r\n        case SET_TOTAL_NUM_OF_PAGE_MY_ANNOUNCEMENTS_REDUCER :\r\n            console.log(\"SET_TOTAL_NUM_OF_PAGE_SEARCH_REDUCER\", value)\r\n            return {...state, totalNumOfPages: value}\r\n        default: return state\r\n    }\r\n}","import {\r\n    SET_MY_ANNOUNCEMENTS,\r\n    SET_IS_FETCHING_MY_ANNOUNCEMENTS_REDUCER,\r\n    SET_CURRENT_PAGE_MY_ANNOUNCEMENTS_REDUCER,\r\n    SET_TOTAL_NUM_OF_PAGE_MY_ANNOUNCEMENTS_REDUCER, DELETE_MY_ANNOUNCEMENT_BY_ID\r\n} from \"./myAnnouncementState\"\r\n\r\nexport type SetMyAnnouncementsACType =\r\n    { type: typeof SET_MY_ANNOUNCEMENTS, payload: { value: Array<any>, withConcat: boolean }}\r\n\r\nexport type SettIsFetchingMyAnnouncementReducerACType =\r\n    { type: typeof SET_IS_FETCHING_MY_ANNOUNCEMENTS_REDUCER, payload: { value: boolean }}\r\n\r\nexport type SetCurrentPageMyAnnouncementReducerACType = { type: typeof SET_CURRENT_PAGE_MY_ANNOUNCEMENTS_REDUCER }\r\nexport type DelMyAnnouncementByIdACType = { type: typeof DELETE_MY_ANNOUNCEMENT_BY_ID, payload: {id:number} }\r\nexport type SetTotalNumOfPageMyAnnouncementReducerACType = { type: typeof SET_TOTAL_NUM_OF_PAGE_MY_ANNOUNCEMENTS_REDUCER, payload: { value: number } }\r\n\r\n\r\nexport const setMyAnnouncementsAC = (value:Array<any>, withConcat: boolean):SetMyAnnouncementsACType =>\r\n    ({ type: SET_MY_ANNOUNCEMENTS, payload: {value, withConcat} })\r\n\r\nexport const delMyAnnouncementByIdAC = (id:number):DelMyAnnouncementByIdACType =>\r\n    ({ type: DELETE_MY_ANNOUNCEMENT_BY_ID, payload: {id} })\r\n\r\nexport const settIsFetchingMyAnnouncementsReducerAC = (value:boolean):SettIsFetchingMyAnnouncementReducerACType =>\r\n    ({ type: SET_IS_FETCHING_MY_ANNOUNCEMENTS_REDUCER, payload: {value} })\r\n\r\nexport const setCurrentPageMyAnnouncementReducerAC = ():SetCurrentPageMyAnnouncementReducerACType =>\r\n    ({ type: SET_CURRENT_PAGE_MY_ANNOUNCEMENTS_REDUCER })\r\n\r\nexport const setTotalNumOfPageMyAnnouncementReducerAC = (value:number):SetTotalNumOfPageMyAnnouncementReducerACType =>\r\n    ({ type: SET_TOTAL_NUM_OF_PAGE_MY_ANNOUNCEMENTS_REDUCER, payload: {value} })","import {RESET_TO_INITIAL_SEARCH_REDUCER} from \"../searchBoxState/searchBoxState\";\r\n\r\nexport const SET_ANNOUNCEMENTS_LIST = \"SET_ANNOUNCEMENTS_LIST\"\r\nexport const SET_CURRENT_PAGE_ANNOUNCEMENTS_LIST_REDUCER = \"SET_CURRENT_PAGE_ANNOUNCEMENTS_LIST_REDUCER\"\r\nexport const SET_TOTAL_NUM_OF_PAGE_ANNOUNCEMENTS_LIST_REDUCER = \"SET_TOTAL_NUM_OF_PAGE_ANNOUNCEMENTS_LIST_REDUCER\"\r\nexport const RESET_TO_INITIAL_ANNOUNCEMENTS_LIST_REDUCER = \"RESET_TO_INITIAL_ANNOUNCEMENTS_LIST_REDUCER\"\r\n\r\ntype initialStateType = typeof initialState\r\n\r\nconst initialState = {\r\n    announcementsList: [],\r\n    currentPage: 0,\r\n    totalNumOfPages: 1\r\n}\r\n\r\nexport const announcementsListStateReducer = (state = initialState, action: any): initialStateType => {\r\n\r\n    const {type, payload } = action\r\n    const { value, id, withConcat = false } = payload || {}\r\n    const { announcementsList, currentPage } = state\r\n\r\n    switch (type) {\r\n        case SET_ANNOUNCEMENTS_LIST:\r\n            console.log(\"SET_ANNOUNCEMENTS_LIST\", value)\r\n            const newMyAnnouncementsSet = withConcat ? announcementsList.concat(value) : value\r\n            return {...state, announcementsList: newMyAnnouncementsSet}\r\n        case SET_CURRENT_PAGE_ANNOUNCEMENTS_LIST_REDUCER:\r\n            const newCurrentPage = currentPage + 1\r\n            console.log(\"SET_CURRENT_PAGE_ANNOUNCEMENTS_LIST_REDUCER\", newCurrentPage)\r\n            return {...state, currentPage: newCurrentPage}\r\n        case SET_TOTAL_NUM_OF_PAGE_ANNOUNCEMENTS_LIST_REDUCER :\r\n            console.log(\"SET_TOTAL_NUM_OF_PAGE_ANNOUNCEMENTS_LIST_REDUCER\", value)\r\n            return {...state, totalNumOfPages: value}\r\n        case RESET_TO_INITIAL_ANNOUNCEMENTS_LIST_REDUCER :\r\n            console.log(\"RESET_TO_INITIAL_ANNOUNCEMENTS_LIST_REDUCER\")\r\n            return initialState\r\n        default: return state\r\n    }\r\n}","import {\r\n    RESET_TO_INITIAL_ANNOUNCEMENTS_LIST_REDUCER,\r\n    SET_ANNOUNCEMENTS_LIST,\r\n    SET_CURRENT_PAGE_ANNOUNCEMENTS_LIST_REDUCER,\r\n    SET_TOTAL_NUM_OF_PAGE_ANNOUNCEMENTS_LIST_REDUCER\r\n} from \"./announcementsListState\";\r\n\r\n\r\nexport type SetAnnouncementsListACType = { type: typeof SET_ANNOUNCEMENTS_LIST, payload: { value: Array<any>, withConcat: boolean }}\r\nexport type SetCurrentPageAnnouncementsListReducerACType = { type: typeof SET_CURRENT_PAGE_ANNOUNCEMENTS_LIST_REDUCER }\r\nexport type SetTotalNumOfPageAnnouncementsListReducerACType = { type: typeof SET_TOTAL_NUM_OF_PAGE_ANNOUNCEMENTS_LIST_REDUCER, payload: { value: number } }\r\nexport type ResetToInitialStateAnnouncementsListReducerACType = { type: typeof RESET_TO_INITIAL_ANNOUNCEMENTS_LIST_REDUCER }\r\n\r\nexport const setAnnouncementsListAC = (value:Array<any>, withConcat: boolean):SetAnnouncementsListACType =>\r\n    ({ type: SET_ANNOUNCEMENTS_LIST, payload: {value, withConcat} })\r\nexport const resetToInitialStateAnnouncementsListReducerAC = ():ResetToInitialStateAnnouncementsListReducerACType => ({ type: RESET_TO_INITIAL_ANNOUNCEMENTS_LIST_REDUCER })\r\nexport const setCurrentPageAnnouncementsListReducerAC = ():SetCurrentPageAnnouncementsListReducerACType =>\r\n    ({ type: SET_CURRENT_PAGE_ANNOUNCEMENTS_LIST_REDUCER })\r\n\r\nexport const setTotalNumOfPageAnnouncementsListReducerAC = (value:number):SetTotalNumOfPageAnnouncementsListReducerACType =>\r\n    ({ type: SET_TOTAL_NUM_OF_PAGE_ANNOUNCEMENTS_LIST_REDUCER, payload: {value} })","import {SET_IS_FETCHING_MAIN_STATE, SET_SUBWAY_STATIONS_DATA} from \"./mainState\";\r\n\r\nexport type MainStateActionTypes  = SetIsFetchingMainStateACType & SetSubwayStationsDataACType\r\n\r\nexport type SetIsFetchingMainStateACType = { type: typeof SET_IS_FETCHING_MAIN_STATE, payload: { value: boolean }}\r\nexport type SetSubwayStationsDataACType = { type: typeof SET_SUBWAY_STATIONS_DATA, payload: { value: Array<any> }}\r\n\r\n\r\nexport const setIsFetchingMainStateAC = (value:boolean):SetIsFetchingMainStateACType => ({ type: SET_IS_FETCHING_MAIN_STATE, payload: {value} })\r\nexport const setSubwayStationsDataAC = (value:Array<any>):SetSubwayStationsDataACType => ({ type: SET_SUBWAY_STATIONS_DATA, payload: {value} })","import {AuthorizationData, NewAnnouncementData, RegistrationData, testAPI} from \"../../api/testAPI\";\r\nimport {Dispatch} from \"redux\";\r\nimport {AppStateType} from \"../store\";\r\nimport {\r\n    logoutOrDeleteUseAC,\r\n    LogoutOrDeleteUserACType,\r\n    setIsAuthAC,\r\n    SetIsAuthACType,\r\n    setIsCorrectAuthDataAC,\r\n} from \"../reducers/authorizationState/authorizationStateActionCreators\";\r\nimport {CallHistoryMethodAction, push} from \"connected-react-router\";\r\nimport {\r\n    setIsFetchingSearchReducerAC,\r\n    SetIsFetchingSearchReducerACType,\r\n    setSearchedDataAC,\r\n    SetSearchedDataAType,\r\n    setTotalNumOfPageSearchReducerAC,\r\n    SetTotalNumOfPageSearchReducerACType\r\n} from \"../reducers/searchBoxState/searchBoxStateActionCreators\";\r\nimport {\r\n    SetetIsFetchingFeedReducerACType,\r\n    setIsFetchingFeedReducerAC,\r\n    setLastAnnouncementsAC,\r\n    SetLastAnnouncementsACType\r\n} from \"../reducers/feedState/feedStateActionCreators\";\r\nimport {SettingsFieldType} from \"../reducers/settingsState/settingsState\";\r\nimport {\r\n    setSettingsInLocalStorageByFieldAC,\r\n    SetSettingsInLocalStorageByFieldACType\r\n} from \"../reducers/settingsState/settingsStateActionCreators\";\r\nimport {\r\n    setAnnouncementAC,\r\n    SetAnnouncementsACType,\r\n    settIsFetchingAnnouncementReducerAC,\r\n    SettIsFetchingAnnouncementReducerACType\r\n} from \"../reducers/announcementState/announcementStateActionCreators\";\r\nimport {\r\n    delMyAnnouncementByIdAC,\r\n    DelMyAnnouncementByIdACType,\r\n    setMyAnnouncementsAC,\r\n    SetMyAnnouncementsACType,\r\n    SettIsFetchingMyAnnouncementReducerACType,\r\n    settIsFetchingMyAnnouncementsReducerAC,\r\n    setTotalNumOfPageMyAnnouncementReducerAC,\r\n    SetTotalNumOfPageMyAnnouncementReducerACType\r\n} from \"../reducers/myAnnouncementState/myAnnouncementStateActionCreators\";\r\nimport {PATH_FEED, PATH_MY_ANNOUNCEMENTS} from \"../../app/App\";\r\nimport {\r\n    setAnnouncementsListAC,\r\n    SetAnnouncementsListACType,\r\n    SetCurrentPageAnnouncementsListReducerACType,\r\n    setTotalNumOfPageAnnouncementsListReducerAC,\r\n    SetTotalNumOfPageAnnouncementsListReducerACType\r\n} from \"../reducers/announcementsListState/announcementsListStateActionCreators\";\r\nimport {\r\n    setIsFetchingMainStateAC,\r\n    SetIsFetchingMainStateACType,\r\n    setSubwayStationsDataAC,\r\n    SetSubwayStationsDataACType\r\n} from \"../reducers/mainState/mainStateActionCreators\";\r\nimport {\r\n    resetToInitialByPageFormReducerAC,\r\n    ResetToInitialByPageFormReducerACType\r\n} from \"../reducers/formState/formStateActionCreators\";\r\nimport defaultAvatar from \"../../pictures/defaultAvatar.jpg\"\r\n\r\ntype GetStateType = () => AppStateType\r\n\r\n\r\n//--------------------AUTHORIZATION---------------------//\r\ntype SendAuthDispatchType = Dispatch<SetIsAuthACType | SetIsFetchingMainStateACType | any | SetSettingsInLocalStorageByFieldACType | CallHistoryMethodAction | ResetToInitialByPageFormReducerACType>\r\nexport const sendAuthorizationOrRegistrationThunk = (data: AuthorizationData & RegistrationData) => (dispatch: SendAuthDispatchType, getState: any) => {\r\n    const {authorizationState: {isRegistration}} = getState()\r\n    dispatch(setIsFetchingMainStateAC(true))\r\n    console.log(\"sendAuthorizationOrRegistrationThunk\", data)\r\n\r\n    const getRequestMethod = () => isRegistration ? \"postRegistrationData\" : \"postAuthorizationData\"\r\n    testAPI[getRequestMethod()](data)\r\n        .then(response => {\r\n            if (response.status !== 200)\r\n                throw `AUTHORIZATION DATA IS NOT POSTED STATUS ${response.status}`\r\n            return response.json()\r\n        })\r\n        .then(({result = true}) => {\r\n            dispatch(setIsFetchingMainStateAC(false))\r\n            if (result) {\r\n                dispatch(getUserInfoThunk())\r\n                dispatch(setSettingsInLocalStorageByFieldAC(data.login,\"login\"))\r\n                dispatch(setSettingsInLocalStorageByFieldAC(data.password,\"password\"))\r\n                dispatch(setIsAuthAC(true))\r\n            } else dispatch(setIsCorrectAuthDataAC(false))\r\n        })\r\n        .catch(err => console.error(err))\r\n}\r\n\r\n//--------------------SEARCH-BOX---------------------//\r\ntype GetSubwayStationsDispatchType = Dispatch<SetSubwayStationsDataACType>\r\nexport const getSubwayStationsThunk = () => (dispatch: GetSubwayStationsDispatchType) => {\r\n    console.log(\"getSubwayStationsThunk\")\r\n\r\n    testAPI[\"getSubwayStations\"]()\r\n        .then(response => {\r\n            if (response.status !== 200)\r\n                throw `CANNOT FETCH GET REQUEST ${response.status}`\r\n            return response.json()\r\n        })\r\n        .then(data => {\r\n            dispatch(setSubwayStationsDataAC(data))\r\n        })\r\n        .catch(err => console.error(err))\r\n}\r\n\r\ntype GetAnnouncementsByFiltersDispatchType = Dispatch<SetSearchedDataAType | SetTotalNumOfPageSearchReducerACType | SetIsFetchingSearchReducerACType>\r\nexport const getAnnouncementsByFiltersThunk = (withConcat: boolean = false) => (dispatch: GetAnnouncementsByFiltersDispatchType, getState: any) => {\r\n    dispatch(setIsFetchingSearchReducerAC(true))\r\n    console.log(\"getAnnouncementsByFiltersThunk\")\r\n    const {currentPage, searchConfig: {categoryId, subwayStations, searchValue}} = getState().searchBoxState\r\n    testAPI[\"getAnnouncementsByFilters\"](currentPage, searchValue, categoryId, subwayStations)\r\n        .then(response => {\r\n            if (response.status !== 200)\r\n                throw `CANNOT FETCH GET REQUEST ${response.status}`\r\n            return response.json()\r\n        })\r\n        .then(({totalNumOfPages, announcements}) => {\r\n            dispatch(setTotalNumOfPageSearchReducerAC(totalNumOfPages))\r\n            dispatch(setSearchedDataAC(announcements, withConcat))\r\n            dispatch(setIsFetchingSearchReducerAC(false))\r\n        })\r\n        .catch(err => console.error(err))\r\n}\r\n\r\n//--------------------FEED-PAGE--------------------//\r\ntype getLastAnnouncementsDispatchType = Dispatch<SetetIsFetchingFeedReducerACType | SetLastAnnouncementsACType>\r\nexport const getLastAnnouncementsThunk = () => (dispatch: getLastAnnouncementsDispatchType) => {\r\n    dispatch(setIsFetchingFeedReducerAC(true))\r\n    console.log(\"sendAuthorizationOrRegistrationThunk\")\r\n\r\n    testAPI[\"getLastAnnouncements\"]()\r\n        .then(response => {\r\n            if (response.status !== 200)\r\n                throw `CANNOT FETCH GET REQUEST ${response.status}`\r\n            return response.json()\r\n        })\r\n        .then((data) => {\r\n            dispatch(setLastAnnouncementsAC(data))\r\n            dispatch(setIsFetchingFeedReducerAC(false))\r\n        })\r\n        .catch(err => console.error(err))\r\n}\r\n//--------------------SETTINGS-PAGE--------------------//\r\ntype PostSettingByFieldDispatchType = Dispatch<SetSettingsInLocalStorageByFieldACType>\r\nexport const postSettingByFieldThunk = (data: any, field: SettingsFieldType) => (dispatch: PostSettingByFieldDispatchType) => {\r\n    console.log(\"postSettingByFieldThunk\")\r\n    const [value] = Object.values(data)\r\n\r\n    testAPI[\"postSettingsByField\"](data, field)\r\n        .then(response => {\r\n            if (response.status !== 200)\r\n                throw `CANNOT FETCH POST REQUEST ${response.status}`\r\n            return response.json()\r\n        })\r\n        .then(({result = false}) => {\r\n            result && dispatch(setSettingsInLocalStorageByFieldAC(value, field))\r\n        })\r\n        .catch(err => console.error(err))\r\n}\r\n\r\ntype PostLogoutOrDeleteUserType = Dispatch<LogoutOrDeleteUserACType | CallHistoryMethodAction>\r\ntype LogoutOrDeleteType = \"logout\" | \"delete\"\r\nexport const postLogoutOrDeleteUser = (logoutOrDelete: LogoutOrDeleteType) => (dispatch: PostLogoutOrDeleteUserType) => {\r\n    console.log(\"postLogoutOrDeleteUser\")\r\n\r\n    const getRequestByLogoutOrDelete = () => {\r\n        if (logoutOrDelete === \"logout\") return \"postLogout\"\r\n        if (logoutOrDelete === \"delete\") return \"postDelete\"\r\n        return \"postLogout\"\r\n    }\r\n\r\n    testAPI[getRequestByLogoutOrDelete()]()\r\n        .then(response => {\r\n            if (response.status !== 200)\r\n                throw `CANNOT FETCH POST REQUEST ${response.status}`\r\n            return response.json()\r\n        })\r\n        .then(({result = false}) => {\r\n            if (result) {\r\n                dispatch(logoutOrDeleteUseAC())\r\n                dispatch(push(PATH_FEED))\r\n            }\r\n        })\r\n        .catch(err => console.error(err))\r\n}\r\n\r\n//--------------------ANNOUNCEMENT-PAGE--------------------//\r\ntype GetAnnouncementByCategoryAndIdDispatchType = Dispatch<SettIsFetchingAnnouncementReducerACType | SetAnnouncementsACType>\r\nexport const getAnnouncementByCategoryAndIdThunk = (category: string, id: number) => (dispatch: GetAnnouncementByCategoryAndIdDispatchType) => {\r\n    dispatch(settIsFetchingAnnouncementReducerAC(true))\r\n    console.log(\"getAnnouncementByCategoryAndIdThunk\")\r\n\r\n    testAPI[\"getAnnouncementByCategoryAndId\"](category, id)\r\n        .then(response => {\r\n            if (response.status !== 200)\r\n                throw `CANNOT FETCH GET REQUEST ${response.status}`\r\n            return response.json()\r\n        })\r\n        .then((data) => {\r\n            dispatch(setAnnouncementAC(data))\r\n            dispatch(settIsFetchingAnnouncementReducerAC(false))\r\n        })\r\n        .catch(err => console.error(err))\r\n}\r\n\r\n//--------------------MY-ANNOUNCEMENT-PAGE--------------------//\r\ntype GetMyAnnouncementsDispatchType = Dispatch<SetMyAnnouncementsACType | SettIsFetchingMyAnnouncementReducerACType | SetTotalNumOfPageMyAnnouncementReducerACType>\r\nexport const getMyAnnouncementsThunk = (withConcat = false) => (dispatch: GetMyAnnouncementsDispatchType, getState: any) => {\r\n    dispatch(settIsFetchingMyAnnouncementsReducerAC(true))\r\n    console.log(\"getMyAnnouncementsThunk\")\r\n\r\n    const {myAnnouncementsState: {currentPage}} = getState()\r\n\r\n    testAPI[\"getMyAnnouncements\"](currentPage)\r\n        .then(response => {\r\n            if (response.status !== 200)\r\n                throw `CANNOT FETCH GET REQUEST ${response.status}`\r\n            return response.json()\r\n        })\r\n        .then(({totalNumOfPages, announcements}) => {\r\n            dispatch(setTotalNumOfPageMyAnnouncementReducerAC(totalNumOfPages))\r\n            dispatch(setMyAnnouncementsAC(announcements, withConcat))\r\n            dispatch(settIsFetchingMyAnnouncementsReducerAC(false))\r\n        })\r\n        .catch(err => console.error(err))\r\n}\r\n\r\ntype PostDeleteAnnouncementDispatchType = Dispatch<SettIsFetchingMyAnnouncementReducerACType | DelMyAnnouncementByIdACType>\r\nexport const postDeleteAnnouncementThunk = (id: number) => (dispatch: PostDeleteAnnouncementDispatchType) => {\r\n    dispatch(settIsFetchingMyAnnouncementsReducerAC(true))\r\n    console.log(\"postDeleteAnnouncementThunk\")\r\n\r\n    testAPI[\"postDeleteAnnouncement\"](id)\r\n        .then(response => {\r\n            if (response.status !== 200)\r\n                throw `CANNOT FETCH POST REQUEST ${response.status}`\r\n            return response.json()\r\n        })\r\n        .then(({result = false}) => {\r\n            result && dispatch(delMyAnnouncementByIdAC(id))\r\n            dispatch(settIsFetchingMyAnnouncementsReducerAC(false))\r\n        })\r\n        .catch(err => console.error(err))\r\n}\r\n\r\n//--------------------CREATE-ANNOUNCEMENT--------------------//\r\ntype PostNewAnnouncementDispatchType = Dispatch<SetIsFetchingMainStateACType | CallHistoryMethodAction>\r\nexport const postNewAnnouncementThunk = (data: NewAnnouncementData) => (dispatch: PostNewAnnouncementDispatchType) => {\r\n    dispatch(setIsFetchingMainStateAC(true))\r\n    console.log(\"postNewAnnouncement\")\r\n\r\n    testAPI[\"postNewAnnouncement\"](data)\r\n        .then(response => {\r\n            if (response.status !== 200) throw `CANNOT FETCH POST REQUEST ${response.status}`\r\n            else {\r\n                dispatch(setIsFetchingMainStateAC(true))\r\n                dispatch(push(PATH_MY_ANNOUNCEMENTS))\r\n            }\r\n        })\r\n        .catch(err => console.error(err))\r\n}\r\n\r\n//--------------------ANNOUNCEMENTS-LIST-PAGE--------------------//\r\ntype GetAnnouncementsListDispatchType = Dispatch<SetTotalNumOfPageAnnouncementsListReducerACType | SetIsFetchingMainStateACType | SetAnnouncementsListACType | SetCurrentPageAnnouncementsListReducerACType>\r\nexport const getAnnouncementsListThunk = (category: string, withConcat = false) => (dispatch: GetAnnouncementsListDispatchType, getState: any) => {\r\n    dispatch(setIsFetchingMainStateAC(true))\r\n    console.log(\"getAnnouncementsListThunk\")\r\n\r\n    const {announcementsListState: {currentPage}} = getState()\r\n\r\n    testAPI[\"getAnnouncementsList\"](currentPage, category)\r\n        .then(response => {\r\n            if (response.status !== 200)\r\n                throw `CANNOT FETCH GET REQUEST ${response.status}`\r\n            return response.json()\r\n        })\r\n        .then(({totalNumOfPages, announcements}) => {\r\n            dispatch(setTotalNumOfPageAnnouncementsListReducerAC(totalNumOfPages))\r\n            dispatch(setAnnouncementsListAC(announcements, withConcat))\r\n            dispatch(setIsFetchingMainStateAC(false))\r\n        })\r\n        .catch(err => console.error(err))\r\n}\r\n//--------------------GET-USER-INFO--------------------//\r\ntype GetUserInfoDispatchType = Dispatch<SetSettingsInLocalStorageByFieldACType>\r\ntype GetUserInfoThunkType = typeof getUserInfoThunk\r\nexport const getUserInfoThunk = () => (dispatch:GetUserInfoDispatchType) => {\r\n    console.log(\"getUserInfoThunk\")\r\n    testAPI.getUserInfo()\r\n        .then(response => {\r\n            if (response.status !== 200)\r\n                throw `CANNOT FETCH GET REQUEST ${response.status}`\r\n            return response.json()\r\n        })\r\n        .then( ({avatar = defaultAvatar, ...restUserData}) => {\r\n            console.log(\"RESPONSE\", restUserData)\r\n            dispatch(setSettingsInLocalStorageByFieldAC(avatar, \"avatar\"))\r\n            const userDataEntries = Object.entries(restUserData)\r\n            userDataEntries.forEach( ([field, value]) => {\r\n                console.log(field, value)\r\n                dispatch(setSettingsInLocalStorageByFieldAC(value, field))\r\n            })\r\n        })\r\n}","\r\nexport const getIsRegistrationSelector = (state: any) => state.authorizationState.isRegistration\r\nexport const getIsAuthSelector = (state: any) => state.authorizationState.isAuth()\r\nexport const getIsCorrectAuthDataSelector = (state: any) => state.authorizationState.isCorrectAuthData","\r\nexport const getIsFetchingMainStateSelector = (state: any) => state.mainState.isFetching\r\nexport const getSubwayStationsDataSelector = (state: any) => state.mainState.subwayStationsData\r\nexport const getCategoriesDataSelector = (state: any) => state.mainState.categoriesData\r\n\r\nexport const getTheSubCategoriesSelector = (categoriesData: Array<any>, activeClassName?: string) => {\r\n    //Проверка содержит ли объект с категорией подкатегории\r\n    const isIncludesSubCategory = (categoryData: Object) => \"subCategories\" in categoryData\r\n    //Возвращает подготовленный объект категории\r\n    const prepareCategoryToPush = (categoryData: any) => {\r\n        const {id, label, category} = categoryData\r\n        const baseCategory = {id, label, category}\r\n        return isIncludesSubCategory(categoryData) ?\r\n            {...baseCategory, className: activeClassName} : baseCategory\r\n    }\r\n    //В процессе итерации достаём подкатегории из объекта категории\r\n    return categoriesData.reduce( (newCategoriesData: any, category: any) => {\r\n        const {subCategories} = category\r\n        newCategoriesData.push(prepareCategoryToPush(category))\r\n        isIncludesSubCategory(category) && newCategoriesData.push(...subCategories)\r\n        return newCategoriesData\r\n    }, [] )\r\n}","import React from 'react';\r\nimport \"./buttonStyles.css\"\r\n\r\ntype ButtonPropsType = {\r\n    onClickHandler?: ((event: React.MouseEvent<HTMLDivElement, MouseEvent>) => void)\r\n    label: string\r\n    isDisabled?: boolean\r\n    className?: string\r\n}\r\n\r\nconst Button = (props: ButtonPropsType) => {\r\n\r\n    const {className, isDisabled = false, label, onClickHandler} = props\r\n\r\n  return isDisabled ?\r\n       <div className={`btn ${className}`}>Отправка...</div> :\r\n      <div onClick={onClickHandler} className={`btn ${className}`}>{label}</div>\r\n\r\n}\r\n\r\nexport default Button;\r\n","import {initialStateCategory, initialStateSubway} from \"../../../components/searchBox/select/select\";\r\nimport {getItemFromLocalStorage} from \"../mainState/mainState\";\r\n\r\nexport const SET_VALUE_BY_PAGE_AND_FIELD_FORM_REDUCER = \"SET_VALUE_BY_PAGE_AND_FIELD_FORM_REDUCER\"\r\nexport const RESET_TO_INITIAL_BY_PAGE_FORM_REDUCER = \"RESET_TO_INITIAL_BY_PAGE_FORM_REDUCER\"\r\nexport const SET_IS_VALID_BY_PAGE_AND_FIELD_FORM_REDUCER = \"SET_IS_VALID_BY_PAGE_AND_FIELD_FORM_REDUCER\"\r\nexport const CHECK_IS_READY_TO_SEND_BY_PAGE_FORM_REDUCER = \"CHECK_IS_READY_TO_SEND_BY_PAGE_FORM_REDUCER\"\r\n\r\nexport type FormReducerPagesType = \"authorization\" | \"registration\" | \"createAnnouncement\" | \"settings\"\r\nexport type FormReducerFieldsType = FormReducerAuthorizationFieldsType | FormReducerRegistrationFieldsType\r\nexport type FormReducerAuthorizationFieldsType = \"login\" | \"password\"\r\nexport type FormReducerRegistrationFieldsType = \"name\" | \"login\" | \"phoneNumber\" | \"password\"\r\n\r\n\r\nexport const defaultInitialStateForFormField = {value: \"\", isValid: true}\r\n\r\nconst initialState = {\r\n    authorization : {\r\n        login: defaultInitialStateForFormField,\r\n        password: defaultInitialStateForFormField,\r\n        isReadyToSend: false\r\n    },\r\n    registration : {\r\n        name: defaultInitialStateForFormField,\r\n        login: defaultInitialStateForFormField,\r\n        phoneNumber: defaultInitialStateForFormField,\r\n        password: defaultInitialStateForFormField,\r\n        isReadyToSend: false\r\n    },\r\n    createAnnouncement : {\r\n        photos: {value: [], isValid: true},\r\n        name: defaultInitialStateForFormField,\r\n        price: defaultInitialStateForFormField,\r\n        category: {value: initialStateCategory, isValid: true},\r\n        description: defaultInitialStateForFormField,\r\n        phone: defaultInitialStateForFormField,\r\n        subway: {value: initialStateSubway, isValid: true},\r\n        isReadyToSend: false\r\n    },\r\n    settings : {\r\n        avatar: defaultInitialStateForFormField,\r\n        name: defaultInitialStateForFormField,\r\n        phone: defaultInitialStateForFormField,\r\n        login: defaultInitialStateForFormField,\r\n        isReadyToSend: false\r\n    }\r\n}\r\n\r\nconst checkIsValid = (field: string, value: any) => {\r\n    console.log(\"checkIsValid\", field, value)\r\n    switch (field) {\r\n        case \"name\" :\r\n            return !!value.length\r\n        case \"password\" :\r\n            return value.length <= 24 && value.length > 6\r\n        case \"phoneNumber\" :\r\n            return !!value.length\r\n        case \"login\" :\r\n            return !!value.length\r\n        case \"subway\":\r\n            return JSON.stringify(value) !== JSON.stringify(initialStateSubway)\r\n        case \"price\":\r\n            return !!value.length\r\n        case \"phone\":\r\n            return !!value.length\r\n        case \"category\":\r\n            return JSON.stringify(value) !== JSON.stringify(initialStateCategory)\r\n        case \"description\":\r\n            return !!value.length\r\n        default : return true\r\n    }\r\n}\r\n\r\nexport const prepareFormStateByPageForSend = ({isReadyToSend, ...restFormState}: any) => {\r\n    const stateEntries = Object.entries(restFormState)\r\n    const defaultCondition = (postData: any, key: any, value: any) => {\r\n        postData[key] = value\r\n        return postData\r\n    }\r\n    return (condition: Function = defaultCondition) => stateEntries.reduce( (postData: any, [key, {value}]: any) => {\r\n        return condition(postData, key, value)\r\n    }, {})\r\n}\r\n\r\nconst formStateReducer = (state = initialState, action: any) => {\r\n    const {type, payload} = action\r\n    const {field = \"\", value = \"\", page = \"\" } = payload || {}\r\n    // @ts-ignore\r\n    const stateByPage = state[page] || {}\r\n    const stateByField = stateByPage[field]\r\n\r\n    switch (type) {\r\n        case SET_VALUE_BY_PAGE_AND_FIELD_FORM_REDUCER :\r\n            console.log(\"SET_VALUE_BY_PAGE_AND_FIELD_FORM_REDUCER\", page, value)\r\n            return {...state, [page] : {...stateByPage, [field] : {...stateByField, value, isValid: true}} }\r\n        case SET_IS_VALID_BY_PAGE_AND_FIELD_FORM_REDUCER :\r\n            const isValid = checkIsValid(field, stateByField.value)\r\n            console.log(\"SET_IS_VALID_BY_PAGE_AND_FIELD_FORM_REDUCER\", field, page)\r\n            return {...state, [page] : {...stateByPage, [field] : {...stateByField, isValid}} }\r\n        case CHECK_IS_READY_TO_SEND_BY_PAGE_FORM_REDUCER :\r\n            console.log(\"SET_IS_VALID_BY_PAGE_AND_FIELD_FORM_REDUCER\", page)\r\n            const stateKeys = Object.keys(stateByPage)\r\n            const newState = stateKeys.reduce( (newState: any, field: any) => {\r\n                const {value} = stateByPage[field]\r\n                const isValid = checkIsValid(field, value)\r\n                if(!isValid) {\r\n                    console.log(\"ISVALID FALSE\")\r\n                    newState.isReadyToSend = false\r\n                    newState[field].isValid = false\r\n                }\r\n                return newState\r\n            }, {...stateByPage, isReadyToSend: true} )\r\n            return {...state, [page] : newState }\r\n        case RESET_TO_INITIAL_BY_PAGE_FORM_REDUCER :\r\n            // @ts-ignore\r\n            return {...state, [page] : initialState[page] }\r\n        default: return state\r\n    }\r\n}\r\n\r\nexport default formStateReducer","import {\r\n    FormReducerFieldsType,\r\n    SET_VALUE_BY_PAGE_AND_FIELD_FORM_REDUCER,\r\n    SET_IS_VALID_BY_PAGE_AND_FIELD_FORM_REDUCER,\r\n    CHECK_IS_READY_TO_SEND_BY_PAGE_FORM_REDUCER, RESET_TO_INITIAL_BY_PAGE_FORM_REDUCER, FormReducerPagesType,\r\n\r\n} from \"./formState\"\r\nimport {SET_LAST_ANNOUNCEMENTS} from \"../feedState/feedState\";\r\n\r\nexport type ResetToInitialByPageFormReducerACType = { type: typeof RESET_TO_INITIAL_BY_PAGE_FORM_REDUCER, payload: { page: FormReducerPagesType }}\r\n\r\n\r\nexport const seValueFormReducerAC = ( value: string | number, field: FormReducerFieldsType, page: FormReducerPagesType,) =>\r\n    ({ type: SET_VALUE_BY_PAGE_AND_FIELD_FORM_REDUCER, payload: {value, field, page} })\r\n\r\nexport const setIsValidFormReducerAC = (field: FormReducerFieldsType, page: FormReducerPagesType ) =>\r\n    ({ type: SET_IS_VALID_BY_PAGE_AND_FIELD_FORM_REDUCER, payload: {field, page} })\r\n\r\nexport const checkIsReadyToSendByPageFormReducerAC = (page: FormReducerPagesType ) =>\r\n    ({ type: CHECK_IS_READY_TO_SEND_BY_PAGE_FORM_REDUCER, payload: {page} })\r\n\r\nexport const resetToInitialByPageFormReducerAC = (page: FormReducerPagesType): ResetToInitialByPageFormReducerACType =>\r\n    ({ type: RESET_TO_INITIAL_BY_PAGE_FORM_REDUCER, payload: {page} })\r\n","import { FormReducerFieldsType, FormReducerPagesType } from \"./formState\"\r\n\r\nexport const getFieldsByPageFormReducerSelector = (state: any, page: FormReducerPagesType) => state.formState[page]\r\n// export const getIsValidByFieldFormReducerSelector = (state: any, field: FormReducerFieldsType) => state.formState[field].isValid\r\n","import React, {ChangeEvent, useCallback, useEffect} from 'react';\nimport \"./authorizationPopupBoxStyles.css\"\nimport TextInput from \"../../textInput/textInput\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {sendAuthorizationOrRegistrationThunk} from \"../../../redux/thunks/thunks\";\nimport {\n    setIsCorrectAuthDataAC,\n    setIsRegistrationAC,\n} from \"../../../redux/reducers/authorizationState/authorizationStateActionCreators\";\nimport {\n    getIsCorrectAuthDataSelector,\n    getIsRegistrationSelector\n} from \"../../../redux/reducers/authorizationState/authorizationStateSelectors\";\nimport {getIsFetchingMainStateSelector} from \"../../../redux/reducers/mainState/mainStateSelectors\";\nimport Button from \"../../button/button\";\nimport {\n    checkIsReadyToSendByPageFormReducerAC, resetToInitialByPageFormReducerAC,\n    setIsValidFormReducerAC,\n    seValueFormReducerAC\n} from \"../../../redux/reducers/formState/formStateActionCreators\";\nimport {getFieldsByPageFormReducerSelector} from \"../../../redux/reducers/formState/formStateSelectors\";\nimport {prepareFormStateByPageForSend} from \"../../../redux/reducers/formState/formState\";\n\n\ntype fieldTypes = \"password\" | \"login\" | \"name\" | string\n\ntype PropsType = {\n    closeModalWindow?: Function\n}\n\nconst AuthorizationPopupBox = (props: PropsType) => {\n\n    //------MAP-STATE-TO-PROPS-----//\n    const isRegistration = useSelector(getIsRegistrationSelector)\n    const isCorrectAuthData = useSelector(getIsCorrectAuthDataSelector)\n    const isFetching = useSelector(getIsFetchingMainStateSelector)\n    const authFormState: any = useSelector((state) => getFieldsByPageFormReducerSelector(state, \"authorization\"))\n    const regFormState: any = useSelector((state) => getFieldsByPageFormReducerSelector(state, \"registration\"))\n    const currentFormState = (isRegistration ? regFormState : authFormState) || {}\n    const currentPage = isRegistration ? \"registration\" : \"authorization\"\n    const {isReadyToSend} = currentFormState\n\n    //-----MAP-DISPATCH-TO-PROPS----//\n    const dispatch = useDispatch()\n    const sendAuthorizationOrRegistration = useCallback((data) => dispatch(sendAuthorizationOrRegistrationThunk(data)), [dispatch])\n    const setIsRegistration = useCallback((boolean) => dispatch(setIsRegistrationAC(boolean)), [dispatch])\n    const seValueFormReducer = useCallback((value, field) => dispatch(seValueFormReducerAC(value, field, currentPage)), [dispatch, isRegistration])\n    const setIsCorrectAuthData = useCallback(() => dispatch(setIsCorrectAuthDataAC(true)), [dispatch])\n    const setIsValidFormReducer = useCallback((field) => dispatch(setIsValidFormReducerAC(field, currentPage)), [dispatch, isRegistration])\n    const resetToInitialByPageFormReducer = useCallback((page) => dispatch(resetToInitialByPageFormReducerAC(page)), [dispatch, isRegistration])\n    const checkIsReadyToSend = useCallback(() => dispatch(checkIsReadyToSendByPageFormReducerAC(currentPage)), [dispatch, isRegistration])\n\n    //------WILL-UNMOUNT-LIFE-CYCLE-----//\n    useEffect(() => {\n        return () => {\n            resetToInitialByPageFormReducer(\"authorization\")\n            resetToInitialByPageFormReducer(\"registration\")\n        }\n    }, [])\n\n    //------DID-UPDATE-LIFE-CYCLE-----//\n    useEffect(() => {\n        if(isReadyToSend) {\n            const postData = prepareFormStateByPageForSend(currentFormState)()\n            sendAuthorizationOrRegistration(postData)\n        }\n    }, [isReadyToSend])\n\n    //Функция - обработчик события изменеия в инпуте. Проверка на валидность значения в инпуте.\n    const onChangeHandler = (event: React.ChangeEvent<HTMLInputElement>, field: fieldTypes) => {\n        const {currentTarget: {value}} = event\n        console.log(\"onChangeHandler\", field, value)\n        seValueFormReducer(value, field)\n        !isCorrectAuthData && setIsCorrectAuthData()\n    }\n\n    //Функция возращает массив с конфигурацией для полей ввода\n    const getInputsConfig = () => {\n        const {name = {}, login = {}, password = {}, phoneNumber = {}} = currentFormState\n        return [\n            {\n                field: \"name\",\n                label: \"Имя\",\n                inputType: \"text\",\n                placeholder: \"Введите ваше имя\",\n                value: name.value,\n                isValid: name.isValid\n            },\n            {\n                field: \"phoneNumber\",\n                label: \"Номер телефона\",\n                inputType: \"number\",\n                placeholder: \"Введите ваш телефон\",\n                value: phoneNumber.value,\n                isValid: phoneNumber.isValid\n            },\n            {\n                field: \"login\",\n                label: \"E-mail\",\n                inputType: \"text\",\n                placeholder: \"Введите ваш E-mail\",\n                value: login.value,\n                isValid: login.isValid\n            },\n            {\n                field: \"password\",\n                label: \"Пароль\",\n                inputType: \"password\",\n                placeholder: \"Введите ваш пароль\",\n                value: password.value,\n                isValid: password.isValid\n            },\n        ]\n    }\n\n    //Функция возращает кнопку для отображения в зависимости от условия\n    const getBtnByIsExistUserForSwitch = () => {\n        return <span onClick={() => setIsRegistration(!isRegistration)} className={\"authorization-popupBox__reg-btn\"}>\n            {isRegistration ? \"Войти\" : \"Зарегестрироваться\" }\n        </span>\n    }\n\n    return (\n        <div className=\"authorization-popupBox position-relative\">\n            <h1 className={\"authorization-popupBox__title\"}>{!isRegistration ? \"Вход\" : \"Регистрация\"}</h1>\n            <hr className={\"my-3\"}/>\n            <div className=\"authorization-popupBox__inputs-wrapper mb-2\">\n                { getInputsConfig().map( ({field, inputType, placeholder, value, label, isValid}) => {\n                    if(!isRegistration && field == \"name\") return null\n                    if(!isRegistration && field == \"phoneNumber\") return null\n                    return <TextInput className={\"mb-4\"} key={field} label={label}\n                                      isValid={isValid} placeholder={placeholder}\n                                      inputType={inputType} value={value}\n                                      onBlurHandler={() => setIsValidFormReducer(field)}\n                                      onChangeHandler={(event: ChangeEvent<HTMLInputElement>) => onChangeHandler(event, field)}/>\n                }) }\n            </div>\n            {!isCorrectAuthData && !isRegistration && <h4>Введённые данные не верны</h4>}\n            <Button onClickHandler={checkIsReadyToSend} label={!isRegistration ? \"Войти\" : \"Зарегестрироваться\"}\n                    isDisabled={isFetching} className={\"authorization-popupBox__btn btn-success\"}/>\n            {getBtnByIsExistUserForSwitch()}\n        </div>\n    );\n}\n\nexport default AuthorizationPopupBox;\n","import React from 'react';\nimport ModalWindow from \"../modalWindow\";\nimport AuthorizationPopupBox from \"./authorizationPopupBox\";\nimport Button from \"../../button/button\";\n\ntype AuthorizationModalWindowType = {\n  isActiveFromProps?: boolean\n  alertCloseHandler?:Function\n}\nconst AuthorizationModalWindow = (props: AuthorizationModalWindowType) => {\n\n  const {isActiveFromProps = false, alertCloseHandler} = props\n\n  return (\n      <ModalWindow alertCloseHandler={alertCloseHandler} isActiveFromProps={isActiveFromProps} withOpenBtn={true} modal={<AuthorizationPopupBox/>}>{\n          (openModalWindow:any) =>\n              <Button label=\"Вход и регистрация\" onClickHandler={openModalWindow} className=\"btn-outline-light\"/>\n      }</ModalWindow>\n  );\n}\n\nexport default AuthorizationModalWindow;\n","import React from 'react';\nimport \"./alertPopupBoxStyles.css\"\nimport Button from \"../../button/button\";\n\nexport type AlertPopupBoxType = {\n    closeModalWindow?: (boolean:boolean | any) => void\n    btnOneConfiguration : {\n        btnOneClassName? : string\n        btnOneLabel : string\n    }\n    btnTwoConfiguration : {\n        btnTwoHandler?: Function\n        btnTwoLabel : string\n        btnTwoClassName? : string\n    }\n    className?:string\n    alertText: string\n}\n\nconst AlertPopupBox = (props: AlertPopupBoxType) => {\n\n    const {\n        closeModalWindow = () => null,\n        alertText,\n        btnOneConfiguration : {btnOneLabel},\n        btnTwoConfiguration : {btnTwoHandler = () => null, btnTwoLabel}\n    } = props\n\n    const onClickBtnTwoHandler = () => {\n        btnTwoHandler()\n        closeModalWindow(false)\n    }\n\n    return (\n        <div className=\"alertPopupBox\">\n            <h2 className={\"alertPopupBox__title\"}>{alertText}</h2>\n            <hr className={\"my-4\"}/>\n            <div className=\"d-flex justify-content-between\">\n                <Button className={\"btn-success col-lg-5\"} onClickHandler={closeModalWindow} label={btnOneLabel}/>\n                <Button className={\"btn-danger col-lg-5\"} onClickHandler={onClickBtnTwoHandler} label={btnTwoLabel}/>\n            </div>\n        </div>\n    );\n}\n\nexport default AlertPopupBox;\n","import React from 'react';\nimport ModalWindow from \"../modalWindow\";\nimport AlertPopupBox from \"./alertPopupBox\";\n\nexport type AlertModalType = {\n  btnOneConfiguration : {\n    btnOneHandler?: Function\n    btnOneClassName? : string\n    btnOneLabel : string\n  }\n  btnTwoConfiguration : {\n    btnTwoHandler?: Function\n    btnTwoLabel : string\n    btnTwoClassName? : string\n  }\n  className?:string\n  alertText: string\n  openBtnElement?: any\n  isActiveFromProps?: boolean\n}\n\nconst AlertModalWindow = (props: AlertModalType) => {\n  const {openBtnElement, btnOneConfiguration: {btnOneHandler}, isActiveFromProps} = props\n  return (\n      <ModalWindow isActiveFromProps={isActiveFromProps} alertCloseHandler={btnOneHandler} withOpenBtn={true} modal={<AlertPopupBox {...props}/>}>{ (openModalWindow:any) =>\n          openBtnElement && React.cloneElement(openBtnElement, {onClickHandler: openModalWindow})\n      }</ModalWindow>\n  );\n}\n\nexport default AlertModalWindow;\n","\r\nexport const getSettingsFieldValueByFieldSelector = (state: any, field: string) => state.settingsState[field]()","import React, {useCallback} from 'react';\nimport Button from \"../button/button\";\nimport {GET_PATH_SEARCH} from \"../../app/App\";\nimport { NavLink } from 'react-router-dom';\nimport {useDispatch} from \"react-redux\";\nimport {setSearchConfigCategoryAC} from \"../../redux/reducers/searchBoxState/searchBoxStateActionCreators\";\n\ntype navCategoryButtonPropsType = {\n    category: string\n    activeClassName?: string\n    configCategory: string\n    children: any\n    key?: any\n    className?: string\n}\n\nconst NavCategoryButton = (props: navCategoryButtonPropsType) => {\n\n    //-----MAP-DISPATCH-TO-PROPS----//\n    const dispatch = useDispatch()\n    const setSearchConfigCategory = useCallback((category) => dispatch(setSearchConfigCategoryAC(category)), [dispatch])\n\n    const {activeClassName = \"active\", key, category, configCategory, className, children} = props\n\n    return <NavLink className={className} key={key} onClick={() => setSearchConfigCategory(configCategory)} to={GET_PATH_SEARCH(category)} activeClassName={activeClassName}>\n        {children}\n    </NavLink>\n\n}\n\nexport default NavCategoryButton;\n","import React, {useCallback, useRef, useState} from 'react';\r\nimport \"./headerStyles.css\"\r\nimport {Link, NavLink} from 'react-router-dom';\r\nimport Logo from \"../logo/logo\";\r\nimport AuthorizationModalWindow from \"../modalWindow/authorizationModalWindow/authorizationModalWindow\";\r\nimport {PATH_CREATE_ANNOUNCEMENT, PATH_MY_ANNOUNCEMENTS, PATH_SETTINGS} from \"../../app/App\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {getIsAuthSelector,} from \"../../redux/reducers/authorizationState/authorizationStateSelectors\";\r\nimport AlertModalWindow from \"../modalWindow/alertModalWindow/alertModalWindow\";\r\nimport Button from \"../button/button\";\r\nimport {postLogoutOrDeleteUser} from \"../../redux/thunks/thunks\";\r\nimport useOutsideClick from \"../../hooks/useOutsideClick\";\r\nimport {getSettingsFieldValueByFieldSelector} from \"../../redux/reducers/settingsState/settingsStateSelectors\";\r\nimport {getCategoriesDataSelector} from \"../../redux/reducers/mainState/mainStateSelectors\";\r\nimport NavCategoryButton from \"../navCategoryButton/navCategoryButton\";\r\n\r\nconst Header = (props: any) => {\r\n\r\n    //------USE-REF-----//\r\n    const ref = useRef(null)\r\n\r\n    //------MAP-STATE-TO-PROPS-----//\r\n    const isAuth = useSelector(getIsAuthSelector)\r\n    const name = useSelector((state) => getSettingsFieldValueByFieldSelector(state, \"name\"))\r\n    const categoriesData = useSelector(getCategoriesDataSelector)\r\n\r\n    //-----MAP-DISPATCH-TO-PROPS----//\r\n    const dispatch = useDispatch()\r\n    const logoutUser = useCallback(() => dispatch(postLogoutOrDeleteUser(\"logout\")), [dispatch])\r\n\r\n    //------LOCAL-STATE-----//\r\n    const [isActiveAuthModal, setIsActiveAuthModal] = useState(false)\r\n    const [isActiveAuthMenu, setIsActiveAuthMenu] = useState(false)\r\n    const [isActiveLogoutAlert, setIsActiveLogoutAlert] = useState(false)\r\n\r\n    const outsideClickHandler = () => {\r\n        isActiveAuthMenu && toggleIsActiveAuthMenu()\r\n    }\r\n\r\n    useOutsideClick(ref, outsideClickHandler)\r\n\r\n    const toggleIsActiveAuthMenu = () => {\r\n        console.log(\"toggleIsActiveAuthMenu\")\r\n        setIsActiveAuthMenu(prevState => !prevState)\r\n    }\r\n\r\n    // const linkConfigs = [\r\n    //     {path: PATH_HOUSING, label: \"Недвижимость\"},\r\n    //     {path: PATH_JOB, label: \"Работа\"}\r\n    // ]\r\n\r\n    const alertCreateAnnouncement = useCallback(() =>\r\n        <AlertModalWindow openBtnElement={<Button className={\"header__btn-link btn-outline-light\"} label={\"Разместить объявление\"}/>}\r\n                          btnOneConfiguration={{btnOneLabel: \"Позже\", btnOneHandler:() => setIsActiveAuthModal(false) }}\r\n                          btnTwoConfiguration={{btnTwoLabel: \"Авторизироваться\", btnTwoHandler:() => setIsActiveAuthModal(true) }}\r\n                          alertText={\"Для размещения объявления, необходимо авторизироваться!\"}/>, [])\r\n\r\n    const alertLogout = useCallback(() =>\r\n        <AlertModalWindow isActiveFromProps={true} alertText={\"Выйти из аккаунта?\"}\r\n                          btnOneConfiguration={{btnOneLabel: \"Нет\", btnOneHandler:() => setIsActiveLogoutAlert(false)}}\r\n                          btnTwoConfiguration={{btnTwoLabel: \"Да\", btnTwoHandler:logoutUser }}/>, [])\r\n\r\n\r\n    const linkToCreateAnnouncement = <>\r\n        <NavLink activeClassName={\"active\"} className=\"header__btn-link btn btn-outline-light\" to={PATH_CREATE_ANNOUNCEMENT}>\r\n            Разместить объявление\r\n        </NavLink>\r\n    </>\r\n\r\n    const authMenu = <>\r\n        <div ref={ref} onClick={toggleIsActiveAuthMenu} className=\"dropdown\">\r\n            <Button className={\"btn-warning dropdown-toggle\"} label={name}/>\r\n            <div className={`dropdown-menu ${isActiveAuthMenu && \"show\"}`}>\r\n                <Link to={PATH_MY_ANNOUNCEMENTS} className=\"dropdown-item\">\r\n                    Мои объявления\r\n                </Link>\r\n                <Link to={PATH_SETTINGS} className=\"dropdown-item\">\r\n                    Настройки\r\n                </Link>\r\n                <div className=\"dropdown-divider\"/>\r\n                <div onClick={() => setIsActiveLogoutAlert(true)} className=\"dropdown-item\">Выход</div>\r\n            </div>\r\n        </div>\r\n    </>\r\n\r\n    return (\r\n        <div className=\"navbar navbar-dark bg-info pl-5 pr-5\">\r\n            <div className=\"d-flex\">\r\n                <Logo/>\r\n                <div className=\"header__navigation-wrapper navbar-nav flex-row ml-5\">\r\n                    {categoriesData.map((categoryData: any, index:number) => {\r\n                        const {category, label, id} = categoryData\r\n                        return index !== 0 &&\r\n                            <NavCategoryButton className={\"nav-link ml-3\"} key={id} category={category} configCategory={categoryData}>\r\n                            {label}\r\n                        </NavCategoryButton> })}\r\n                </div>\r\n            </div>\r\n            <div className=\"header__inner-wrapper\">\r\n                {isAuth ? authMenu : <AuthorizationModalWindow alertCloseHandler={() => setIsActiveAuthModal(false)} isActiveFromProps={isActiveAuthModal}/>}\r\n                {isAuth ? linkToCreateAnnouncement : alertCreateAnnouncement()}\r\n            </div>\r\n            {isActiveLogoutAlert && alertLogout()}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Header;\r\n","export const getSearchedDataSelector = (state: any) => state.searchBoxState.searchedData\r\nexport const getSearchConfigCategorySelector = (state: any) => state.searchBoxState.searchConfig.categoryId\r\nexport const getSearchConfigSubwayStationsSelector = (state: any) => state.searchBoxState.searchConfig.subwayStations\r\nexport const getSearchConfigSearchValueSelector = (state: any) => state.searchBoxState.searchConfig.searchValue\r\nexport const getIsFetchingSearchReducerSelector = (state: any) => state.searchBoxState.isFetching\r\nexport const getCurrentPageSearchReducerSelector = (state: any) => state.searchBoxState.currentPage\r\nexport const getTotalNumOfPageSearchReducerSelector = (state: any) => state.searchBoxState.totalNumOfPages","import React, {useCallback, useState} from 'react';\nimport \"./searchBoxStyles.css\";\nimport Select from \"./select/select\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {getAnnouncementsByFiltersThunk} from \"../../redux/thunks/thunks\";\nimport Button from \"../button/button\";\nimport {\n    getCategoriesDataSelector,\n    getSubwayStationsDataSelector, getTheSubCategoriesSelector\n} from \"../../redux/reducers/mainState/mainStateSelectors\";\nimport {\n    getIsFetchingSearchReducerSelector,\n    getSearchConfigCategorySelector,\n    getSearchConfigSearchValueSelector,\n    getSearchConfigSubwayStationsSelector\n} from \"../../redux/reducers/searchBoxState/searchBoxStateSelectors\";\nimport {useHistory} from 'react-router-dom';\nimport {\n    resetToInitialStateSearchReducerAC,\n    setSearchConfigCategoryAC,\n    setSearchConfigSearchValueAC,\n    setSearchConfigSubwayStationsAC\n} from '../../redux/reducers/searchBoxState/searchBoxStateActionCreators';\n\nconst SearchBox = (props: any) => {\n\n    const {placeHolder, className} = props\n\n    //------USE-HISTORY-----//\n    const history = useHistory()\n\n    //------MAP-STATE-TO-PROPS-----//\n    const subwayStationsData = useSelector(getSubwayStationsDataSelector)\n    const categoriesData = useSelector( (state) =>\n        getTheSubCategoriesSelector(getCategoriesDataSelector(state), \"active\"))\n    const isFetching = useSelector(getIsFetchingSearchReducerSelector)\n    const searchConfigCategory = useSelector(getSearchConfigCategorySelector)\n    const searchConfigSubwayStation = useSelector(getSearchConfigSubwayStationsSelector)\n    const searchConfigSearchValue = useSelector(getSearchConfigSearchValueSelector)\n\n    //-----MAP-DISPATCH-TO-PROPS----//\n    const dispatch = useDispatch()\n    const getAnnouncementsByFilters = useCallback(() => dispatch(getAnnouncementsByFiltersThunk()), [dispatch])\n    const resetToInitialStateSearchReducer = useCallback(() => dispatch(resetToInitialStateSearchReducerAC()), [dispatch])\n    const setSearchConfigCategory = useCallback((category) => dispatch(setSearchConfigCategoryAC(category)), [dispatch])\n    const setSearchConfigSubwayStation = useCallback((station) => dispatch(setSearchConfigSubwayStationsAC(station)), [dispatch])\n    const setSearchConfigSearchValue = useCallback((value) => dispatch(setSearchConfigSearchValueAC(value)), [dispatch])\n\n    //-----LOCAL-STATE-----//\n    const [searchValue, setSearchValue] = useState(searchConfigSearchValue)\n\n\n    const selectItemOnChangeHandler = (field: \"category\" | \"subway\", selectItem: any, setIsActiveSelect:Function) => {\n        field === \"category\" && setSearchConfigCategory(selectItem)\n        field === \"subway\" && setSearchConfigSubwayStation(selectItem)\n        setIsActiveSelect(false)\n    }\n\n    const searchOnChangeHandler = (event?: any) => {\n        const { target : {value = \"\"} = {} } = event || {}\n        setSearchValue(value)\n    }\n\n    const onClickFindBtnHandler = () => {\n        getAnnouncementsByFilters()\n        resetToInitialStateSearchReducer()\n        history.push(searchConfigCategory.category)\n    }\n\n  return (\n      <div className={`searchBox d-flex col-lg-12 input-group justify-content-center ${className}`}>\n          <Select className={\"col-lg-2 p-0 input-group-prepend\"} onChangeHandlerSelectItem={(selectItem: any, handler: any) => selectItemOnChangeHandler(\"subway\", selectItem, handler)} value={searchConfigSubwayStation.label} selectItems={subwayStationsData} placeHolder={\"Выбор категории\"}/>\n          <div className=\"searchBox__search col-lg-5 p-0 d-flex\">\n              <input onBlur={({target: {value}}) => setSearchConfigSearchValue(value)} onChange={searchOnChangeHandler}\n                     className={\"searchBox__search-input w-100 form-control\"}\n                     value={searchValue} type=\"text\"\n                     placeholder={placeHolder}/>\n              <div onClick={() => setSearchValue(\"\")} className={\"searchBox__search-clear\"}>&#10006;</div>\n          </div>\n          <Select className={\"col-lg-2 p-0 input-group-append\"} onChangeHandlerSelectItem={(selectItem: any, handler: any) => selectItemOnChangeHandler(\"category\", selectItem, handler)} value={searchConfigCategory.label} selectItems={categoriesData} placeHolder={\"Метро\"}/>\n          <div className=\"input-group-append\">\n              <Button className={\"btn-success\"} onClickHandler={onClickFindBtnHandler} label={\"Найти\"} isDisabled={isFetching}/>\n          </div>\n\n      </div>\n  );\n}\n\nexport default SearchBox;\n","export const getLastAnnouncementsSelector = (state: any) => state.feedState.lastAnnouncements\r\nexport const getIsFetchingFeedReducerSelector = (state: any) => state.feedState.isFetching\r\nexport const getDescriptionSalamRuSelector = (state: any) => state.feedState.descriptionSalamRu\r\n","import React from 'react';\nimport \"./imageStyles.css\"\n\ntype ImagePropsType = {\n    photo: string\n    className?: string\n    onClickHandler?: any\n}\n\nconst Image = (props: ImagePropsType) => {\n\n    const {photo, className, onClickHandler = null} = props\n\n  return <div onClick={onClickHandler} style={{backgroundImage: `url(${photo})`}} className={`image ${className}`}/>\n}\n\nexport default Image;\n","import React from 'react';\nimport \"./announcementStyles.css\"\nimport {NavLink} from \"react-router-dom\";\nimport Image from \"../image/image\";\n\ntype AnnouncementPropsType = {\n    photo: string\n    id: number\n    name: string\n    category: string\n    price: number\n    creationDate: string\n    subwayStation: string\n    hasLike: boolean\n    className?: string\n}\n\nconst Announcement = (props: AnnouncementPropsType) => {\n\n    const {photo, name, creationDate, category, className, price, subwayStation, id} = props\n\n\n  return (\n      <div className={`border text-center text-white border-dark mb-3 mr-3 p-0 ${className}`}>\n              <NavLink to={`${category}/${id}`}>\n          <div className=\"card-header p-0\">\n                  <Image photo={photo}/>\n          </div>\n              </NavLink>\n              <div className={\"card-inner-wrapper d-flex flex-column justify-content-between\"}>\n                  <div className=\"card-body d-flex flex-column justify-content-between\">\n                      <h5 className=\"card-title text-primary\">{name}</h5>\n                      <h6 className=\"card-text text-dark\">{`Цена: ${price} руб.`}</h6>\n                      <h6 className=\"card-text text-dark\">{`Метро: ${subwayStation}`}</h6>\n                  </div>\n                  <div className=\"card-footer\">\n                      <small className=\"text-muted\">{`Дата создания: ${creationDate}`}</small>\n                  </div>\n              </div>\n      </div>\n  )\n}\n\nexport default Announcement;\n","import React from 'react';\nimport \"./footerStyles.css\"\nimport { NavLink } from 'react-router-dom';\nimport Logo from \"../logo/logo\";\nimport {PATH_CREATE_ANNOUNCEMENT} from \"../../app/App\";\nimport NavCategoryButton from \"../navCategoryButton/navCategoryButton\";\nimport {useSelector} from \"react-redux\";\nimport {getCategoriesDataSelector} from \"../../redux/reducers/mainState/mainStateSelectors\";\n\nconst Footer = (props: any) => {\n\n    //------MAP-STATE-TO-PROPS-----//\n    const categoriesData = useSelector(getCategoriesDataSelector)\n\n    //TODO Вынести в компонент navigation\n  return (\n      <div className=\"navbar navbar-dark bg-info pl-5 pr-5\">\n          <Logo/>\n          <div className=\"navbar-nav flex-row\">\n              {categoriesData.map((categoryData: any, index:number) => {\n                  const {category, label, id} = categoryData\n                  return index !== 0 &&\n                      <NavCategoryButton className={\"nav-link ml-3\"} key={id} category={category} configCategory={categoryData}>\n                          {label}\n                      </NavCategoryButton> })}\n          </div>\n          <NavLink className=\"btn btn-outline-light\" to={PATH_CREATE_ANNOUNCEMENT}>\n              Разместить объявление\n          </NavLink>\n      </div>\n  );\n}\n\nexport default Footer;\n","import React, {useCallback, useEffect} from 'react';\nimport \"./feedPageStyles.css\"\nimport Header from \"../../components/header/header\";\nimport SearchBox from \"../../components/searchBox/searchBox\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {getLastAnnouncementsThunk} from \"../../redux/thunks/thunks\";\nimport {\n    getDescriptionSalamRuSelector,\n    getIsFetchingFeedReducerSelector,\n    getLastAnnouncementsSelector\n} from \"../../redux/reducers/feedState/feedStateSelectors\";\nimport Announcement from \"../../components/announcement/announcement\";\nimport Footer from \"../../components/footer/footer\";\n\n\nconst FeedPage = (props: any) => {\n\n    //------MAP-STATE-TO-PROPS-----//\n    const {lastAnnouncements, isFetching, descriptionSalamRu} = useSelector((state) => ({\n        lastAnnouncements: getLastAnnouncementsSelector(state),\n        isFetching: getIsFetchingFeedReducerSelector(state),\n        descriptionSalamRu: getDescriptionSalamRuSelector(state)\n    }))\n\n    //-----MAP-DISPATCH-TO-PROPS----//\n    const dispatch = useDispatch()\n    const getLastAnnouncements = useCallback(() => dispatch(getLastAnnouncementsThunk()), [dispatch])\n\n    //----COMPONENT-DID-MOUNT-LIFECYCLE----//\n    useEffect(() => {\n        getLastAnnouncements()\n    }, [])\n\n    return (\n        <div className={\"feedPage\"}>\n            <Header/>\n            <div className=\"feedPage__container container-lg\">\n                <div className=\"feedPage__searchBox\">\n                    <SearchBox placeHolder={\"Поиск по объявлениям\"}/>\n                </div>\n                {/*<div className=\"feedPage__category-cards\">*/}\n                {/*    */}\n                {/*</div>*/}\n                <div className=\"feedPage__lastAnnouncements mb-5\">\n                        <h2 className=\"display-5 jumbotron p-2\">Последние объявления</h2>\n                    {/*<h2 className=\"feedPage__lastAnnouncements-title\">Последние объявления</h2>*/}\n                    <div className=\"row justify-content-center\">\n                        {lastAnnouncements.map((lastAnnouncement: any) => <Announcement {...lastAnnouncement}/>)}\n                    </div>\n                </div>\n                <div className=\"jumbotron p-4\">\n                    <h1 className=\"display-5\">О проекте</h1>\n                    <hr className=\"my-4\"/>\n                        <p className=\"lead\">Lorem ipsum dolor sit amet,\n                            consectetur adipisicing elit.\n                            Impedit minima perferendis tenetur?\n                            Delectus dolores eaque est, explicabo laboriosam minus quia ut vel veniam.\n                            Dignissimos fuga, quas quasi quisquam saepe sint.\n                        </p>\n                </div>\n                {/*<div className=\"feedPage__descriptionSalamRu\">*/}\n                {/*    <h2 className=\"feedPage__descriptionSalamRu-title\">О проекте</h2>*/}\n                {/*    <p className=\"feedPage__descriptionSalamRu-description\">*/}\n                {/*        Lorem ipsum dolor sit amet,*/}\n                {/*        consectetur adipisicing elit.*/}\n                {/*        Impedit minima perferendis tenetur?*/}\n                {/*        Delectus dolores eaque est, explicabo laboriosam minus quia ut vel veniam.*/}\n                {/*        Dignissimos fuga, quas quasi quisquam saepe sint.*/}\n                {/*    </p>*/}\n                {/*</div>*/}\n            </div>\n            <Footer/>\n        </div>\n    );\n}\n\nexport default FeedPage;\n","import React from 'react';\nimport \"./contactsPageStyles.css\"\nimport Header from \"../../components/header/header\";\nimport Footer from \"../../components/footer/footer\";\n\n\nconst ContactsPage = (props: any) => {\n\n    return (\n        <div className={\"contactsPage fullHeightContent\"}>\n            <Header/>\n\n            <div className=\"contactsPage__container container-lg pb-5 pt-5 text-center\">\n                <div className=\"jumbotron p-4\">\n                    <h1 className=\"display-5\">Уважаемые пользователи!</h1>\n                    <hr className=\"my-4\"/>\n                    <p className=\"lead\">Lorem ipsum dolor sit amet,\n                        consectetur adipisicing elit.\n                        Impedit minima perferendis tenetur?\n                        Delectus dolores eaque est, explicabo laboriosam minus quia ut vel veniam.\n                        Dignissimos fuga, quas quasi quisquam saepe sint.\n                    </p>\n                </div>\n            </div>\n            <Footer/>\n        </div>\n    );\n}\n\nexport default ContactsPage;\n","import React from 'react';\nimport {useSelector} from \"react-redux\";\nimport {getIsAuthSelector} from \"../redux/reducers/authorizationState/authorizationStateSelectors\";\nimport {Redirect} from 'react-router-dom';\nimport {PATH_FEED} from \"../app/App\";\n\nconst withAuthRedirectHoc = (Component: any) => {\n    return (props: any) => {\n        const isAuth = useSelector(getIsAuthSelector)\n        return !isAuth ? <Redirect to={PATH_FEED}/> : <Component {...props}/>\n    }\n}\n\nexport default withAuthRedirectHoc;\n","import React from 'react';\nimport \"./imagePickerStyles.css\"\n\ntype ImagePickerPropsType = {\n    onLoadHandler: Function\n    className?: string\n}\n\nconst ImagePicker = (props: ImagePickerPropsType) => {\n\n    const {onLoadHandler, className} = props\n\n    const onChangeFileHandler = (event: any) => {\n        const file = event.target.files[0]\n        const {name = `uploadUserImg${Date.now()}`} = file || {}\n        const reader = new FileReader();\n\n        reader.onload = () => {\n            const {result} = reader\n            onLoadHandler(result, name)\n        }\n\n        file && reader.readAsDataURL(file)\n    }\n\n  return <div className={`h-100 w-100 ${className}`}>\n      <input onChange={onChangeFileHandler} type=\"file\" className={`imagePicker`}/>\n      <div className=\"h-100 w-100 d-flex justify-content-center align-items-center border border-dark alert-dark\">\n         <h2 className={\"display-4\"}>+</h2>\n      </div>\n  </div>\n}\n\nexport default ImagePicker;\n","import React, {ChangeEvent, useCallback, useEffect} from 'react';\nimport \"./settingsPageStyles.css\"\nimport Header from \"../../components/header/header\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {postLogoutOrDeleteUser, postSettingByFieldThunk} from \"../../redux/thunks/thunks\";\nimport Footer from \"../../components/footer/footer\";\nimport {SettingsFieldType} from '../../redux/reducers/settingsState/settingsState';\nimport TextInput from \"../../components/textInput/textInput\";\nimport Button from \"../../components/button/button\";\nimport Image from \"../../components/image/image\";\nimport {getSettingsFieldValueByFieldSelector} from '../../redux/reducers/settingsState/settingsStateSelectors';\nimport AlertModalWindow from \"../../components/modalWindow/alertModalWindow/alertModalWindow\";\nimport {setIsValidFormReducerAC, seValueFormReducerAC} from \"../../redux/reducers/formState/formStateActionCreators\";\nimport {getFieldsByPageFormReducerSelector} from \"../../redux/reducers/formState/formStateSelectors\";\nimport withAuthRedirectHoc from '../../hocs/withAuthRedirectHoc';\nimport ImagePicker from \"../../components/imagePicker/imagePicker\";\n\nconst SettingsPage = (props: any) => {\n\n    //------MAP-STATE-TO-PROPS-----//\n    const formState = useSelector((state) => getFieldsByPageFormReducerSelector(state, \"settings\"))\n    const {avatar, name, phone, login,} = formState\n\n    const settingsState = useSelector( (state) => ({\n        avatar: getSettingsFieldValueByFieldSelector(state, \"avatar\"),\n        name: getSettingsFieldValueByFieldSelector(state, \"name\"),\n        phone: getSettingsFieldValueByFieldSelector(state, \"phone\"),\n        login: getSettingsFieldValueByFieldSelector(state, \"login\")\n    }) )\n    const settingsStateEntries = Object.entries(settingsState)\n\n    //-----MAP-DISPATCH-TO-PROPS----//\n    const dispatch = useDispatch()\n    const postSettingByField = useCallback((data, field) => dispatch(postSettingByFieldThunk(data, field)), [dispatch])\n    const logoutUser = useCallback(() => dispatch(postLogoutOrDeleteUser(\"logout\")), [dispatch])\n    const deleteUser = useCallback(() => dispatch(postLogoutOrDeleteUser(\"delete\")), [dispatch])\n    const seValueFormReducer = useCallback((value, field) => dispatch(seValueFormReducerAC(value, field, \"settings\")), [dispatch])\n    const setIsValidFormReducer = useCallback((field) => dispatch(setIsValidFormReducerAC(field, \"settings\")), [dispatch])\n\n    //------DID-MOUNT-LIFE-CYCLE-----//\n    useEffect(() => {\n        settingsStateEntries.forEach( ([key, value]) => seValueFormReducer(value, key) )\n    }, [])\n\n    const onLoadImageHandler = (image: any, imageName: string) => {\n        const postData = {photo: image, name: imageName}\n        seValueFormReducer(image, \"avatar\")\n        postSettingByField(postData, \"avatar\")\n    }\n\n    //Функция - обработчик события изменеия в инпуте. Проверка на валидность значения в инпуте.\n    const onChangeHandler = (event: React.ChangeEvent<HTMLInputElement>, field: SettingsFieldType) => {\n        console.log(\"onChangeHandler\", field)\n        const {currentTarget: {value}} = event\n        seValueFormReducer(value, field)\n    }\n\n    //Функция - обработчик события клик по кнопке отправить или зарегестрироваться\n    const onClickHandler = (field: SettingsFieldType) => {\n        // @ts-ignore\n        const {isValid, value} = formState[field]\n        // @ts-ignore\n        const valueFromSettingsState = settingsState[field]\n        console.log(\"onClickHandler\", isValid)\n        const postData = {[field] : value}\n        isValid && value !== valueFromSettingsState && postSettingByField(postData, field)\n    }\n\n    //TODO Вынести конфиги для всех инпутов в formState!!\n    //Функция возращает массив с конфигурацией для полей ввода\n    const getInputsConfig = () => {\n        return [\n            {\n                field: \"name\",\n                label: \"Имя\",\n                inputType: \"text\",\n                value: name.value,\n                isValid: name.isValid\n            },\n            {\n                field: \"login\",\n                label: \"Логин\",\n                inputType: \"text\",\n                value: login.value,\n                isValid: login.isValid\n            },\n            {\n                field: \"phone\",\n                label: \"Номер телефона\",\n                inputType: \"tel\",\n                value: phone.value,\n                isValid: phone.isValid\n            },\n        ]\n    }\n\n    return (\n        <div className={\"settingsPage fullHeightContent\"}>\n            <Header/>\n            <div className=\"container-lg pb-5 pt-5\">\n                <h2 className=\"display-5 jumbotron p-2 mb-5\">Настройки профиля</h2>\n                <div className=\"d-flex justify-content-around\">\n                    <div className=\"settingsPage__settings-wrapper\">\n\n                        <div className=\"settingsPage__setting-avatar w-100\">\n                            <Image photo={avatar.value}/>\n                            <ImagePicker className={\"position-absolute fixed-top opacity-0\"} onLoadHandler={onLoadImageHandler}/>\n                        </div>\n\n                        <div className=\"settingsPage__logouOrDel-wrapper\">\n                            <AlertModalWindow openBtnElement={<Button className={\"btn-warning w-100 mb-4\"} label={\"Выйти из аккаунта\"}/>}\n                                              btnOneConfiguration={{btnOneLabel: \"Нет\"}}\n                                              btnTwoConfiguration={{btnTwoLabel: \"Да\", btnTwoHandler:logoutUser }}\n                                              alertText={\"Выйти из аккаунта?\"}/>\n\n                            <AlertModalWindow openBtnElement={<Button className={\"btn-danger w-100\"} label={\"Удалить аккаунт\"}/>}\n                                              btnOneConfiguration={{btnOneLabel: \"Нет\"}}\n                                              btnTwoConfiguration={{btnTwoLabel: \"Да\", btnTwoHandler:deleteUser }}\n                                              alertText={\"Удалить аккаунт?\"}/>\n                        </div>\n\n                    </div>\n                    <div className=\"settingsPage__settings-wrapper col-lg-5\">\n                        { getInputsConfig().map( ({field, ...restConfig}) => <>\n                            <div className=\"settingsPage__setting input-group w-100\">\n                                <TextInput className={\"w-75\"} key={field} {...restConfig}\n                                           onBlurHandler={() => setIsValidFormReducer(field)}\n                                           onChangeHandler={(event: ChangeEvent<HTMLInputElement>) => onChangeHandler(event, field)}/>\n                                <Button className={\"input-group-append btn-success align-self-end\"} onClickHandler={() => onClickHandler(field)} label={\"Сохранить\"}/>\n                            </div>\n                            <hr className=\"my-4\"/> </>) }\n                    </div>\n                </div>\n            </div>\n            <Footer/>\n        </div>\n    );\n}\n\nexport default withAuthRedirectHoc(SettingsPage);\n","export const getAnnouncementSelector = (state: any) => state.announcementState.announcement\r\nexport const getIsFetchingAnnouncementReducerSelector = (state: any) => state.announcementState.isFetching\r\n","import * as React from \"react\"\r\nimport \"./sliderStyle.css\"\r\nimport {useState} from \"react\";\r\n\r\n\r\ntype NextOrPrevArgType = \"next\" | \"prev\" | string\r\ntype SliderPropsTypes = {\r\n    children : any\r\n    className?: string\r\n}\r\n\r\nfunction Slider(props: SliderPropsTypes) {\r\n\r\n    const {children, className} = props\r\n\r\n    //-------------LOCAL-STATE--------------//\r\n    const [currentSlide, setCurrentSlide] = useState(0)\r\n\r\n    const isLastSlide = () => currentSlide === children[\"length\"] - 1\r\n    const isFirstSlide = () => currentSlide === 0\r\n\r\n    const changeSlide: any = (nextOrPrev: NextOrPrevArgType) => {\r\n        console.log(\"changeSlide\", nextOrPrev)\r\n        if(nextOrPrev === \"next\") setCurrentSlide(currentSlide + 1)\r\n        if(nextOrPrev === \"prev\") setCurrentSlide(currentSlide - 1)\r\n    }\r\n\r\n    const transformStyle = {\r\n        transform: `translateX( ${currentSlide * -100}% )`\r\n    }\r\n\r\n    return (\r\n        <div className={`slider ${className}`}>\r\n                {React.Children.map(children, child =>\r\n                    <div style={transformStyle} className={`slider__page`}>\r\n                        { React.cloneElement(child) }\r\n                    </div>)}\r\n            {!isFirstSlide() && <div onClick={() => changeSlide(\"prev\")} className=\"carousel-control carousel-control-prev\">\r\n                <span className=\"carousel-control-prev-icon\"/>\r\n            </div>}\r\n            {!isLastSlide() && <div onClick={() => changeSlide(\"next\")} className=\"carousel-control carousel-control-next\">\r\n                <span className=\"carousel-control-next-icon\"/>\r\n            </div>}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default React.forwardRef(Slider)","import React, {useCallback, useEffect} from 'react';\nimport \"./announcementPageStyles.css\"\nimport Header from \"../../components/header/header\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {getAnnouncementByCategoryAndIdThunk} from \"../../redux/thunks/thunks\";\nimport Footer from \"../../components/footer/footer\";\nimport {useHistory, useParams} from 'react-router-dom';\nimport {\n    getAnnouncementSelector,\n    getIsFetchingAnnouncementReducerSelector\n} from '../../redux/reducers/announcementState/announcementStateSelectors';\nimport Button from \"../../components/button/button\";\nimport Slider from \"../../components/slider/slider\";\nimport Image from \"../../components/image/image\";\n\nconst AnnouncementPage = (props: any) => {\n\n    //------MAP-STATE-TO-PROPS-----//\n    const isFetching = useSelector(getIsFetchingAnnouncementReducerSelector)\n    const {\n        photos = [],\n        name = \"\",\n        price = 0,\n        description = \"\",\n        subwayStation = \"\",\n        contacts : {\n            user = \"\",\n            phone = \"\",\n        } = {},\n        creationDate = \"\",\n    } = useSelector(getAnnouncementSelector)\n\n    //-----MAP-DISPATCH-TO-PROPS----//\n    const dispatch = useDispatch()\n    const getAnnouncementByCategoryAndId = useCallback(() => dispatch(getAnnouncementByCategoryAndIdThunk(category, id)), [dispatch])\n\n    //------CATCH-PARAMS-FROM-URL-----//\n    const {category, id} = useParams()\n\n    const {goBack} = useHistory()\n\n    //----COMPONENT-DID-MOUNT-LIFECYCLE----//\n    useEffect(() => {\n        getAnnouncementByCategoryAndId()\n    }, [])\n\n    return (\n        <div className={\"announcementPage fullHeightContent\"}>\n            <Header/>\n            <Button className={\"arrowBack\"} onClickHandler={goBack} label={\"Назад\"}/>\n            <div className=\"announcementPage__container container-lg pt-5 pb-5\">\n                <h2 className=\"announcementPage__name text-left m-0\">{name}</h2>\n                <hr className=\"my-4\"/>\n            <div className=\"announcementPage__photoAndInfo-wrapper mb-5\">\n                <div className=\"announcementPage__photo-slider float-left\">\n                    <Slider>\n                        {photos.map( (photo:string) => <Image photo={photo}/> ) }\n                    </Slider>\n                </div>\n\n                <div className=\"announcementPage__info-wrapper ml-5 col-lg-5 p-0\">\n                    <h3 className=\"announcementPage__info-price bg-warning p-2 m-0 text-left\">{`Цена: ${price} руб.`}</h3>\n                    <hr className=\"my-4\"/>\n                    <h5 className=\"announcementPage__info-location text-left alert alert-warning\">{`Метро: ${subwayStation}`}</h5>\n                    <hr className=\"my-4\"/>\n                    <div className=\"announcementPage__info-inner-wrapper alert alert-success\">\n                        <h5 className=\"announcementPage__info-name text-left\">Продавец: {user}</h5>\n                        <h5 className=\"announcementPage__info-name text-left\">Телефон: {phone}</h5>\n                    </div>\n                    <hr className=\"my-4\"/>\n                    <h5 className=\"announcementPage__creationDate alert alert-dark\">Дата создания объявления: {creationDate}</h5>\n                </div>\n            </div>\n                <div className=\"announcementPage__description alert alert-primary\">\n                    <h5 className={\"text-left\"}>Описание:</h5>\n                    <p>{description}</p>\n                </div>\n\n            </div>\n            <Footer/>\n        </div>\n    );\n}\n\nexport default AnnouncementPage;\n","export const getMyAnnouncementsSelector = (state: any) => state.myAnnouncementsState.myAnnouncements\r\nexport const getIsFetchingMyAnnouncementsReducerSelector = (state: any) => state.myAnnouncementsState.isFetching\r\nexport const getCurrentPageMyAnnouncementsReducerSelector = (state: any) => state.myAnnouncementsState.currentPage\r\nexport const getTotalNumOfPagesMyAnnouncementsReducerSelector = (state: any) => state.myAnnouncementsState.totalNumOfPages\r\n","import React, {useEffect} from 'react';\n\nconst useInfinityScroll = (handler: Function) => {\n\n    const scrollHandler = (event: any) => {\n\n        const currentHeight = Math.ceil(window.innerHeight + window.scrollY)\n        const allHeight = Math.max(\n            document.body.scrollHeight, document.documentElement.scrollHeight,\n            document.body.offsetHeight, document.documentElement.offsetHeight,\n            document.body.clientHeight, document.documentElement.clientHeight\n        )\n\n        if(currentHeight >= allHeight) {\n            handler(event)\n        }\n    }\n\n  useEffect(() => {\n        document.addEventListener('scroll', scrollHandler)\n        return () => document.removeEventListener('scroll', scrollHandler)\n      }, [handler]\n  );\n}\n\nexport default useInfinityScroll;\n","import React, {useCallback, useEffect} from 'react';\nimport \"./myAnnouncementsPageStyles.css\"\nimport Header from \"../../components/header/header\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport Footer from \"../../components/footer/footer\";\nimport {\n    getIsFetchingMyAnnouncementsReducerSelector,\n    getMyAnnouncementsSelector,\n    getCurrentPageMyAnnouncementsReducerSelector,\n    getTotalNumOfPagesMyAnnouncementsReducerSelector\n} from '../../redux/reducers/myAnnouncementState/myAnnouncementStateSelectors';\nimport {getMyAnnouncementsThunk, postDeleteAnnouncementThunk} from \"../../redux/thunks/thunks\";\nimport Announcement from \"../../components/announcement/announcement\";\nimport useInfinityScroll from \"../../hooks/useInfinityScroll\";\nimport {setCurrentPageMyAnnouncementReducerAC} from \"../../redux/reducers/myAnnouncementState/myAnnouncementStateActionCreators\";\nimport Button from \"../../components/button/button\";\nimport withAuthRedirectHoc from \"../../hocs/withAuthRedirectHoc\";\n\nconst MyAnnouncementsPage = (props: any) => {\n\n    //------MAP-STATE-TO-PROPS-----//\n    const myAnnouncements = useSelector(getMyAnnouncementsSelector)\n    const isFetching = useSelector(getIsFetchingMyAnnouncementsReducerSelector)\n    const currentPage = useSelector(getCurrentPageMyAnnouncementsReducerSelector)\n    const totalNumOfPages = useSelector(getTotalNumOfPagesMyAnnouncementsReducerSelector)\n\n    //-----MAP-DISPATCH-TO-PROPS----//\n    const dispatch = useDispatch()\n    const getMyAnnouncements = useCallback((withConcat = false) => dispatch(getMyAnnouncementsThunk(withConcat)), [dispatch])\n    const setCurrentPage = useCallback(() => dispatch(setCurrentPageMyAnnouncementReducerAC()), [dispatch])\n    const postDeleteAnnouncement = useCallback((id) => dispatch(postDeleteAnnouncementThunk(id)), [dispatch])\n\n    //----COMPONENT-DID-MOUNT-LIFECYCLE----//\n    useEffect(() => {\n        getMyAnnouncements()\n    }, [])\n\n    //------INFINITY-SCROLL------//\n    const infinityScrollHandler = (event: any) => {\n        if(currentPage !== totalNumOfPages) {\n            setCurrentPage()\n            getMyAnnouncements(true)\n        }\n    }\n    useInfinityScroll(infinityScrollHandler)\n\n\n    const onClickBtnUpHandler = () => window.scrollTo(0, 0)\n\n    return (\n        <div className={\"myAnnouncements fullHeightContent\"}>\n            <Header/>\n            <div className=\"myAnnouncements__container container-lg pt-5 pb-5\">\n                <h2 className=\"display-5 jumbotron p-2\">Мои объявления</h2>\n                {myAnnouncements.map( ({id, ...restMyAnnouncement}: any) =>\n                    <div key={id} className=\"d-flex mb-3\">\n                        <Announcement className={\"horizontalCard\"} id={id} {...restMyAnnouncement}/>\n                        <Button className={\"btn-danger align-self-stretch mb-3 align-items-center d-flex font-weight-bold\"} isDisabled={isFetching} onClickHandler={() => postDeleteAnnouncement(id)}\n                                label={\"Удалить объявление\"}/>\n                    </div>) }\n                {myAnnouncements.length > 5 && <Button className={\"myAnnouncements__btn-up\"} onClickHandler={onClickBtnUpHandler} label={\"Наверх\"}/>}\n            </div>\n            <Footer/>\n        </div>\n    );\n}\n\nexport default withAuthRedirectHoc(MyAnnouncementsPage);\n","import React, {ChangeEvent, useCallback, useEffect} from 'react';\nimport \"./createAnnouncementStyles.css\"\nimport Header from \"../../components/header/header\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {postNewAnnouncementThunk} from \"../../redux/thunks/thunks\";\nimport Footer from \"../../components/footer/footer\";\nimport TextInput from \"../../components/textInput/textInput\";\nimport Select from \"../../components/searchBox/select/select\";\nimport Button from \"../../components/button/button\";\nimport Image from \"../../components/image/image\";\nimport {\n    getCategoriesDataSelector,\n    getIsFetchingMainStateSelector,\n    getSubwayStationsDataSelector\n} from \"../../redux/reducers/mainState/mainStateSelectors\";\nimport {\n    checkIsReadyToSendByPageFormReducerAC, resetToInitialByPageFormReducerAC,\n    setIsValidFormReducerAC,\n    seValueFormReducerAC\n} from \"../../redux/reducers/formState/formStateActionCreators\";\nimport {getFieldsByPageFormReducerSelector} from \"../../redux/reducers/formState/formStateSelectors\";\nimport {prepareFormStateByPageForSend} from \"../../redux/reducers/formState/formState\";\nimport {getSettingsFieldValueByFieldSelector} from \"../../redux/reducers/settingsState/settingsStateSelectors\";\nimport withAuthRedirectHoc from \"../../hocs/withAuthRedirectHoc\";\nimport ImagePicker from \"../../components/imagePicker/imagePicker\";\n\ntype CreateAnnouncementFieldsType =\n    \"photos\"\n    | \"name\"\n    | \"price\"\n    | \"category\"\n    | \"description\"\n    | \"subway\"\n    | \"phone\"\n    | string\n\nconst CreateAnnouncement = (props: any) => {\n\n    //------MAP-STATE-TO-PROPS-----//\n    const subwayStationsData = useSelector(getSubwayStationsDataSelector)\n    const categoriesData = useSelector(getCategoriesDataSelector)\n    const phoneRedux = useSelector( (state) => getSettingsFieldValueByFieldSelector(state, \"phone\"))\n    const formState = useSelector((state) => getFieldsByPageFormReducerSelector(state, \"createAnnouncement\"))\n    const {\n        photos, name,\n        price, category,\n        description,\n        phone, subway,\n        isReadyToSend\n    } = formState\n    const isFetching = useSelector(getIsFetchingMainStateSelector)\n\n    //-----MAP-DISPATCH-TO-PROPS----//\n    const dispatch = useDispatch()\n    const postNewAnnouncement = useCallback((data) => dispatch(postNewAnnouncementThunk(data)), [dispatch])\n    const seValueFormReducer = useCallback((value, field) => dispatch(seValueFormReducerAC(value, field, \"createAnnouncement\")), [dispatch])\n    const setIsValidFormReducer = useCallback((field) => dispatch(setIsValidFormReducerAC(field, \"createAnnouncement\")), [dispatch])\n    const checkIsReadyToSend = useCallback(() => dispatch(checkIsReadyToSendByPageFormReducerAC(\"createAnnouncement\")), [dispatch])\n    const resetToInitialByPageFormReducer = useCallback(() => dispatch(resetToInitialByPageFormReducerAC(\"createAnnouncement\")), [dispatch])\n\n    //------DID-MOUNT-LIFE-CYCLE-----//\n    useEffect(() => {\n        seValueFormReducer(phoneRedux, \"phone\")\n    }, [])\n\n    //------DID-UPDATE-LIFE-CYCLE-----//\n    useEffect(() => {\n        if(isReadyToSend) {\n            const condition = (postData: any, key: any, value: any) => {\n                key === \"category\" || key === \"subway\" ? postData[key] = value.id : postData[key] = value\n                return postData\n            }\n            const postData = prepareFormStateByPageForSend(formState)(condition)\n            postNewAnnouncement(postData)\n        }\n    }, [isReadyToSend])\n\n    const selectItemOnChangeHandler = (field: \"category\" | \"subway\", selectItem: any, setIsActiveSelect: Function) => {\n        seValueFormReducer(selectItem, field)\n        setIsActiveSelect(false)\n    }\n\n    const onLoadImageHandler = (image: any, imageName: string) => {\n        const value = photos.value.concat({photo: image, name: imageName})\n        seValueFormReducer(value, \"photos\")\n    }\n\n    //Функция - обработчик события изменеия в инпуте. Проверка на валидность значения в инпуте.\n    const onChangeHandler = (event: React.ChangeEvent<HTMLInputElement>, field: CreateAnnouncementFieldsType) => {\n        console.log(\"onChangeHandler\", field)\n        const {currentTarget: {value}} = event\n        seValueFormReducer(value, field)\n    }\n\n    const deleteLoadedImage = (imageName: string) => {\n        const newPhotosValue = photos.value.filter( ({photo, name}: any) => name !== imageName)\n        seValueFormReducer(newPhotosValue, \"photos\")\n    }\n\n    //Функция возращает массив с конфигурацией для полей ввода\n    const getInputsParamsConfig = () => {\n        return [\n            {\n                field: \"name\",\n                label: \"Имя\",\n                inputType: \"text\",\n                value: name.value,\n                isValid: name.isValid\n            },\n            {\n                field: \"price\",\n                label: \"Цена\",\n                inputType: \"number\",\n                value: price.value,\n                isValid: price.isValid\n            },\n            {\n                field: \"description\",\n                label: \"Описание\",\n                inputType: \"textArea\",\n                value: description.value,\n                isValid: description.isValid\n            },\n        ]\n    }\n\n    // const {name, subway, photos, description, phone, category, price} = state\n\n    const getErrorClassName = (field: \"category\" | \"subway\") =>\n        !formState[field].isValid && \"createAnnouncement__title-error\"\n\n    return (\n        <div className={\"createAnnouncement fullHeightContent\"}>\n            <Header/>\n            <div className=\"createAnnouncement__container container-lg pt-5\">\n                <h1 className=\"display-5 jumbotron p-2 mb-5\">Создание объявления</h1>\n                <div className=\"createAnnouncement__category d-flex\">\n                    <h4 className={`createAnnouncement__category-title col-lg-3 text-left p-0 ${getErrorClassName(\"category\")}`}>\n                        Категория\n                    </h4>\n                    <Select className={\"col-lg-4\"} onBlurHandler={() => setIsValidFormReducer(\"category\")}\n                        onChangeHandlerSelectItem={(selectItem: any, handler: any) => selectItemOnChangeHandler(\"category\", selectItem, handler)}\n                        value={category.value.label} selectItems={categoriesData} placeHolder={\"Выбор категории\"}/>\n                </div>\n                <hr className=\"my-4\"/>\n                <div className=\"createAnnouncement__params d-flex\">\n                    <h4 className=\"createAnnouncement__params-title col-lg-3 text-left p-0\">Параметры</h4>\n                    <div className=\"col-lg-4 p-0\">\n                        {getInputsParamsConfig().map(({field, ...restConfig}) =>\n                            <TextInput className={\"mb-3\"} key={field} {...restConfig}\n                                       onBlurHandler={() => setIsValidFormReducer(field)}\n                                       onChangeHandler={(event: ChangeEvent<HTMLInputElement>) => onChangeHandler(event, field)}/>)}\n\n                        <div className=\"createAnnouncement__params-photos position-relative\">\n                            <div className=\"createAnnouncement__params-photos-label mb-3\">\n                                <span>{`Фотографии ${photos.value.length} из 5`}</span>\n                            </div>\n                            <div style={{height: \"73px\"}} className=\"createAnnouncement__params-photos-files d-flex\">\n                                {photos.value.map( ({photo, name}: any) => <Image onClickHandler={() => deleteLoadedImage(name)} className={\"createAnnouncement__params-photos-files-file col-lg-4 mr-2\"} photo={photo}/> )}\n                                {photos.value.length < 5 &&\n                                <ImagePicker className={\"col-lg-4 p-0\"} onLoadHandler={onLoadImageHandler}/>}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <hr className=\"my-4\"/>\n                <div className=\"createAnnouncement__location d-flex\">\n                    <h4 className={`createAnnouncement__location-title col-lg-3 text-left p-0 ${getErrorClassName(\"subway\")}`}>Место сделки</h4>\n                    <Select className={\"col-lg-4 p-0\"} onBlurHandler={() => setIsValidFormReducer(\"subway\")}\n                        onChangeHandlerSelectItem={(selectItem: any, handler: any) => selectItemOnChangeHandler(\"subway\", selectItem, handler)}\n                        value={subway.value.label} selectItems={subwayStationsData} placeHolder={\"Выбор метро\"}/>\n                </div>\n                <hr className=\"my-4\"/>\n\n                <div className=\"createAnnouncement__contacts d-flex\">\n                    <h4 className=\"createAnnouncement__contacts-title col-lg-3 text-left p-0\">Контакты</h4>\n                    <TextInput className={\"col-lg-3 p-0\"} isValid={phone.isValid} value={phone.value}\n                               placeholder={\"Номер телефона\"} label={\"Телефон\"} inputType={\"number\"}\n                               onBlurHandler={() => setIsValidFormReducer(\"phone\")}\n                               onChangeHandler={(event: ChangeEvent<HTMLInputElement>) => onChangeHandler(event, \"phone\")}/>\n                </div>\n                <hr className=\"my-4\"/>\n                <div className={\"d-flex justify-content-around mb-5 col-lg-7 p-0\"}>\n                    <Button className={\"btn-success col-lg-7\"} label={\"Создать объявление\"} isDisabled={isFetching} onClickHandler={checkIsReadyToSend}/>\n                    <Button className={\"btn-danger col-lg-4\"} label={\"Очистить поля\"} isDisabled={isFetching} onClickHandler={resetToInitialByPageFormReducer}/>\n                </div>\n            </div>\n            <Footer/>\n        </div>\n    );\n}\n\nexport default withAuthRedirectHoc(CreateAnnouncement);\n","export const getAnnouncementsListSelector = (state: any) => state.announcementsListState.announcementsList\r\nexport const getCurrentPageAnnouncementsListReducerSelector = (state: any) => state.announcementsListState.currentPage\r\nexport const getTotalNumOfPagesAnnouncementsListReducerSelector = (state: any) => state.announcementsListState.totalNumOfPages\r\n","import React from \"react\";\r\nimport \"./preloaderStyle.css\";\r\n\r\nconst Preloader = (props: any) => {\r\n    const {className} = props\r\n\r\n    return (\r\n    <span className={`cssload-loader ${className}`}>\r\n        <span className=\"cssload-loader-inner\"/>\r\n    </span>\r\n    )\r\n}\r\n\r\nexport default React.memo(Preloader)","import React, {useEffect, useState} from 'react';\nimport \"./buttonUpStyles.css\"\nimport Button from '../button/button';\n\n\nconst ButtonUp = (props: any) => {\n\n    const [isView, setIsView] = useState(false)\n\n    useEffect(() => {\n        document.addEventListener(\"scroll\", onScrollHandler)\n        return () => document.removeEventListener(\"scroll\", onScrollHandler)\n    }, [])\n\n    const onScrollHandler = (event: Event) => {\n        const currentHeight = Math.ceil(window.innerHeight + window.scrollY)\n        const innerHeight = window.innerHeight\n        currentHeight < innerHeight + 300 ? setIsView(false) : setIsView(true)\n    }\n\n  return isView ?\n      <Button className={\"btn-up btn-primary\"} label={\"Наверх\"}\n              onClickHandler={() => window.scrollTo(0,0)} /> : null\n}\n\nexport default ButtonUp;","import React, {useCallback, useEffect, useState} from 'react';\nimport \"./announcementsListPageStyles.css\"\nimport Header from \"../../components/header/header\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport Footer from \"../../components/footer/footer\";\nimport {getAnnouncementsByFiltersThunk, getAnnouncementsListThunk} from \"../../redux/thunks/thunks\";\nimport Announcement from \"../../components/announcement/announcement\";\nimport useInfinityScroll from \"../../hooks/useInfinityScroll\";\nimport {\n    getAnnouncementsListSelector,\n    getCurrentPageAnnouncementsListReducerSelector,\n    getTotalNumOfPagesAnnouncementsListReducerSelector\n} from \"../../redux/reducers/announcementsListState/announcementsListStateSelectors\";\nimport {\n    getCategoriesDataSelector,\n    getIsFetchingMainStateSelector\n} from \"../../redux/reducers/mainState/mainStateSelectors\";\nimport {\n    resetToInitialStateAnnouncementsListReducerAC,\n    setCurrentPageAnnouncementsListReducerAC\n} from \"../../redux/reducers/announcementsListState/announcementsListStateActionCreators\";\nimport {NavLink, useHistory} from 'react-router-dom';\nimport {\n    getCurrentPageSearchReducerSelector,\n    getIsFetchingSearchReducerSelector, getSearchConfigCategorySelector, getSearchConfigSubwayStationsSelector,\n    getSearchedDataSelector,\n    getTotalNumOfPageSearchReducerSelector\n} from \"../../redux/reducers/searchBoxState/searchBoxStateSelectors\";\nimport SearchBox from \"../../components/searchBox/searchBox\";\nimport {\n    resetToInitialStateSearchReducerAC,\n    setCurrentPageSearchReducerAC\n} from '../../redux/reducers/searchBoxState/searchBoxStateActionCreators';\nimport Preloader from \"../../components/preloader/preloader\";\nimport ButtonUp from \"../../components/buttonUp/buttonUp\";\nimport {GET_PATH_SEARCH} from \"../../app/App\";\nimport NavCategoryButton from \"../../components/navCategoryButton/navCategoryButton\";\n\n\nconst AnnouncementsListPage = (props: any) => {\n\n    //------USE-HISTORY-----//\n    const {location : {pathname}} = useHistory()\n    const category = pathname.substr(1)\n\n    //------MAP-STATE-TO-PROPS-----//\n    const categoriesData = useSelector( (state) => getCategoriesDataSelector(state))\n        //---SEARCHED-BOX-STATE---//\n    const {label:currentCategory} = useSelector(getSearchConfigCategorySelector)\n    const {label:currentSubway}: any = useSelector(getSearchConfigSubwayStationsSelector)\n\n    const searchedData = useSelector(getSearchedDataSelector)\n    const isFetchingSearchState = useSelector(getIsFetchingSearchReducerSelector)\n    const currentPageSearch = useSelector(getCurrentPageSearchReducerSelector)\n    const totalNumOfPageSearch = useSelector(getTotalNumOfPageSearchReducerSelector)\n    const isEqualsCurrAndTotalPageSearch = currentPageSearch === totalNumOfPageSearch\n        //----------------------//\n    const isSearchState = searchedData.length || isFetchingSearchState\n    //---ANNOUNCEMENTS-LIST-STATE---//\n    const announcementsList = useSelector(getAnnouncementsListSelector)\n    const isFetchingMainState = useSelector(getIsFetchingMainStateSelector)\n    const currentPage = useSelector(getCurrentPageAnnouncementsListReducerSelector)\n    const totalNumOfPages = useSelector(getTotalNumOfPagesAnnouncementsListReducerSelector)\n    const isEqualsCurrAndTotalPage = currentPage === totalNumOfPages\n\n    //-----MAP-DISPATCH-TO-PROPS----//\n    const dispatch = useDispatch()\n    const getAnnouncements = useCallback((category, withConcat = false) => dispatch(getAnnouncementsListThunk(category, withConcat)), [dispatch])\n    const getAnnouncementsByFilters = useCallback(() => dispatch(getAnnouncementsByFiltersThunk(true)), [dispatch])\n    const setCurrentPage = useCallback(() => dispatch(setCurrentPageAnnouncementsListReducerAC()), [dispatch])\n    const setCurrentPageSearchBox = useCallback(() => dispatch(setCurrentPageSearchReducerAC()), [dispatch])\n    const resetToInitialStateAnnouncementsList = useCallback(() => dispatch(resetToInitialStateAnnouncementsListReducerAC()), [dispatch])\n    const resetToInitialStateSearchReducer = useCallback(() => dispatch(resetToInitialStateSearchReducerAC()), [dispatch])\n\n    //---GET-ACTIONS---//\n    const getDataAction: () => Function = () => isSearchState ? getAnnouncementsByFilters : getAnnouncements\n    const getDataState: () => Array<any> = () => isSearchState ? searchedData : announcementsList\n    const getSetCurrentPageAction: () => Function = () => isSearchState ? setCurrentPageSearchBox : setCurrentPage\n    const getIsEqualsCurrAndTotalPage: () => boolean = () => isSearchState ? isEqualsCurrAndTotalPageSearch : isEqualsCurrAndTotalPage\n\n    //---LOCAL-STATE---//\n    const [state, setState] = useState(() => ( {currentCategory, currentSubway} ) )\n\n    //----COMPONENT-DID-MOUNT/UNMOUNT-LIFECYCLE----//\n    useEffect(() => {\n        getAnnouncements(category)\n        return () => {\n            resetToInitialStateAnnouncementsList()\n            resetToInitialStateSearchReducer()\n        }\n    }, [])\n\n    //----COMPONENT-DID-UPDATE-LIFECYCLE----//\n    useEffect(() => {\n        resetToInitialStateAnnouncementsList()\n        getAnnouncements(category)\n        setState({currentCategory, currentSubway})\n    }, [category])\n\n    //------INFINITY-SCROLL------//\n    const infinityScrollHandler = () => (event: any) => {\n        if(!getIsEqualsCurrAndTotalPage()) {\n            getSetCurrentPageAction()()\n            getDataAction()(category, true)\n        }\n    }\n    useInfinityScroll(infinityScrollHandler())\n\n    return (\n        <div className={\"announcementsList fullHeightContent\"}>\n            <Header/>\n            <SearchBox className={\"mt-4\"} placeHolder={\"Поиск по объявлениям\"}/>\n            <hr className={\"my-4\"}/>\n            <div className=\"row d-flex justify-content-center col-lg-12\">\n                <h5 className={\"alert alert-success\"}>\n                    <span className={\"font-weight-bold\"}>Поиск по : </span>\n                    {state.currentSubway}> {state.currentCategory}\n                </h5>\n            </div>\n            <hr className={\"my-4\"}/>\n            <div className=\"announcementsList__slider-container d-flex container-fluid pt-2 pb-5\">\n                <div className=\"slider-container__slider col-lg-2 p-0 \">\n                    {categoriesData.map( (categoryData: any) => {\n                        const {id, label, category, subCategories = []} = categoryData\n                        return <>\n                            <NavCategoryButton key={id} category={category} activeClassName={\"text-warning\"} configCategory={categoryData}>\n                            <h5>{label}</h5>\n                        </NavCategoryButton>\n                            {subCategories.map( (subCategoryData: any) => {\n                                const {id, label, category} = subCategoryData\n                                return <NavCategoryButton key={id} activeClassName={\"text-warning\"} category={category} configCategory={categoryData}>\n                                    <h6>- {label}</h6>\n                                </NavCategoryButton> } )}\n                        </> } ) }\n                    <hr className={\"my-0 mt-4\"}/>\n                </div>\n                <div className=\"slider-container__content col-lg-8\">\n                    {getDataState().map( ({id, ...restMyAnnouncement}: any) =>\n                        <div key={id} className=\"announcementsList__item\">\n                            <Announcement className={\"horizontalCard\"} id={id} {...restMyAnnouncement}/>\n                        </div>) }\n                    <ButtonUp/>\n                    {isFetchingSearchState || isFetchingMainState && <Preloader/>}\n                </div>\n            </div>\n            <Footer/>\n        </div>\n    );\n}\n\nexport default AnnouncementsListPage;\n","import React, {useCallback, useEffect} from 'react';\nimport \"./appStyles.css\"\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport FeedPage from \"../pages/feedPage/feedPage\";\nimport ContactsPage from \"../pages/contactsPage/contactsPage\";\nimport SettingsPage from \"../pages/settingsPage/settingsPage\";\nimport AnnouncementPage from '../pages/announcementPage/announcementPage';\nimport MyAnnouncementsPage from \"../pages/myAnnouncementsPage/myAnnouncementsPage\";\nimport CreateAnnouncement from \"../pages/createAnnouncement/createAnnouncement\";\n\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {getSubwayStationsThunk, getUserInfoThunk} from \"../redux/thunks/thunks\";\nimport AnnouncementsListPage from \"../pages/announcementsListPage/announcementsListPage\";\nimport {getCategoriesDataSelector, getTheSubCategoriesSelector} from \"../redux/reducers/mainState/mainStateSelectors\";\n\nexport const PATH_FEED = \"/feed\"\nexport const PATH_MY_ANNOUNCEMENTS = \"/myAnnouncements\"\nexport const PATH_CREATE_ANNOUNCEMENT = \"/createAnnouncement\"\nexport const PATH_SETTINGS = \"/settings\"\nexport const PATH_SEARCH = \"/search\"\nexport const GET_PATH_SEARCH = (category: string) =>  `${PATH_SEARCH}/${category}`\nexport const PATH_CONTACTS = \"/contacts\"\n\nconst App = () => {\n\n    //------MAP-STATE-TO-PROPS-----//\n    const categoriesData = useSelector( (state) =>\n        getTheSubCategoriesSelector(getCategoriesDataSelector(state)))\n\n    //-----MAP-DISPATCH-TO-PROPS----//\n    const dispatch = useDispatch()\n    const getSubwayStations = useCallback(() => dispatch(getSubwayStationsThunk()), [dispatch])\n    const getUserData = useCallback(() => dispatch(getUserInfoThunk()), [dispatch])\n\n    useEffect(() => {\n        getSubwayStations()\n        getUserData()\n    }, [])\n\n    return (\n    <div className=\"App bg-light\">\n        <Switch>\n            <Route exact path={PATH_CREATE_ANNOUNCEMENT} component={CreateAnnouncement}/>\n            <Route exact path={PATH_FEED} component={FeedPage}/>\n            <Route exact path={PATH_MY_ANNOUNCEMENTS} component={MyAnnouncementsPage}/>\n            <Route exact path={PATH_SETTINGS} component={SettingsPage}/>\n            <Route exact path={PATH_CONTACTS} component={ContactsPage}/>\n            {categoriesData.map( ({category}:any) => <Route exact path={GET_PATH_SEARCH(category)} component={AnnouncementsListPage}/> )}\n            {categoriesData.map( ({category}:any) =>  <Route exact path={`${GET_PATH_SEARCH(category)}/:id`} component={AnnouncementPage}/> )}\n            <Redirect to={PATH_FEED}/>\n        </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\n\r\nimport thunkMiddleWare from \"redux-thunk\";\r\n\r\nimport { connectRouter, routerMiddleware } from 'connected-react-router'\r\nimport { createBrowserHistory } from 'history'\r\nimport {mainStateReducer} from \"./reducers/mainState/mainState\";\r\nimport { authorizationStateReducer } from \"./reducers/authorizationState/authorizationState\";\r\nimport {searchBoxStateReducer} from \"./reducers/searchBoxState/searchBoxState\";\r\nimport {feedStateReducer} from \"./reducers/feedState/feedState\";\r\nimport { settingsStateReducer } from \"./reducers/settingsState/settingsState\";\r\nimport {announcementStateReducer} from \"./reducers/announcementState/announcementState\";\r\nimport {myAnnouncementsStateReducer} from \"./reducers/myAnnouncementState/myAnnouncementState\";\r\nimport {announcementsListStateReducer} from \"./reducers/announcementsListState/announcementsListState\";\r\nimport formStateReducer from \"./reducers/formState/formState\";\r\n\r\nexport const history = createBrowserHistory()\r\n\r\nconst reducers = () => combineReducers({\r\n    router: connectRouter(history),\r\n    mainState: mainStateReducer,\r\n    announcementsListState: announcementsListStateReducer,\r\n    formState: formStateReducer,\r\n    feedState: feedStateReducer,\r\n    searchBoxState: searchBoxStateReducer,\r\n    announcementState: announcementStateReducer,\r\n    myAnnouncementsState: myAnnouncementsStateReducer,\r\n    settingsState: settingsStateReducer,\r\n    authorizationState: authorizationStateReducer\r\n})\r\n\r\ntype rootReducerType = typeof reducers\r\nexport type AppStateType = ReturnType<rootReducerType>\r\n\r\nconst store = createStore(reducers(), applyMiddleware(routerMiddleware(history), thunkMiddleWare))\r\n\r\nexport default store","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./app/App\";\n\nimport { ConnectedRouter } from \"connected-react-router\"\nimport { Provider } from \"react-redux\"\n\nimport store, {history} from \"./redux/store\"\n\n(window as any).store = store\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <ConnectedRouter history={history}>\n                <App/>\n            </ConnectedRouter>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n)"],"sourceRoot":""}
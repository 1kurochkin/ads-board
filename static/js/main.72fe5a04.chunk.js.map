{"version":3,"sources":["pictures/defaultAvatar.jpg","components/logo/logo.tsx","hooks/useOutsideClick.tsx","components/modalWindow/modalWindow.tsx","components/textInput/textInput.tsx","api/testAPI.ts","redux/reducers/mainState/mainState.tsx","redux/reducers/authorizationState/authorizationState.tsx","redux/reducers/authorizationState/authorizationStateActionCreators.tsx","redux/reducers/searchBoxState/searchBoxState.tsx","redux/reducers/searchBoxState/searchBoxStateActionCreators.tsx","redux/reducers/feedState/feedState.tsx","redux/reducers/feedState/feedStateActionCreators.tsx","redux/reducers/settingsState/settingsState.tsx","redux/reducers/settingsState/settingsStateActionCreators.tsx","redux/reducers/announcementState/announcementState.tsx","redux/reducers/announcementState/announcementStateActionCreators.tsx","redux/reducers/myAnnouncementState/myAnnouncementState.tsx","redux/reducers/myAnnouncementState/myAnnouncementStateActionCreators.tsx","redux/reducers/announcementsListState/announcementsListState.tsx","redux/reducers/announcementsListState/announcementsListStateActionCreators.tsx","redux/reducers/mainState/mainStateActionCreators.tsx","redux/reducers/formState/formState.ts","redux/reducers/formState/formStateActionCreators.tsx","redux/thunks/thunks.tsx","redux/reducers/authorizationState/authorizationStateSelectors.tsx","redux/reducers/mainState/mainStateSelectors.tsx","components/button/button.tsx","redux/reducers/formState/formStateSelectors.tsx","components/alertErrorFetching/alertErrorFetching.tsx","components/modalWindow/authorizationModalWindow/authorizationPopupBox.tsx","components/modalWindow/authorizationModalWindow/authorizationModalWindow.tsx","components/modalWindow/alertModalWindow/alertPopupBox.tsx","components/modalWindow/alertModalWindow/alertModalWindow.tsx","redux/reducers/settingsState/settingsStateSelectors.tsx","components/categoryNavButton/categoryNavigationButton.tsx","components/navBar/navBar.tsx","components/header/header.tsx","components/searchBox/select/selectItem/selectItem.tsx","components/searchBox/select/select.tsx","redux/reducers/searchBoxState/searchBoxStateSelectors.tsx","components/searchBox/searchBox.tsx","redux/reducers/feedState/feedStateSelectors.tsx","components/image/image.tsx","components/announcement/announcement.tsx","components/footer/footer.tsx","components/buttonUp/buttonUp.tsx","components/preloader/preloader.tsx","components/alertEmptyResponse/alertEmptyResponse.tsx","components/withBadFetchingCasesWrapper/withBadFetchingCasesWrapper.tsx","components/categoryNavigation/categoryNavigation.tsx","pages/feedPage/feedPage.tsx","pages/contactsPage/contactsPage.tsx","hocs/withAuthRedirectHoc.tsx","components/imagePicker/imagePicker.tsx","pages/settingsPage/settingsPage.tsx","redux/reducers/announcementState/announcementStateSelectors.tsx","components/slider/slider.tsx","pages/announcementPage/announcementPage.tsx","redux/reducers/myAnnouncementState/myAnnouncementStateSelectors.tsx","hooks/useInfinityScroll.tsx","pages/myAnnouncementsPage/myAnnouncementsPage.tsx","pages/createAnnouncement/createAnnouncement.tsx","redux/reducers/announcementsListState/announcementsListStateSelectors.tsx","pages/announcementsListPage/announcementsListPage.tsx","app/App.tsx","redux/store.tsx","index.tsx"],"names":["module","exports","Logo","props","className","to","useOutsideClick","ref","handler","listener","event","popupBox","current","path","composed","composedPath","includes","useEffect","document","addEventListener","removeEventListener","ModalWindow","isActiveFromProps","modal","withOpenBtn","children","alertCloseHandler","useRef","useState","isActive","setIsActive","closeModalWindow","withAlertClose","React","cloneElement","onClick","TextInput","placeholder","value","key","onBlurHandler","onChangeHandler","inputType","label","isValid","style","resize","rows","onChange","onBlur","type","testAPI","baseUrl","postAuthorizationData","data","console","log","fetch","postRegistrationData","getLastAnnouncements","page","getUserInfo","getSubwayStations","getAnnouncementsByFilters","name","category","subway","getAnnouncementsList","getAnnouncementByIdThunk","id","getMyAnnouncements","postDeleteAnnouncement","postSettingsByField","field","postSettingsAvatar","postSettingsName","postSettingsPhone","postSettingsLogin","postLogout","postDelete","postNewAnnouncement","getItemFromLocalStorage","feild","localStorage","getItem","setItemToLocalStorage","setItem","clearLocalStorage","clear","initialStateSubway","initialStateCategory","initialState","isFetching","isEmptyResponse","isErrorFetch","subwayStationsData","categoriesData","subCategories","apiService","mainStateReducer","state","action","payload","concat","isRegistration","isCorrectAuthData","isAuth","authorizationStateReducer","setIsCorrectAuthDataAC","searchedData","currentPage","totalNumOfPages","searchConfig","categoryId","subwayStations","searchValue","searchBoxStateReducer","withConcat","location","pathname","initialStateSearchConfig","LOCATION_CHANGE","PATH_SEARCH","newSearchedData","newCurrentPage","setSearchedDataAC","setIsFetchingSearchReducerAC","setTotalNumOfPageSearchReducerAC","setSearchConfigCategoryAC","lastAnnouncements","descriptionSalamRu","feedStateReducer","newLastAnnouncements","setLastAnnouncementsAC","avatar","defaultAvatar","phone","login","password","settingsStateReducer","setSettingsInLocalStorageByFieldAC","announcement","announcementStateReducer","settIsFetchingAnnouncementReducerAC","myAnnouncements","myAnnouncementsStateReducer","newMyAnnouncementsSet","newMyAnnouncementsDel","filter","setMyAnnouncementsAC","settIsFetchingMyAnnouncementsReducerAC","setTotalNumOfPageMyAnnouncementReducerAC","announcementsList","announcementsListStateReducer","setAnnouncementsListAC","setTotalNumOfPageAnnouncementsListReducerAC","setIsFetchingMainStateAC","setIsEmptyResponseMainStateAC","setIsErrorFetchMainStateAC","defaultInitialStateForFormField","authorization","isReadyToSend","registration","phoneNumber","createAnnouncement","photoList","price","description","sellerPhone","stationId","settings","checkIsValid","length","JSON","stringify","prepareFormStateByPageForSend","restFormState","stateEntries","Object","entries","defaultCondition","postData","condition","reduce","formStateReducer","stateByPage","stateByField","stateKeys","keys","newState","seValueFormReducerAC","setIsValidFormReducerAC","checkIsReadyToSendByPageFormReducerAC","resetToInitialByPageFormReducerAC","sendAuthorizationOrRegistrationThunk","dispatch","getState","authorizationState","mainState","then","response","ok","status","json","result","getUserInfoThunk","catch","error","getAnnouncementsByFiltersThunk","searchBoxState","pages","announcements","getLastAnnouncementsThunk","postLogoutOrDeleteUser","logoutOrDelete","push","PATH_FEED","err","getMyAnnouncementsThunk","myAnnouncementsState","getAnnouncementsListThunk","announcementsListState","restUserData","forEach","getIsRegistrationSelector","getIsAuthSelector","getIsCorrectAuthDataSelector","getIsFetchingMainStateSelector","getIsEmptyResponseMainStateSelector","getIsErrorFetchMainStateSelector","getSubwayStationsDataSelector","getCategoriesDataSelector","getTheSubCategoriesSelector","activeClassName","isIncludesSubCategory","categoryData","newCategoriesData","baseCategory","prepareCategoryToPush","Button","isDisabled","onClickHandler","getFieldsByPageFormReducerSelector","formState","AlertErrorFetching","alertText","AuthorizationPopupBox","useSelector","isErrorFetchMainState","authFormState","regFormState","currentFormState","useDispatch","sendAuthorizationOrRegistration","useCallback","setIsRegistration","boolean","seValueFormReducer","setIsCorrectAuthData","setIsValidFormReducer","resetToInitialByPageFormReducer","checkIsReadyToSend","getInputsConfig","map","currentTarget","AuthorizationModalWindow","openModalWindow","AlertPopupBox","btnOneLabel","btnOneConfiguration","btnTwoConfiguration","btnTwoHandler","btnTwoLabel","AlertModalWindow","openBtnElement","btnOneHandler","getSettingsFieldValueByFieldSelector","settingsState","CategoryNavigationButton","setSearchConfigCategory","configCategory","GET_PATH_SEARCH","NavBar","linkConfigs","PATH_CONTACTS","Header","logoutUser","isActiveAuthModal","setIsActiveAuthModal","isActiveMobileMenu","setIsActiveMobileMenu","isActiveAuthMenu","setIsActiveAuthMenu","isActiveLogoutAlert","setIsActiveLogoutAlert","toggleIsActiveAuthMenu","prevState","alertCreateAnnouncement","alertLogout","authMenu","PATH_MY_ANNOUNCEMENTS","PATH_SETTINGS","linkToCreateAnnouncement","SelectItem","Select","selectItems","placeHolder","onChangeHandlerSelectItem","toggleIsActive","prevIsActive","readOnly","selectItem","getSearchedDataSelector","getSearchConfigCategorySelector","getSearchConfigSubwayStationsSelector","getSearchConfigSearchValueSelector","getIsFetchingSearchReducerSelector","getCurrentPageSearchReducerSelector","getTotalNumOfPageSearchReducerSelector","SearchBox","useHistory","searchConfigCategory","searchConfigSubwayStation","searchConfigSearchValue","resetToInitialStateSearchReducer","setSearchConfigSubwayStation","station","setSearchConfigSearchValue","setSearchConfigSearchValueAC","setSearchValue","selectItemOnChangeHandler","setIsActiveSelect","target","newPathname","getLastAnnouncementsSelector","feedState","getDescriptionSalamRuSelector","Image","photo","styles","backgroundImage","Announcement","creationDate","subwayStation","Footer","ButtonUp","isView","setIsView","onScrollHandler","currentHeight","Math","ceil","window","innerHeight","scrollY","scrollTo","memo","AlertEmptyResponse","WithBadFetchingCasesWrapper","isFetchingRedux","isEmptyResponseRedux","isErrorFetchingRedux","preloader","alertEmptyResponse","alertErrorFetching","isErrorFetching","CategoryNavigation","subCategoryData","FeedPage","lastAnnouncement","ContactsPage","withAuthRedirectHoc","Component","ImagePicker","onLoadHandler","file","files","Date","now","reader","FileReader","onload","readAsDataURL","settingsStateEntries","postSettingByField","values","postSettingByFieldThunk","deleteUser","image","imageName","restConfig","valueFromSettingsState","getAnnouncementSelector","announcementState","getIsFetchingAnnouncementReducerSelector","currentSlide","setCurrentSlide","changeSlide","nextOrPrev","transformStyle","transform","child","AnnouncementPage","photos","contactName","contactPhone","getAnnouncementById","useParams","goBack","getMyAnnouncementsSelector","getIsFetchingMyAnnouncementsReducerSelector","getCurrentPageMyAnnouncementsReducerSelector","getTotalNumOfPagesMyAnnouncementsReducerSelector","useInfinityScroll","scrollHandler","max","body","scrollHeight","documentElement","offsetHeight","clientHeight","setCurrentPage","delMyAnnouncementByIdAC","postDeleteAnnouncementThunk","infinityScrollHandler","restMyAnnouncement","phoneRedux","postNewAnnouncementThunk","setValueFormReducer","getErrorClassName","newPhotosValue","deleteLoadedImage","getAnnouncementsListSelector","getCurrentPageAnnouncementsListReducerSelector","getTotalNumOfPagesAnnouncementsListReducerSelector","AnnouncementsListPage","substr","currentCategory","currentSubway","isFetchingSearchState","isEqualsCurrAndTotalPageSearch","isSearchState","isEqualsCurrAndTotalPage","isFetchingMainState","getAnnouncements","setCurrentPageSearchBox","resetToInitialStateAnnouncementsList","getIsEqualsCurrAndTotalPage","setState","App","getUserData","exact","component","CreateAnnouncement","MyAnnouncementsPage","SettingsPage","history","createBrowserHistory","store","createStore","combineReducers","router","connectRouter","applyMiddleware","routerMiddleware","thunkMiddleWare","ReactDOM","render","StrictMode","getElementById"],"mappings":"8GAAAA,EAAOC,QAAU,IAA0B,2C,ynBCiB5BC,G,YAbF,SAACC,GAAgB,IACnBC,EAAaD,EAAbC,UACT,OACI,kBAAC,IAAD,CAASA,UAAWA,EAAWC,GAAI,SAC/B,yBAAKD,UAAU,oCACX,0BAAMA,UAAW,iHAAjB,KACA,0BAAMA,UAAW,oBAAjB,gBCOCE,G,MAfS,SAACC,EAAUC,GAE/B,IAAMC,EAAW,SAACC,GACd,IAAMC,EAAWJ,EAAIK,UACNF,EAAMG,MAAUH,EAAMI,UAAYJ,EAAMK,gBAC/CC,SAASL,IAAaH,EAAQE,IAG5CO,qBAAU,WAEJ,OADAC,SAASC,iBAAiB,QAASV,GAC5B,kBAAMS,SAASE,oBAAoB,QAASX,MAClD,CAACF,EAAKC,MCkCAa,EAnCK,SAAClB,GAAuB,IAEjCmB,EAA2FnB,EAA3FmB,kBAAmBC,EAAwEpB,EAAxEoB,MAFa,EAE2DpB,EAAjEqB,mBAFM,SAEeC,EAA4CtB,EAA5CsB,SAFf,EAE2DtB,EAAlCuB,yBAFzB,MAE6C,kBAAM,MAFnD,EAGjCnB,EAAgBoB,iBAAO,MAHU,EAKPC,oBAAS,GALF,mBAKhCC,EALgC,KAKtBC,EALsB,KAOvCb,qBAAU,WACRK,GAAqBQ,GAAY,KAChC,CAACR,IAEJ,IAGMS,EAAmB,WAA4B,IAA3BC,IAA0B,yDAChDF,GAAY,GACZE,GAAkBN,KAKtB,OAFApB,EAAgBC,GARY,WAC1BsB,GAAYE,OAWV,oCACI,yBAAK3B,UAAS,sBAAiByB,GAAY,sBAA7B,MACV,yBAAKtB,IAAKA,EAAKH,UAAU,yCACpB6B,IAAMC,aAAaX,EAAO,CAACQ,qBAC5B,0BAAMI,QAAS,kBAAMJ,KAAoB3B,UAAW,gBAApD,UAGNoB,GAAeC,GAAS,kBAAMK,GAAY,QCHzCM,G,YAxBG,SAACjC,GAAuB,IAGtCC,EAOkBD,EAPlBC,UACAiC,EAMkBlC,EANlBkC,YACAC,EAKkBnC,EALlBmC,MAAOC,EAKWpC,EALXoC,IACPC,EAIkBrC,EAJlBqC,cACAC,EAGkBtC,EAHlBsC,gBAPqC,EAUnBtC,EAFlBuC,iBARqC,MAQzB,OARyB,IAUnBvC,EADlBwC,aATqC,MAS7B,GAT6B,IAUnBxC,EAAlByC,eAVqC,SAYvC,OACM,yBAAKxC,UAAS,oBAAgBwC,EAA+B,KAArB,mBAA1B,YAAuDxC,IACnE,+BAAQuC,GACO,aAAdD,EACG,8BAAUG,MAAO,CAACC,OAAQ,QAASC,KAAM,EAAG3C,UAAW,eAAgB4C,SAAU,SAACtC,GAAD,OAAW+B,EAAgB/B,IAAQ2B,YAAaA,EACvHY,OAAQ,SAACvC,GAAD,OAAW8B,EAAc9B,IAAQ4B,MAAOA,IAC1D,2BAAOlC,UAAW,eAAgBmC,IAAKA,EAAKU,OAAQ,SAACvC,GAAD,OAAW8B,EAAc9B,IAAQ4B,MAAOA,EAAOY,KAAMR,EAAWL,YAAaA,EAC1HW,SAAU,SAACtC,GAAD,OAAW+B,EAAgB/B,S,8BCR7CyC,EAAb,kCAAaA,EAEFC,QAAU,UAFRD,EAKFE,sBAAwB,SAACC,GAE3B,OADDC,QAAQC,IAAIF,EAAM,yBACVG,MAAM,gEAPTN,EAUFO,qBAAuB,SAACJ,GAE3B,OADAC,QAAQC,IAAIF,EAAM,wBACXG,MAAM,gEAZRN,EAiBFQ,qBAAuB,SAACC,GAC3BL,QAAQC,IAAI,wBAEZ,OAAOC,MAAM,qEApBRN,EAwBFU,YAAc,WAEjB,OADAN,QAAQC,IAAI,eACLC,MAAM,4DA1BRN,EA8BFW,kBAAoB,WAEvB,OADAP,QAAQC,IAAI,qBACLC,MAAM,kEAhCRN,EAmCFY,0BAA4B,SAACH,EAAcI,EAAeC,EAA2BC,GACxF,IAAMrD,EAAI,yCAAqC+C,EAArC,qBAAsDK,EAAtD,iBAAuED,EAAvE,mBAAsFE,GAEhG,OADAX,QAAQC,IAAII,EAAMK,EAAUD,EAAME,EAAQ,4BAA6BrD,GAChE4C,MAAM,0EAtCRN,EA0CFgB,qBAAuB,SAACP,EAAcK,GACzC,IAAMpD,EAAI,iDAA6C+C,EAA7C,qBAA8DK,GAExE,OADAV,QAAQC,IAAII,EAAMK,EAAU,oCAAqCpD,GAC1D4C,MAAM,qEA7CRN,EAiDFiB,yBAA2B,SAACH,EAAwCI,GACvEd,QAAQC,IAAI,2BAA4BS,EAAUI,GACxC,mCAA+BJ,EAA/B,YAA2CI,GACrD,OAAOZ,MAAM,gEApDRN,EAwDFmB,mBAAqB,SAACV,GACzBL,QAAQC,IAAI,sBACF,kCAA8BI,GACxC,OAAOH,MAAM,mEA3DRN,EA8DFoB,uBAAyB,SAACF,GAE7B,OADAd,QAAQC,IAAIa,EAAI,0BACTZ,MAAM,gEAhERN,EAsEFqB,oBAAsB,SAAClB,EAAWmB,GAErC,OADAlB,QAAQC,IAAIF,EAAM,uBACVmB,GACJ,IAAK,SAAU,OAAOtB,EAAQuB,mBAAmBpB,GACjD,IAAK,OAAQ,OAAOH,EAAQwB,iBAAiBrB,GAC7C,IAAK,QAAS,OAAOH,EAAQyB,kBAAkBtB,GAC/C,IAAK,QAAS,OAAOH,EAAQ0B,kBAAkBvB,GAC/C,QAAS,OAAOH,EAAQuB,mBAAmBpB,KA7E1CH,EAgFFuB,mBAAqB,SAACpB,GAEzB,OADAC,QAAQC,IAAIF,EAAM,sBACXG,MAAM,gEAlFRN,EAqFFwB,iBAAmB,SAACrB,GAEvB,OADAC,QAAQC,IAAIF,EAAM,oBACXG,MAAM,gEAvFRN,EA0FF0B,kBAAoB,SAACvB,GAExB,OADAC,QAAQC,IAAIF,EAAM,qBACXG,MAAM,gEA5FRN,EA+FFyB,kBAAoB,SAACtB,GAExB,OADAC,QAAQC,IAAIF,EAAM,qBACXG,MAAM,gEAjGRN,EAoGF2B,WAAa,WAEhB,OADAvB,QAAQC,IAAI,cACLC,MAAM,gEAtGRN,EAyGF4B,WAAa,WAEhB,OADAxB,QAAQC,IAAI,cACLC,MAAM,gEA3GRN,EA+GF6B,oBAAsB,SAAC1B,GAE1B,OADAC,QAAQC,IAAIF,EAAM,uBACXG,MAAM,gECxId,IAAMwB,EAA0B,SAACC,GAAD,OAAkBC,aAAaC,QAAQF,IACjEG,EAAwB,SAACH,EAAc5C,GAAf,OAA6B6C,aAAaG,QAAQJ,EAAO5C,IACjFiD,EAAoB,kBAAMJ,aAAaK,SAQvCC,EAAqB,CAACpB,GAAI,GAAIL,KAAM,gGACpC0B,EAAuB,CAAErB,GAAI,GAAIL,KAAM,wFAAmBC,SAAU,OAG3E0B,EAAe,CACjBC,YAAY,EACZC,iBAAiB,EACjBC,cAAc,EACdC,mBAAoB,CAACN,GACrBO,eAAiB,CACbN,EACA,CACIrB,GAAI,EACJL,KAAM,2EACNC,SAAU,UACVgC,cAAgB,CACZ,CAAC5B,GAAI,EAAGL,KAAM,mDAAYC,SAAU,cACpC,CAACI,GAAI,EAAGL,KAAM,6CAAWC,SAAU,QACnC,CAACI,GAAI,EAAGL,KAAM,gEAAeC,SAAU,UAG/C,CACII,GAAI,EACJL,KAAM,uCACNC,SAAU,MACVgC,cAAgB,CACZ,CAAC5B,GAAI,EAAGL,KAAM,mDAAYC,SAAU,gBAIhDiC,WAAY/C,GAIHgD,EAAmB,WAA2D,IAA1DC,EAAyD,uDAAjDT,EAAcU,EAAmC,uCAC/EnD,EAAkBmD,EAAlBnD,KAAMoD,EAAYD,EAAZC,QADyE,EAEpEA,GAAW,GAArBhE,EAF8E,EAE9EA,MACAyD,EAAuBK,EAAvBL,mBAER,OAAQ7C,GACJ,IA9CkC,6BAgD9B,OADAK,QAAQC,IAAI,6BAA8BlB,GACnC,2BAAI8D,GAAX,IAAkBR,WAAYtD,IAClC,IA/CwC,mCAiDpC,OADAiB,QAAQC,IAAI,mCAAoClB,GACzC,2BAAI8D,GAAX,IAAkBP,gBAAiBvD,IACvC,IAjDqC,gCAmDjC,OADAiB,QAAQC,IAAI,gCAAiClB,GACtC,2BAAI8D,GAAX,IAAkBN,aAAcxD,IACpC,IAtDgC,2BAwD5B,OADAiB,QAAQC,IAAI,2BAA4BlB,GACjC,2BAAI8D,GAAX,IAAkBL,mBAAoBA,EAAmBQ,OAAOjE,KACpE,IAtD2C,sCAwDvC,OADAiB,QAAQC,IAAI,sCAAuClB,GAC5CqD,EACX,QAAS,OAAOS,ICrDlBT,EAAe,CACjBa,gBAAgB,EAChBC,mBAAmB,EACnBC,OAAQ,kBAA4C,OAAtCzB,EAAwB,YAG7B0B,EAA4B,WAAqF,IAApFP,EAAmF,uDAA3ET,EAAcU,EAA6D,uCAClHnD,EAAkBmD,EAAlBnD,KAAMoD,EAAYD,EAAZC,QAD4G,EAEvGA,GAAW,GAArBhE,EAFiH,EAEjHA,MAER,OAAQY,GACJ,IAjB2B,sBAmBvB,OADAK,QAAQC,IAAI,sBAAuBlB,GAC5B,2BAAI8D,GAAX,IAAkBI,eAAgBlE,IACtC,IAnBgC,2BAqB5B,OADAiB,QAAQC,IAAI,2BAA4BlB,GACjC,2BAAI8D,GAAX,IAAkBK,kBAAmBnE,IACzC,IArBmB,cAwBf,OAFAiB,QAAQC,IAAI,cAAelB,GAC3B+C,EAAsB,SAAU/C,GACzB,2BAAI8D,GAAX,IAAkBM,OAAQ,kBAA4C,OAAtCzB,EAAwB,aAC5D,IAxB6B,wBA2BzB,OAFA1B,QAAQC,IAAI,yBACZ+B,IACOa,EACX,ID7B2C,sCC+BvC,OADA7C,QAAQC,IAAI,sCAAuClB,GAC5CqD,EACX,QAAS,OAAOS,ICvBXQ,EAAyB,SAACtE,GAAD,MAA+C,CAAEY,KDV/C,2BCU+EoD,QAAS,CAAChE,W,OCJ3HqD,EAAe,CACjBkB,aAAe,GACfC,YAAc,EACdC,gBAAiB,EACjBnB,YAAY,EACZoB,aAAe,CACXC,WAAYvB,EACZwB,eAAgBzB,EAChB0B,YAAa,KAIRC,EAAwB,WAA0D,IAAzDhB,EAAwD,uDAAhDT,EAAcU,EAAkC,uCAClFnD,EAAkBmD,EAAlBnD,KAAMoD,EAAYD,EAAZC,QAD4E,EAE1BA,GAAW,GAAnEhE,EAFkF,EAElFA,MAAO+E,EAF2E,EAE3EA,WAF2E,IAE/DC,SAF+D,gBAEjC,GAFiC,GAEnDC,gBAFmD,MAExC,IAFwC,EAGlFV,EAAwDT,EAAxDS,aAAcC,EAA0CV,EAA1CU,YAAaE,EAA6BZ,EAA7BY,aAAcpB,EAAeQ,EAAfR,WAC5B4B,EAA4B7B,EAA1CqB,aAEP,OAAQ9D,GACJ,KAAKuE,IAED,OADAlE,QAAQC,IAAI,kBAAmB8C,GACvBiB,EAASvG,SAAS0G,IAC+BtB,EADlD,2BACCA,GADD,IACQY,aAAcQ,IACjC,IAnCyB,oBAoCrBjE,QAAQC,IAAI,oBAAqBlB,GACjC,IAAMqF,EAAkBN,EAAaR,EAAaN,OAAOjE,GAASA,EAClE,OAAO,2BAAI8D,GAAX,IAAkBS,aAAcc,IACpC,IAtCsC,iCAwClC,OADApE,QAAQC,IAAI,iCAAkClB,GACvC,2BAAI8D,GAAX,IAAkBR,WAAYtD,IAClC,IAxCuC,kCAyCnC,IAAMsF,EAAiBd,EAAc,EAErC,OADAvD,QAAQC,IAAI,kCAAmCoE,GACxC,2BAAIxB,GAAX,IAAkBU,YAAac,IACnC,IA3C4C,uCA6CxC,OADArE,QAAQC,IAAI,uCAAwClB,GAC7C,2BAAI8D,GAAX,IAAkBW,gBAAiBzE,IACvC,IA7CuC,kCA+CnC,OADAiB,QAAQC,IAAI,kCAAmClB,GACxC,2BAAIqD,GAAX,IAAyBC,aAAYoB,aAAa,eAAKA,KAC3D,IA/CqC,gCAiDjC,OADAzD,QAAQC,IAAI,gCAAiClB,GACtC,2BAAI8D,GAAX,IAAkBY,aAAa,2BAAKA,GAAN,IAAoBC,WAAY3E,MAClE,IAjDyC,oCAmDrC,OADAiB,QAAQC,IAAI,oCAAqClB,GAC1C,2BAAI8D,GAAX,IAAkBY,aAAa,2BAAKA,GAAN,IAAoBE,eAAgB5E,MACtE,IAnDsC,iCAqDlC,OADAiB,QAAQC,IAAI,iCAAkClB,GACvC,2BAAI8D,GAAX,IAAkBY,aAAa,2BAAKA,GAAN,IAAoBG,YAAa7E,MACnE,IHtD2C,sCGwDvC,OADAiB,QAAQC,IAAI,sCAAuClB,GAC5CqD,EACX,QAAS,OAAOS,IC1DXyB,EAAoB,SAACvF,EAAkB+E,GAAnB,MAAgE,CAAEnE,KDNlE,oBCM2FoD,QAAS,CAAChE,QAAO+E,gBAChIS,EAA+B,SAACxF,GAAD,MAAqD,CAAEY,KDNrD,iCCM2FoD,QAAS,CAAChE,WAEtIyF,EAAmC,SAACzF,GAAD,MAAwD,CAAEY,KDNtD,uCCMkGoD,QAAS,CAAChE,WAEnJ0F,EAA4B,SAAC1F,GAAD,MAA8C,CAAEY,KDN5C,gCCMiFoD,QAAS,CAAChE,WCTlIqD,EAAe,CACjBsC,kBAAmB,GACnBrC,YAAY,EACZsC,mBAAoB,IAGXC,EAAmB,WAA0D,IAAzD/B,EAAwD,uDAAhDT,EAAcU,EAAkC,uCAC9EnD,EAAkBmD,EAAlBnD,KAAMoD,EAAYD,EAAZC,QADwE,EAE/CA,GAAW,GAAzChE,EAF6E,EAE7EA,MAF6E,IAEtE+E,kBAFsE,SAG9EY,EAAqB7B,EAArB6B,kBAEP,OAAQ/E,GACJ,IAf8B,yBAgB1BK,QAAQC,IAAI,yBAA0BlB,GACtC,IAAM8F,EAAuBf,EAAaY,EAAkB1B,OAAOjE,GAASA,EAC5E,OAAO,2BAAI8D,GAAX,IAAkB6B,kBAAmBG,IACzC,IApBoC,+BAsBhC,OADA7E,QAAQC,IAAI,+BAAgClB,GACrC,2BAAI8D,GAAX,IAAkBR,WAAYtD,IAClC,ILd2C,sCKgBvC,OADAiB,QAAQC,IAAI,sCAAuClB,GAC5CqD,EACX,QAAS,OAAOS,ICvBXiC,EAAyB,SAAC/F,EAAkB+E,GAAnB,MAAsE,CAAEnE,KDFxE,yBCEsGoD,QAAS,CAAChE,QAAO+E,gB,iBCKvJ1B,EAAe,CACjB2C,OAAQ,kBAAMrD,EAAwB,WAAasD,KACnDvE,KAAM,kBAAMiB,EAAwB,SAAW,IAC/CuD,MAAO,kBAAMvD,EAAwB,UAAY,IACjDwD,MAAO,kBAAMxD,EAAwB,UAAY,IACjDyD,SAAU,kBAAMzD,EAAwB,aAAe,IACvDW,YAAY,GAKH+C,EAAuB,WAA2D,IAA1DvC,EAAyD,uDAAjDT,EAAcU,EAAmC,uCACnFnD,EAAkBmD,EAAlBnD,KAAMoD,EAAYD,EAAZC,QAD6E,EAEjEA,GAAW,GAA5BhE,EAFkF,EAElFA,MAAOmC,EAF2E,EAE3EA,MAEf,OAAQvB,GACJ,IApB8C,yCAuB1C,OAFAK,QAAQC,IAAI,yCAA0ClB,GACtD+C,EAAsBZ,EAAOnC,GACtB8D,EACX,IAvBwC,mCAyBpC,OADA7C,QAAQC,IAAI,mCAAoClB,GACzC,2BAAI8D,GAAX,IAAkBR,WAAYtD,IAClC,IPtB2C,sCOwBvC,OADAiB,QAAQC,IAAI,sCAAuClB,GAC5CqD,EACX,QAAS,OAAOS,ICrBXwC,EAAqC,SAACtG,EAAWmC,GAAZ,MAC7C,CAAEvB,KDV+C,yCCUDoD,QAAS,CAAChE,QAAOmC,WCVhEkB,EAAe,CACjBkD,aAAc,GACdjD,YAAY,GAGHkD,EAA2B,WAA0D,IAAzD1C,EAAwD,uDAAhDT,EAAcU,EAAkC,uCACtFnD,EAAkBmD,EAAlBnD,KAAMoD,EAAYD,EAAZC,QADgF,EAE3EA,GAAW,GAArBhE,EAFqF,EAErFA,MAER,OAAQY,GACJ,IAbwB,mBAepB,OADAK,QAAQC,IAAI,mBAAoBlB,GACzB,2BAAI8D,GAAX,IAAkByC,aAAcvG,IACpC,IAjB4C,uCAmBxC,OADAiB,QAAQC,IAAI,+BAAgClB,GACrC,2BAAI8D,GAAX,IAAkBR,WAAYtD,IAClC,ITX2C,sCSavC,OADAiB,QAAQC,IAAI,sCAAuClB,GAC5CqD,EACX,QAAS,OAAOS,ICnBX2C,EAAsC,SAACzG,GAAD,MAA4D,CAAEY,KDJ7D,uCCIyGoD,QAAS,CAAChE,WCIjKqD,EAAe,CACjBqD,gBAAiB,GACjBlC,YAAa,EACbC,gBAAiB,EACjBnB,YAAY,GAGHqD,EAA8B,WAA0D,IAAzD7C,EAAwD,uDAAhDT,EAAcU,EAAkC,uCACzFnD,EAAkBmD,EAAlBnD,KAAMoD,EAAYD,EAAZC,QADmF,EAEtDA,GAAW,GAA7ChE,EAFwF,EAExFA,MAAO+B,EAFiF,EAEjFA,GAFiF,IAE7EgD,kBAF6E,SAGxF2B,EAAiC5C,EAAjC4C,gBAAiBlC,EAAgBV,EAAhBU,YAEzB,OAAQ5D,GACJ,IAlB4B,uBAmBxBK,QAAQC,IAAI,uBAAwBlB,GACpC,IAAM4G,EAAwB7B,EAAa2B,EAAgBzC,OAAOjE,GAASA,EAC3E,OAAO,2BAAI8D,GAAX,IAAkB4C,gBAAiBE,IACvC,IAvBoC,+BAwBhC3F,QAAQC,IAAI,+BAAgCa,GAC5C,IAAM8E,EAAwBH,EAAgBI,QAAQ,qBAAE/E,KAAmDA,KAC3G,OAAO,2BAAI+B,GAAX,IAAkB4C,gBAAiBG,IACvC,IA5BgD,2CA8B5C,OADA5F,QAAQC,IAAI,2CAA4ClB,GACjD,2BAAI8D,GAAX,IAAkBR,WAAYtD,IAClC,IA5BiD,4CA6B7C,IAAMsF,EAAiBd,EAAc,EAErC,OADAvD,QAAQC,IAAI,kCAAmCoE,GACxC,2BAAIxB,GAAX,IAAkBU,YAAac,IACnC,IA/BsD,iDAiClD,OADArE,QAAQC,IAAI,uCAAwClB,GAC7C,2BAAI8D,GAAX,IAAkBW,gBAAiBzE,IACvC,IX9B2C,sCWgCvC,OADAiB,QAAQC,IAAI,sCAAuClB,GAC5CqD,EACX,QAAS,OAAOS,IC1BXiD,EAAuB,SAAC/G,EAAkB+E,GAAnB,MAC/B,CAAEnE,KDd6B,uBCcDoD,QAAS,CAAChE,QAAO+E,gBAKvCiC,EAAyC,SAAChH,GAAD,MACjD,CAAEY,KDtBiD,2CCsBDoD,QAAS,CAAChE,WAKpDiH,EAA2C,SAACjH,GAAD,MACnD,CAAEY,KDxBuD,iDCwBDoD,QAAS,CAAChE,WCrBjEqD,EAAe,CACjB6D,kBAAmB,GACnB1C,YAAa,EACbC,gBAAiB,GAGR0C,EAAgC,WAA0D,IAAzDrD,EAAwD,uDAAhDT,EAAcU,EAAkC,uCAE3FnD,EAAkBmD,EAAlBnD,KAAMoD,EAAYD,EAAZC,QAFqF,EAGxDA,GAAW,GAA7ChE,EAH0F,EAG1FA,MAH0F,KAGnF+B,GAHmF,EAG/EgD,mBAH+E,SAI1FmC,EAAmCpD,EAAnCoD,kBAAmB1C,EAAgBV,EAAhBU,YAE3B,OAAQ5D,GACJ,IApB8B,yBAqB1BK,QAAQC,IAAI,yBAA0BlB,GACtC,IAAM4G,EAAwB7B,EAAamC,EAAkBjD,OAAOjE,GAASA,EAC7E,OAAO,2BAAI8D,GAAX,IAAkBoD,kBAAmBN,IACzC,IAvBmD,8CAwB/C,IAAMtB,EAAiBd,EAAc,EAErC,OADAvD,QAAQC,IAAI,8CAA+CoE,GACpD,2BAAIxB,GAAX,IAAkBU,YAAac,IACnC,IA1BwD,mDA4BpD,OADArE,QAAQC,IAAI,mDAAoDlB,GACzD,2BAAI8D,GAAX,IAAkBW,gBAAiBzE,IACvC,IA5BmD,8CA8B/C,OADAiB,QAAQC,IAAI,+CACLmC,EACX,Ib1B2C,sCa4BvC,OADApC,QAAQC,IAAI,sCAAuClB,GAC5CqD,EACX,QAAS,OAAOS,IC3BXsD,GAAyB,SAACpH,EAAkB+E,GAAnB,MACjC,CAAEnE,KDX+B,yBCWDoD,QAAS,CAAChE,QAAO+E,gBAKzCsC,GAA8C,SAACrH,GAAD,MACtD,CAAEY,KDfyD,mDCeDoD,QAAS,CAAChE,WCJ5DsH,GAA2B,SAACtH,GAAD,MAAiD,CAAEY,KfTjD,6BeSmFoD,QAAS,CAAChE,WAC1HuH,GAAgC,SAACvH,GAAD,MAAsD,CAAEY,KfRrD,mCeQ6FoD,QAAS,CAAChE,WAE1IwH,GAA6B,SAACxH,GAAD,MAAmD,CAAEY,KfTlD,gCeSuFoD,QAAS,CAAChE,W,SCLjIyH,GAAkC,CAACzH,MAAO,GAAIM,SAAS,GAE9D+C,GAAe,CACjBqE,cAAgB,CACZvB,MAAOsB,GACPrB,SAAUqB,GACVE,eAAe,GAEnBC,aAAe,CACXlG,KAAM+F,GACNtB,MAAOsB,GACPI,YAAaJ,GACbrB,SAAUqB,GACVE,eAAe,GAEnBG,mBAAqB,CACjBC,UAAW,CAAC/H,MAAO,GAAIM,SAAS,GAChCoB,KAAM+F,GACNO,MAAOP,GACP9C,WAAY,CAAC3E,MAAOoD,EAAsB9C,SAAS,GACnD2H,YAAaR,GACbS,YAAaT,GACbU,UAAW,CAACnI,MAAOmD,EAAoB7C,SAAS,GAChDqH,eAAe,GAEnBS,SAAW,CACPpC,OAAQyB,GACR/F,KAAM+F,GACNvB,MAAOuB,GACPtB,MAAOsB,GACPE,eAAe,IAIjBU,GAAe,SAAClG,EAAenC,GAEjC,OADAiB,QAAQC,IAAI,eAAgBiB,EAAOnC,GAC3BmC,GACJ,IAAK,OACD,QAASnC,EAAMsI,OACnB,IAAK,WACD,OAAOtI,EAAMsI,QAAU,IAAMtI,EAAMsI,QAAU,EACjD,IAAK,cAEL,IAAK,QACD,QAAStI,EAAMsI,OACnB,IAAK,YACD,OAAOC,KAAKC,UAAUxI,KAAWuI,KAAKC,UAAUrF,GACpD,IAAK,QAEL,IAAK,QACD,QAASnD,EAAMsI,OACnB,IAAK,aAED,OADArH,QAAQC,IAAIqH,KAAKC,UAAUxI,GAAQuI,KAAKC,UAAUpF,IAC3CmF,KAAKC,UAAUxI,KAAWuI,KAAKC,UAAUpF,GACpD,IAAK,cACD,QAASpD,EAAMsI,OACnB,QAAU,OAAO,IAIZG,GAAgC,SAAC,GAA2C,EAA1Cd,cAA2C,IAAzBe,EAAwB,iCAC/EC,EAAeC,OAAOC,QAAQH,GAC9BI,EAAmB,SAACC,EAAe9I,EAAUD,GAE/C,OADA+I,EAAS9I,GAAOD,EACT+I,GAEX,OAAO,eAACC,EAAD,uDAAuBF,EAAvB,OAA4CH,EAAaM,QAAQ,SAACF,EAAD,GAAyC,IAAD,mBAAvB9I,EAAuB,KAAjBD,EAAiB,KAAjBA,MAC3F,OAAOgJ,EAAUD,EAAU9I,EAAKD,KACjC,MA6CQkJ,GA1CU,WAAwC,IAAvCpF,EAAsC,uDAA9BT,GAAcU,EAAgB,uCACrDnD,EAAiBmD,EAAjBnD,KAAMoD,EAAWD,EAAXC,QAD+C,EAEfA,GAAW,GAFI,IAErD7B,aAFqD,MAE7C,GAF6C,MAEzCnC,aAFyC,MAEjC,GAFiC,MAE7BsB,YAF6B,MAEtB,GAFsB,EAItD6H,EAAcrF,EAAMxC,IAAS,GAC7B8H,EAAeD,EAAYhH,GAEjC,OAAQvB,GACJ,IA3FgD,2CA6F5C,OADAK,QAAQC,IAAI,2CAA4CI,EAAMtB,GACvD,2BAAI8D,GAAX,mBAAmBxC,EAAnB,2BAA+B6H,GAA/B,mBAA6ChH,EAA7C,2BAA0DiH,GAA1D,IAAwEpJ,QAAOM,SAAS,QAC5F,IA5FmD,8CA6F/C,IAAMA,EAAU+H,GAAalG,EAAOiH,EAAapJ,OAEjD,OADAiB,QAAQC,IAAI,8CAA+CiB,EAAOb,GAC3D,2BAAIwC,GAAX,mBAAmBxC,EAAnB,2BAA+B6H,GAA/B,mBAA6ChH,EAA7C,2BAA0DiH,GAA1D,IAAwE9I,UAASqH,eAAc,QACnG,IA9F4B,uBAgGxB,OADA1G,QAAQC,IAAI,uBAAwBI,EAAMtB,GACnC,2BAAI8D,GAAX,mBAAmBxC,EAAnB,2BAA+B6H,GAA/B,IAA4CxB,cAAc3H,MAC9D,IAlGmD,8CAmG/CiB,QAAQC,IAAI,8CAA+CI,GAC3D,IAAM+H,EAAYT,OAAOU,KAAKH,GACxBI,EAAWF,EAAUJ,QAAQ,SAACM,EAAepH,GAAgB,IACxDnC,EAASmJ,EAAYhH,GAArBnC,MAOP,OANgBqI,GAAalG,EAAOnC,KAEhCiB,QAAQC,IAAI,iBACZqI,EAAS5B,eAAgB,EACzB4B,EAASpH,GAAO7B,SAAU,GAEvBiJ,IARM,2BASVJ,GATU,IASGxB,eAAe,KACnC,OAAO,2BAAI7D,GAAX,mBAAmBxC,EAAQiI,IAC/B,IAlH6C,wCAoHzC,OAAO,2BAAIzF,GAAX,mBAAmBxC,EAAQ+B,GAAa/B,KAC5C,IhB7G2C,sCgB+GvC,OADAL,QAAQC,IAAI,sCAAuClB,GAC5CqD,GACX,QAAS,OAAOS,IC5GX0F,GAAuB,SAAExJ,EAAwBmC,EAA8Bb,GAAxD,MAC/B,CAAEV,KDdiD,2CCcDoD,QAAS,CAAChE,QAAOmC,QAAOb,UAElEmI,GAA0B,SAACtH,EAA8Bb,GAA/B,MAClC,CAAEV,KDfoD,8CCeDoD,QAAS,CAAC7B,QAAOb,UAK9DoI,GAAwC,SAACpI,GAAD,MAChD,CAAEV,KDpBoD,8CCoBDoD,QAAS,CAAC1C,UAEvDqI,GAAoC,SAACrI,GAAD,MAC5C,CAAEV,KDzB8C,wCCyBDoD,QAAS,CAAC1C,UC+CjDsI,GAAuC,SAAC5I,GAAD,OAAgD,SAAC6I,EAAgCC,GAAmB,IAAD,EAC1EA,IAA7C5F,EADuH,EAC5I6F,mBAAqB7F,eAA8BN,EADyF,EACtGoG,UAAapG,WAC1DiG,EAASvC,IAAyB,IAClCuC,EAASrC,IAA2B,IACpCvG,QAAQC,IAAI,uCAAwCF,GAIpD4C,EAF+BM,EAAiB,uBAAyB,yBAE1ClD,GAC1BiJ,MAAK,SAACC,GACH,IAAKA,EAASC,GAAI,MAAMD,EAASE,OACjC,OAAOF,EAASG,UAEnBJ,MAAK,YAA2B,IAAD,IAAxBK,cAAwB,SAC5BT,EAASvC,IAAyB,IAC9BgD,IACAT,EAASU,MACTV,EAASvD,EAAmCtF,EAAKmF,MAAM,UACvD0D,EAASvD,EAAmCtF,EAAKoF,SAAS,aAC1DyD,EhBzEgD,CAAEjJ,KDVvC,cCU0DoD,QAAS,CAAChE,OgByE1D,SAG5BwK,OAAM,SAACJ,GACJnJ,QAAQC,IAAIkJ,GAERP,EADM,OAAVO,EACa9F,GAAuB,GACvBkD,IAA2B,IACxCqC,EAASvC,IAAyB,IAClCuC,EDjFP,CAAEjJ,KDhB6B,uBCgBDoD,QAAS,CAAChE,OCiFM,EDjFCsB,KC4DZ4C,EAAiB,eAAiB,mBAuB9DjD,QAAQwJ,MAAML,QA2BbM,GAAiC,eAAC3F,EAAD,+DAAiC,SAAC8E,EAAiDC,GAC7HD,EAASrE,GAA6B,IACtCqE,EAASrC,IAA2B,IACpCqC,EAAStC,IAA8B,IACvCtG,QAAQC,IAAI,kCAJmI,MAW9G4I,IAX8G,IAO3Ia,eACInG,EARuI,EAQvIA,YARuI,IASvIE,aAA4B/C,EAT2G,EASxHgD,WAAahD,SAA+BwG,EAT4E,EAShGvD,eAAiB7C,GAAe8C,EATgE,EAShEA,YATgE,EAW3ImF,UAAapG,WAEP,0BAA8BY,EAAaK,EAAalD,EAAUwG,GACvE8B,MAAK,SAACC,GACH,IAAIA,EAASC,GAAI,MAAMD,EAASE,OAEhC,GADAP,EAAStC,GAAkD,MAApB2C,EAASE,UAC3CF,EAASC,GACV,KAAK,4BAAL,OAAkCD,EAASE,QAC/C,OAAOF,EAASG,UAEnBJ,MAAK,YAAkC,IAAhCW,EAA+B,EAA/BA,MAAOC,EAAwB,EAAxBA,cACXhB,EAASpE,EAAiCmF,EAAQ,IAClDf,EAAStE,EAAkBsF,EAAe9F,IAC1C8E,EAASrE,GAA6B,OAEzCgF,OAAM,SAACJ,GAEAP,EADO,MAAXO,EACa7C,IAA8B,GAC9BC,IAA2B,IACxCqC,EAASrE,GAA6B,IACtCvE,QAAQwJ,MAAML,QAMbU,GAA4B,SAACxJ,GAAD,IAAeyD,EAAf,+DAAsC,SAAC8E,EAA4CC,GACxHD,EAASvC,IAAyB,IAClCuC,EAASrC,IAA2B,IACpCqC,EAAStC,IAA8B,IACvCtG,QAAQC,IAAI,6BAEsB4I,IAA3BE,UAAYpG,WAET,0BAA8BtC,EAAM,GAAI,GAAI,IACjD2I,MAAK,SAACC,GACH,IAAIA,EAASC,GAAI,MAAMD,EAASE,OAChC,OAAOF,EAASG,UAEnBJ,MAAK,YAA4B,IAA1BY,EAAyB,EAAzBA,cACJhB,EAAS9D,EAAuB8E,EAAe9F,IAC/C8E,EAASvC,IAAyB,OAErCkD,OAAM,SAACJ,GAEAP,EADO,MAAXO,EACa7C,IAA8B,GAC9BC,IAA2B,IACxCqC,EAASvC,IAAyB,IAClCrG,QAAQwJ,MAAML,QA8BbW,GAAyB,SAACC,GAAD,OAAwC,SAACnB,EAAsCC,GACjH7I,QAAQC,IAAI,0BACZ2I,EAASrC,IAA2B,IAEFsC,IAA3BE,UAAYpG,WAGQ,WAAnBoH,EAAoC,aACjB,WAAnBA,EAAoC,aACjC,gBAINf,MAAK,SAACC,GACH,IAAKA,EAASC,GACV,KAAK,6BAAL,OAAmCD,EAASE,QAChD,OAAOF,EAASG,UAEnBJ,MAAK,YAA4B,IAAD,IAAzBK,YAAyB,WAEzBT,EhB3NoD,CAAEjJ,KDVjC,0BiBsOrBiJ,EHhOkC,CAAEjJ,KfPD,wCkBwOnCiJ,EAASoB,YAAKC,SAGrBV,OAAM,SAACW,GACJtB,EAASrC,IAA2B,IACpCvG,QAAQwJ,MAAMU,QAiCbC,GAA0B,eAACrG,EAAD,+DAAwB,SAAC8E,EAA0CC,GACtGD,EAASvC,IAAyB,IAClCuC,EAASrC,IAA2B,IACpCqC,EAAStC,IAA8B,IACvCtG,QAAQC,IAAI,2BAJ4G,MAMhD4I,IAA1CtF,EAN0F,EAMjH6G,qBAAuB7G,YAN0F,EAM5EwF,UAAapG,WAE/C,mBAAuBY,GAC5ByF,MAAK,SAACC,GACH,IAAKA,EAASC,GAAI,MAAMD,EAASE,OACjC,OAAOF,EAASG,UAEnBJ,MAAK,YAAkC,IAAhCW,EAA+B,EAA/BA,MAAOC,EAAwB,EAAxBA,cACXhB,EAAS5C,EAAyC2D,EAAQ,IAC1Df,EAAS9C,EAAqB8D,EAAe9F,IAC7C8E,EAASvC,IAAyB,OAErCkD,OAAM,SAACJ,GAEAP,EADO,MAAXO,EACa7C,IAA8B,GAC9BC,IAA2B,IAExCqC,EAASvC,IAAyB,IAElCrG,QAAQwJ,MAAML,QAuDbkB,GAA4B,SAAC3J,GAAD,IAAmBoD,EAAnB,+DAA0C,SAAC8E,EAA4CC,GAC5HD,EAASvC,IAAyB,IAClCuC,EAASrC,IAA2B,IACpCvG,QAAQC,IAAI,6BAHkI,MAKpE4I,IAA1CtF,EAL8G,EAKvI+G,uBAAyB/G,YAL8G,EAKhGwF,UAAapG,WAEjD,0BAA8BY,EAAa,GAAI,GAAI,IACxDyF,MAAK,SAACC,GAEH,GADAL,EAAStC,GAAkD,MAApB2C,EAASE,UAC3CF,EAASC,GACV,KAAK,4BAAL,OAAkCD,EAASE,QAC/C,OAAOF,EAASG,UAEnBJ,MAAK,YAAkC,IAAhCW,EAA+B,EAA/BA,MAAOC,EAAwB,EAAxBA,cACXhB,EAASxC,GAA4CuD,EAAQ,IAC7Df,EAASzC,GAAuByD,EAAe9F,IAC/C8E,EAASvC,IAAyB,OAErCkD,OAAM,SAACW,GACJtB,EAASvC,IAAyB,IAClCuC,EAASrC,IAA2B,IACpCvG,QAAQwJ,MAAMU,QAMbZ,GAAmB,kBAAM,SAACV,EAAkCC,GACrE7I,QAAQC,IAAI,oBAEsB4I,IAA3BE,UAAYpG,WAERrC,cACN0I,MAAK,SAACC,GACH,IAAKA,EAASC,GACV,KAAK,4BAAL,OAAkCD,EAASE,QAC/C,OAAOF,EAASG,UAEnBJ,MAAM,YAAqD,IAAD,IAAlDjE,cAAkD,MAAzCC,IAAyC,EAAvBuF,EAAuB,0BACvDvK,QAAQC,IAAI,WAAYsK,GACxB3B,EAASvD,EAAmCN,EAAQ,WAC5B4C,OAAOC,QAAQ2C,GACvBC,SAAS,YAAqB,IAAD,mBAAlBtJ,EAAkB,KAAXnC,EAAW,KACzCiB,QAAQC,IAAIiB,EAAOnC,GACnB6J,EAASvD,EAAmCtG,EAAOmC,YCrZtDuJ,GAA4B,SAAC5H,GAAD,OAAgBA,EAAMiG,mBAAmB7F,gBACrEyH,GAAoB,SAAC7H,GAAD,OAAgBA,EAAMiG,mBAAmB3F,UAC7DwH,GAA+B,SAAC9H,GAAD,OAAgBA,EAAMiG,mBAAmB5F,mB,SCFxE0H,GAAiC,SAAC/H,GAAD,OAAgBA,EAAMkG,UAAU1G,YACjEwI,GAAsC,SAAChI,GAAD,OAAgBA,EAAMkG,UAAUzG,iBACtEwI,GAAmC,SAACjI,GAAD,OAAgBA,EAAMkG,UAAUxG,cACnEwI,GAAgC,SAAClI,GAAD,OAAgBA,EAAMkG,UAAUvG,oBAChEwI,GAA4B,SAACnI,GAAD,OAAgBA,EAAMkG,UAAUtG,gBAE5DwI,GAA8B,SAACxI,EAA4ByI,GAEpE,IAAMC,EAAwB,SAACC,GAAD,MAA0B,kBAAmBA,GAS3E,OAAO3I,EAAeuF,QAAQ,SAACqD,EAAwB3K,GAAmB,IAC/DgC,EAAiBhC,EAAjBgC,cAGP,OAFA2I,EAAkBrB,KATQ,SAACoB,GAAuB,IAE5CE,EAAe,CAACxK,GADOsK,EAAtBtK,GACmBL,KADG2K,EAAlB3K,KACqBC,SADH0K,EAAZ1K,UAEjB,OAAOyK,EAAsBC,GAAtB,2BACCE,GADD,IACezO,UAAWqO,IAAmBI,EAK7BC,CAAsB7K,IAC7CyK,EAAsBzK,IAAa2K,EAAkBrB,KAAlB,MAAAqB,EAAiB,aAAS3I,IACtD2I,IACR,KCHQG,I,MAVA,SAAC5O,GAA4B,IAEjCC,EAAwDD,EAAxDC,UAFgC,EAEwBD,EAA7C6O,kBAFqB,SAEDrM,EAAyBxC,EAAzBwC,MAAOsM,EAAkB9O,EAAlB8O,eAE/C,OAAOD,EACF,yBAAK5O,UAAS,cAASA,EAAT,sBAAd,uDACD,yBAAK+B,QAAS8M,EAAgB7O,UAAS,cAASA,EAAT,sBAAwCuC,KCdxEuM,GAAqC,SAAC9I,EAAYxC,GAAb,OAA4CwC,EAAM+I,UAAUvL,ICe/FwL,GAVmD,SAACjP,GAAW,IACrEC,EAAuFD,EAAvFC,UADoE,EACmBD,EAA5EkP,iBADyD,MAC7C,6SAD6C,EAG3E,OACQ,yBAAKjP,UAAS,yCAAoCA,IAC/CiP,IC2IEC,GArHe,SAACnP,GAG3B,IAAMqG,EAAiB+I,YAAYvB,IAC7BwB,EAAwBD,YAAYlB,IACpC5H,EAAoB8I,YAAYrB,IAChCtI,EAAa2J,YAAYpB,IACzBsB,EAAqBF,aAAY,SAACnJ,GAAD,OAAW8I,GAAmC9I,EAAO,oBACtFsJ,EAAoBH,aAAY,SAACnJ,GAAD,OAAW8I,GAAmC9I,EAAO,mBACrFuJ,GAAoBnJ,EAAiBkJ,EAAeD,IAAkB,GACtE3I,EAAcN,EAAiB,eAAiB,gBAC/CyD,EAAiB0F,EAAjB1F,cAGDkC,EAAWyD,cACXC,EAAkCC,uBAAY,SAACxM,GAAD,OAAU6I,EAASD,GAAqC5I,MAAQ,CAAC6I,IAC/G4D,EAAoBD,uBAAY,SAACE,GAAD,OAAa7D,EtB/BwB,CAAEjJ,KDV9C,sBCUyEoD,QAAS,CAAChE,MsB+BlC0N,OAAW,CAAC7D,IACtF8D,EAAqBH,uBAAY,SAACxN,EAAOmC,GAAR,OAAkB0H,EAASL,GAAqBxJ,EAAOmC,EAAOqC,MAAe,CAACqF,EAAU3F,IACzH0J,EAAuBJ,uBAAY,kBAAM3D,EAASvF,GAAuB,MAAQ,CAACuF,IAClFgE,EAAwBL,uBAAY,SAACrL,GAAD,OAAW0H,EAASJ,GAAwBtH,EAAOqC,MAAe,CAACqF,EAAU3F,IACjH4J,EAAkCN,uBAAY,SAAClM,GAAD,OAAUuI,EAASF,GAAkCrI,MAAQ,CAACuI,EAAU3F,IACtH6J,EAAqBP,uBAAY,kBAAM3D,EAASH,GAAsClF,MAAe,CAACqF,EAAU3F,IAGtHvF,qBAAU,WACN,OAAO,WACHmP,EAAgC,iBAChCA,EAAgC,mBAErC,IAGHnP,qBAAU,WACN,GAAGgJ,EAAe,CACd,IAAMoB,EAAWN,GAA8B4E,EAA9B5E,GACjB8E,EAAgCxE,MAErC,CAACpB,IAwDJ,OACI,yBAAK7J,UAAU,4CACX,wBAAIA,UAAW,iCAAmCoG,EAA0B,qEAAT,4BAClEgJ,GAAyB,kBAAC,GAAD,CAAoBpP,UAAW,WAAYiP,UAAW,4FAC9E5I,IAAsBD,GAAkB,kBAAC,GAAD,CAAoBpG,UAAW,WAAYiP,UAAW,6IAChG,wBAAIjP,UAAW,SACf,yBAAKA,UAAU,+CAnDC,WAAO,IAAD,EACuCuP,EAA1D3L,YADmB,MACZ,GADY,IACuC2L,EAA/ClH,aADQ,MACA,GADA,IACuCkH,EAAnCjH,gBADJ,MACe,GADf,IACuCiH,EAApBxF,mBADnB,MACiC,GADjC,EAE1B,MAAO,CACH,CACI1F,MAAO,OACP9B,MAAO,qBACPD,UAAW,OACXL,YAAa,yFACbC,MAAO0B,EAAK1B,MACZM,QAASoB,EAAKpB,SAElB,CACI6B,MAAO,cACP9B,MAAO,kFACPD,UAAW,SACXL,YAAa,2GACbC,MAAO6H,EAAY7H,MACnBM,QAASuH,EAAYvH,SAEzB,CACI6B,MAAO,QACP9B,MAAO,SACPD,UAAW,OACXL,YAAa,uEACbC,MAAOmG,EAAMnG,MACbM,QAAS6F,EAAM7F,SAEnB,CACI6B,MAAO,WACP9B,MAAO,uCACPD,UAAW,WACXL,YAAa,qGACbC,MAAOoG,EAASpG,MAChBM,QAAS8F,EAAS9F,UAmBhB0N,GAAkBC,KAAK,YAA6D,IAA3D9L,EAA0D,EAA1DA,MAAO/B,EAAmD,EAAnDA,UAAWL,EAAwC,EAAxCA,YAAaC,EAA2B,EAA3BA,MAAOK,EAAoB,EAApBA,MAAOC,EAAa,EAAbA,QACpE,OAAI4D,GAA2B,QAAT/B,KAClB+B,GAA2B,eAAT/B,GACf,kBAAC,EAAD,CAAWrE,UAAW,OAAQmC,IAAKkC,EAAO9B,MAAOA,EACtCC,QAASA,EAASP,YAAaA,EAC/BK,UAAWA,EAAWJ,MAAOA,EAC7BE,cAAe,kBAAM2N,EAAsB1L,IAC3ChC,gBAAiB,SAAC/B,GAAD,OAnE3B,SAACA,EAA4C+D,GAAuB,IACjEnC,EAAU5B,EAA1B8P,cAAgBlO,MACvBiB,QAAQC,IAAI,kBAAmBiB,EAAOnC,GACtC2N,EAAmB3N,EAAOmC,IACzBgC,GAAqByJ,IA+DmEzN,CAAgB/B,EAAO+D,MANtD,SAStD,kBAAC,GAAD,CAAQwK,eAAgBoB,EAAoB1N,MAAQ6D,EAA2B,+GAAV,iCAC7DwI,WAAYpJ,EAAYxF,UAAW,4CAvBxC,0BAAM+B,QAAS,kBAAM4N,GAAmBvJ,IAAiBpG,UAAW,mCACtEoG,EAAiB,iCAAU,kHCtGzBiK,GAZkB,SAACtQ,GAAyC,IAAD,EAEjBA,EAAhDmB,yBAFiE,SAEtCI,EAAqBvB,EAArBuB,kBAElC,OACI,kBAAC,EAAD,CAAaA,kBAAmBA,EAAmBJ,kBAAmBA,EAAmBE,aAAa,EAAMD,MAAO,kBAAC,GAAD,QAC/G,SAACmP,GAAD,OACI,kBAAC,GAAD,CAAQ/N,MAAM,qGAAqBsM,eAAgByB,EAAiBtQ,UAAU,+DC6B7EuQ,I,MA1BO,SAACxQ,GAA8B,IAAD,EAO5CA,EAJA4B,wBAH4C,MAGzB,kBAAM,MAHmB,EAI5CsN,EAGAlP,EAHAkP,UACuBuB,EAEvBzQ,EAFA0Q,oBAAuBD,YALqB,EAO5CzQ,EADA2Q,oBAN4C,IAMrBC,qBANqB,MAML,kBAAM,MAND,EAMOC,EANP,EAMOA,YAQvD,OACI,yBAAK5Q,UAAU,iBACX,wBAAIA,UAAW,wBAAyBiP,GACxC,wBAAIjP,UAAW,SACf,yBAAKA,UAAU,qCACX,kBAAC,GAAD,CAAQA,UAAW,uBAAwB6O,eAAgBlN,EAAkBY,MAAOiO,IACpF,kBAAC,GAAD,CAAQxQ,UAAW,mCAAoC6O,eAXtC,WACzB8B,IACAhP,GAAiB,IASoFY,MAAOqO,QCTrGC,GATU,SAAC9Q,GAA2B,IAC5C+Q,EAA2E/Q,EAA3E+Q,eAAsCC,EAAqChR,EAA3D0Q,oBAAsBM,cAAgB7P,EAAqBnB,EAArBmB,kBAC7D,OACI,kBAAC,EAAD,CAAaA,kBAAmBA,EAAmBI,kBAAmByP,EAAe3P,aAAa,EAAMD,MAAO,kBAAC,GAAkBpB,KAAY,SAACuQ,GAAD,OAC1IQ,GAAkBjP,IAAMC,aAAagP,EAAgB,CAACjC,eAAgByB,QCxBnEU,GAAuC,SAAChL,EAAY3B,GAAb,OAA+B2B,EAAMiL,cAAc5M,MC6BxF6M,I,MAdkB,SAACnR,GAG9B,IAAMgM,EAAWyD,cACX2B,EAA0BzB,uBAAY,SAAC7L,GAAD,OAAckI,EAASnE,EAA0B/D,MAAY,CAACkI,IAJtC,EAMqBhM,EAAlFsO,uBAN6D,MAM3C,SAN2C,EAMjClM,EAAsDpC,EAAtDoC,IAAK0B,EAAiD9D,EAAjD8D,SAAUuN,EAAuCrR,EAAvCqR,eAAgBpR,EAAuBD,EAAvBC,UAAWqB,EAAYtB,EAAZsB,SAE7E,OAAO,kBAAC,IAAD,CAASrB,UAAWA,EAAWmC,IAAKA,EAAKJ,QAAS,kBAAMoP,EAAwBC,IAAiBnR,GAAIoR,GAAgBxN,GAAWwK,gBAAiBA,GACnJhN,KCWMiQ,GAxBA,SAACvR,GAEZ,IAAMwR,EAAc,CAChB,CAAC9Q,KAAM+Q,GAAejP,MAAO,oDAC7B,CAAC9B,KAAM+Q,GAAejP,MAAO,8CAC7B,CAAC9B,KAAM+Q,GAAejP,MAAO,2DAI1BvC,EAAaD,EAAbC,UAET,OACI,yBAAKA,UAAS,gHAA2GA,IACrH,kBAAC,GAAD,CAA0BA,UAAW,kBAAmB6D,SAAU,MAAOuN,eAAgB9L,GACrF,kBAAC,GAAD,CAAQtF,UAAW,kBAAmBuC,MAAO,kEAEhDgP,EAAYpB,KAAK,gBAAE1P,EAAF,EAAEA,KAAM8B,EAAR,EAAQA,MAAR,OACd,kBAAC,IAAD,CAASvC,UAAU,2BAA2BC,GAAIQ,GAC9C,kBAAC,GAAD,CAAQT,UAAW,kBAAmBuC,MAAOA,UCuEhDkP,GAjFA,SAAC1R,GAGZ,IAAMI,EAAMoB,iBAAO,MAGb+E,EAAS6I,YAAYtB,IACrBjK,EAAOuL,aAAY,SAACnJ,GAAD,OAAWgL,GAAqChL,EAAO,WAG1E+F,EAAWyD,cACXkC,EAAahC,uBAAY,kBAAM3D,EAASkB,GAAuB,aAAY,CAAClB,IAXvD,EAcuBvK,oBAAS,GAdhC,mBAcpBmQ,EAdoB,KAcDC,EAdC,OAeyBpQ,oBAAS,GAflC,mBAepBqQ,EAfoB,KAeAC,EAfA,OAgBqBtQ,oBAAS,GAhB9B,mBAgBpBuQ,EAhBoB,KAgBFC,EAhBE,OAiB2BxQ,oBAAS,GAjBpC,mBAiBpByQ,EAjBoB,KAiBCC,EAjBD,KAuB3BhS,EAAgBC,GAJY,WACxB4R,GAAoBI,OAKxB,IAAMA,EAAyB,WAC3BhP,QAAQC,IAAI,0BACZ4O,GAAoB,SAAAI,GAAS,OAAKA,MAQhCC,EAA0B3C,uBAAY,kBACxC,kBAAC,GAAD,CAAkBoB,eAAgB,kBAAC,GAAD,CAAQ9Q,UAAW,4BAA6BuC,MAAO,8HACvEkO,oBAAqB,CAACD,YAAa,iCAASO,cAAc,kBAAMa,GAAqB,KACrFlB,oBAAqB,CAACE,YAAa,mGAAoBD,cAAc,kBAAMiB,GAAqB,KAChG3C,UAAW,mTAA8D,IAEzFqD,EAAc5C,uBAAY,kBAC5B,kBAAC,GAAD,CAAkBxO,mBAAmB,EAAM+N,UAAW,gGACpCwB,oBAAqB,CAACD,YAAa,qBAAOO,cAAc,kBAAMmB,GAAuB,KACrFxB,oBAAqB,CAACE,YAAa,eAAMD,cAAce,OAAiB,IAExFa,EAAW,oCACb,yBAAKpS,IAAKA,EAAK4B,QAASoQ,EAAwBnS,UAAU,qCACtD,kBAAC,GAAD,CAAQA,UAAW,oCAAqCuC,MAAOqB,IAC/D,yBAAK5D,UAAS,8CAAyC+R,GAAoB,iBACvE,kBAAC,IAAD,CAAM9R,GAAIuS,GAAuBxS,UAAU,iBAA3C,mFAGA,kBAAC,IAAD,CAAMC,GAAIwS,GAAezS,UAAU,iBAAnC,0DAGA,yBAAKA,UAAU,qBACf,yBAAK+B,QAAS,kBAAMmQ,GAAuB,IAAOlS,UAAU,iBAA5D,qCAKZ,OACI,yBAAKA,UAAU,iHACX,yBAAKA,UAAW,mHACZ,kBAAC,EAAD,MACA,0BAAM+B,QAAS,kBAAM+P,GAAsB,SAAAM,GAAS,OAAKA,MACnDpS,UAAU,qEAEpB,yBAAKA,UAAS,wKAAmK6R,GAAsB,iBACnM,kBAAC,GAAD,CAAQ7R,UAAW,oBACvB,yBAAKA,UAAU,0GACVsG,EAASiM,EAAW,kBAAC,GAAD,CAA0BjR,kBAAmB,kBAAMsQ,GAAqB,IAAQ1Q,kBAAmByQ,IACvHrL,EAASoM,GAAyB,IAAML,MAG5CJ,GAAuBK,MC1ErBK,I,kBAZI,SAAC5S,GAAsB,IAAD,EAEqBA,EAAnD6D,YAF8B,MAEvB,GAFuB,EAEnBnC,EAAwC1B,EAAxC0B,SAAUY,EAA8BtC,EAA9BsC,gBAAiBrC,EAAaD,EAAbC,UAE7C,OACI,yBAAK+B,QAASM,EAAiBrC,UAAS,qDAAgDA,EAAhD,YAA6DyB,GAAY,WAC5GmC,KCyBEgP,GApCA,SAAC7S,GAAgB,IAAD,EASvBA,EAPA8S,mBAFuB,MAET,GAFS,EAGvBC,EAMA/S,EANA+S,YACAzQ,EAKAtC,EALAsC,gBAJuB,EASvBtC,EAJAqC,qBALuB,MAKP,KALO,EAMvB2Q,EAGAhT,EAHAgT,0BACA7Q,EAEAnC,EAFAmC,MACAlC,EACAD,EADAC,UARuB,EAWKwB,oBAAS,GAXd,mBAWpBC,EAXoB,KAWVC,EAXU,KAYrBvB,EAAMoB,iBAAO,MAEnBrB,EAAgBC,GADY,kBAAMsB,GAAYC,GAAY,MAG1D,IAAMsR,EAA0C,WAAyB,IAAxBpD,EAAuB,uDAAT,KAC3DzM,QAAQC,IAAI,iBAAkBwM,GAC9BlO,GAAY,SAAAuR,GAAY,OAAgB,OAAZrD,EAAmBA,GAAWqD,MAG9D,OACI,yBAAK9S,IAAKA,EAAKH,UAAS,0BAAqBA,EAArB,SAChB,2BAAO+B,QAAS,kBAAMiR,KAAkBnQ,OAAQT,EAAe8Q,UAAU,EAAMtQ,SAAUP,EAClFJ,YAAa6Q,EACb9S,UAAW,qDACXkC,MAAOA,EAAOY,KAAK,SAE9B,yBAAK9C,UAAS,4CAAuCyB,GAAY,SAC5DoR,EAAY1C,KAAI,SAACgD,GAAD,OACb,kBAAC,GAAD,iBAAgBA,EAAhB,CAA4B1R,SAAU0R,EAAU,OAAajR,EAAQG,gBAAiB,SAAC/B,GAAD,OAAeyS,EAA0BI,EAAYH,aCnClJI,GAA0B,SAACpN,GAAD,OAAgBA,EAAM6G,eAAepG,cAC/D4M,GAAkC,SAACrN,GAAD,OAAgBA,EAAM6G,eAAejG,aAAaC,YACpFyM,GAAwC,SAACtN,GAAD,OAAgBA,EAAM6G,eAAejG,aAAaE,gBAC1FyM,GAAqC,SAACvN,GAAD,OAAgBA,EAAM6G,eAAejG,aAAaG,aACvFyM,GAAqC,SAACxN,GAAD,OAAgBA,EAAM6G,eAAerH,YAC1EiO,GAAsC,SAACzN,GAAD,OAAgBA,EAAM6G,eAAenG,aAC3EgN,GAAyC,SAAC1N,GAAD,OAAgBA,EAAM6G,eAAelG,iBCsF5EgN,GAnEG,SAAC5T,GAAgB,IAExB+S,EAA0B/S,EAA1B+S,YAAa9S,EAAaD,EAAbC,UAFU,EAKQ4T,cAAnBzM,EALW,EAKvBD,SAAYC,SAAWgG,EALA,EAKAA,KAGxBxH,EAAqBwJ,YAAYjB,IACjCtI,EAAiBuJ,aAAa,SAACnJ,GAAD,OAChCoI,GAA4BD,GAA0BnI,GAAQ,8CAC5DR,EAAa2J,YAAYqE,IACzBK,EAAuB1E,YAAYkE,IACnCS,EAA4B3E,YAAYmE,IACxCS,EAA0B5E,YAAYoE,IAGtCxH,EAAWyD,cACX7L,EAA4B+L,uBAAY,kBAAM3D,EAASa,QAAmC,CAACb,IAC3FiI,EAAmCtE,uBAAY,kBAAM3D,E/B9BiC,CAAEjJ,KDNnD,sCgCoCgE,CAACiJ,IACtGoF,EAA0BzB,uBAAY,SAAC7L,GAAD,OAAckI,EAASnE,EAA0B/D,MAAY,CAACkI,IACpGkI,EAA+BvE,uBAAY,SAACwE,GAAD,OAAanI,E/B9BoC,CAAEjJ,KDNvD,oCCMgGoD,QAAS,CAAChE,M+B8BhDgS,OAAW,CAACnI,IAC7GoI,EAA6BzE,uBAAY,SAACxN,GAAD,OAAW6J,E/B9BlB,SAAC7J,GAAD,MAAoD,CAAEY,KDNpD,iCCM0FoD,QAAS,CAAChE,U+B8B3EkS,CAA6BlS,MAAS,CAAC6J,IAtB5E,EAyBQvK,mBAASuS,GAzBjB,mBAyBvBhN,EAzBuB,KAyBVsN,EAzBU,KA4BxBC,EAA4B,SAACjQ,EAA8B8O,EAAiBoB,GACpE,aAAVlQ,GAAwB8M,EAAwBgC,GACtC,WAAV9O,GAAsB4P,EAA6Bd,GACnDoB,GAAkB,IAexB,OACI,oCACI,yBAAKvU,UAAS,oGAA+FA,IACzG,kBAAC,GAAD,CAAQA,UAAW,mCAAoC+S,0BAA2B,SAACI,EAAiB/S,GAAlB,OAAmCkU,EAA0B,SAAUnB,EAAY/S,IAAU8B,MAAO4R,EAA0BlQ,KAAMiP,YAAalN,IACnO,yBAAK3F,UAAU,yCACX,2BAAO6C,OAAQ,gBAAWX,EAAX,EAAEsS,OAAStS,MAAX,OAAuBiS,EAA2BjS,IAAQU,SAjBzD,SAACtC,GAAiB,IAAD,GACJA,GAAS,IAAxCkU,OADmC,gBACX,GADW,GACzBtS,MAClBmS,OAF2C,MACjB,GADiB,IAkB1BrU,UAAW,kDACXkC,MAAO6E,EAAajE,KAAK,OACzBb,YAAa6Q,IACpB,yBAAK/Q,QAAS,kBAAMsS,EAAe,KAAKrU,UAAW,2BAAnD,WAEJ,kBAAC,GAAD,CAAQA,UAAW,kCAAmC+S,0BAA2B,SAACI,EAAiB/S,GAAlB,OAAmCkU,EAA0B,WAAYnB,EAAY/S,IAAU8B,MAAO2R,EAAqBjQ,KAAMiP,YAAajN,IAC/N,yBAAK5F,UAAU,4CACX,kBAAC,GAAD,CAAQA,UAAW,oBAAqB6O,eApBxB,WAC1BlL,IACAqQ,IACA,IAAMS,EAAcpD,GAAgBwC,EAAqBhQ,UACzDsD,IAAasN,GAAetH,EAAKsH,IAgBwDlS,MAAO,iCAASqM,WAAYpJ,MAGnH,wBAAIxF,UAAW,WCvFZ0U,GAA+B,SAAC1O,GAAD,OAAgBA,EAAM2O,UAAU9M,mBAE/D+M,GAAgC,SAAC5O,GAAD,OAAgBA,EAAM2O,UAAU7M,oBCe9D+M,I,YAPD,SAAC9U,GAA2B,IAE/B+U,EAAsD/U,EAAtD+U,MAAO9U,EAA+CD,EAA/CC,UAFuB,EAEwBD,EAApC8O,sBAFY,MAEK,KAFL,IAEwB9O,EAAbgV,cAFX,MAEkB,GAFlB,EAIvC,OAAO,yBAAKhT,QAAS8M,EAAgBpM,MAAK,aAAGuS,gBAAgB,OAAD,OAASF,EAAT,MAAsBC,GAAS/U,UAAS,gBAAWA,OC8BlGiV,GA1BM,SAAClV,GAAkC,IAE7C+U,EAA4E/U,EAA5E+U,MAAOlR,EAAqE7D,EAArE6D,KAAMsR,EAA+DnV,EAA/DmV,aAAcrR,EAAiD9D,EAAjD8D,SAAU7D,EAAuCD,EAAvCC,UAAWkK,EAA4BnK,EAA5BmK,MAAOiL,EAAqBpV,EAArBoV,cAAelR,EAAMlE,EAANkE,GAG/E,OACI,yBAAKjE,UAAS,iGAA4FA,IAClG,kBAAC,IAAD,CAASA,UAAW,8CAA+CC,GAAE,UAAKoR,GAAgBxN,GAArB,YAAkCI,IAEnG,kBAAC,GAAD,CAAO6Q,MAAOA,KAGlB,yBAAK9U,UAAW,iEACZ,yBAAKA,UAAU,wDACX,wBAAIA,UAAU,2BAA2B4D,GACzC,wBAAI5D,UAAU,uBAAd,oCAA8CkK,EAA9C,yBACA,wBAAIlK,UAAU,uBAAd,0CAA+CmV,KAEnD,yBAAKnV,UAAU,eACX,2BAAOA,UAAU,cAAjB,qFAAiDkV,QCRxDE,I,MAtBA,SAACrV,GAUd,OACI,yBAAKC,UAAU,kHACX,kBAAC,EAAD,CAAMA,UAAW,iBACjB,yBAAKA,UAAU,+IACX,kBAAC,GAAD,MACC0S,GAAyB,oBCGzB2C,I,MApBE,SAACtV,GAAgB,IAAD,EAEDyB,oBAAS,GAFR,mBAEtB8T,EAFsB,KAEdC,EAFc,KAI7B1U,qBAAU,WAEN,OADAC,SAASC,iBAAiB,SAAUyU,GAC7B,kBAAM1U,SAASE,oBAAoB,SAAUwU,MACrD,IAEH,IAAMA,EAAkB,SAAClV,GACrB,IAAMmV,EAAgBC,KAAKC,KAAKC,OAAOC,YAAcD,OAAOE,SACtDD,EAAcD,OAAOC,YACSN,IAApCE,EAAgBI,EAAc,OAGpC,OAAOP,EACH,kBAAC,GAAD,CAAQtV,UAAW,qBAAsBuC,MAAO,uCACxCsM,eAAgB,kBAAM+G,OAAOG,SAAS,EAAE,MAAS,OCLhDlU,I,MAAAA,IAAMmU,MAVH,SAACjW,GAA+B,IACvCC,EAAaD,EAAbC,UAEP,OACI,0BAAMA,UAAS,yBAAoBA,IAC/B,0BAAMA,UAAU,8BCKbiW,GAVmD,SAAClW,GAAW,IACrEC,EAAkED,EAAlEC,UADoE,EACFD,EAAvDkP,iBADyD,MAC7C,8LAD6C,EAG3E,OACQ,yBAAKjP,UAAS,8BAAyBA,IACpCiP,ICmCEiH,GA3BqB,SAACnW,GAEjC,IAAMoW,EAAkBhH,YAAYpB,IAC9BqI,EAAuBjH,YAAYnB,IACnCqI,EAAuBlH,YAAYlB,IAJ+B,EAcpElO,EAPAuW,iBAPoE,MAOxD,kBAAC,GAAD,MAPwD,IAcpEvW,EANAwW,0BARoE,MAQ/C,kBAAC,GAAD,MAR+C,IAcpExW,EALAyW,0BAToE,MAS/C,kBAAC,GAAD,MAT+C,IAcpEzW,EAJA0W,uBAVoE,MAUlDJ,EAVkD,IAcpEtW,EAHAyF,kBAXoE,MAWvD2Q,EAXuD,IAcpEpW,EAFA0F,uBAZoE,MAYlD2Q,EAZkD,IAcpErW,EADAsB,gBAboE,MAazD,KAbyD,EAgB1E,OACImE,EACI,oCAAGnE,EAAUiV,GACbG,EACID,EACA/Q,EACI8Q,EACAlV,GCdHqV,GAxB2B,SAAC3W,GAGzC,IAAM6F,EAAiBuJ,aAAa,SAACnJ,GAAD,OAAWmI,GAA0BnI,MAEzE,OACI,yBAAKhG,UAAU,sDACV4F,EAAeuK,KAAK,SAAC5B,GAAuB,IAClCtK,EAA0CsK,EAA1CtK,GAAIL,EAAsC2K,EAAtC3K,KAAMC,EAAgC0K,EAAhC1K,SADuB,EACS0K,EAAtB1I,qBADa,MACG,GADH,EAExC,OAAO,oCACH,kBAAC,GAAD,CAA0B1D,IAAK8B,EAAIJ,SAAUA,EAAUwK,gBAAiB,eAAgB+C,eAAgB7C,GACpG,4BAAK3K,IAERiC,EAAcsK,KAAK,SAACwG,GAA0B,IACpC1S,EAAsB0S,EAAtB1S,GAAIL,EAAkB+S,EAAlB/S,KAAMC,EAAY8S,EAAZ9S,SACjB,OAAO,kBAAC,GAAD,CAA0B1B,IAAK8B,EAAIoK,gBAAiB,eAAgBxK,SAAUA,EAAUuN,eAAgBuF,GAC3G,iCAAO/S,WAGvB,wBAAI5D,UAAW,WCyDV4W,GAnDE,SAAC7W,GAGd,IAAM8H,EAAoBsH,YAAYuF,IAChC5M,EAAqBqH,YAAYyF,IAGjC7I,EAAWyD,cACXjM,EAAuBmM,uBAAY,SAAClM,GAAD,IAAOyD,EAAP,+DAA8B8E,EAASiB,GAA0BxJ,EAAMyD,MAAc,CAAC8E,IAS/H,OANAlL,qBAAU,WACN+U,OAAOG,SAAS,EAAE,GAClBxS,EAAqB,GACrBA,EAAqB,GAAG,KACzB,IAGC,yBAAKvD,UAAW,YACZ,kBAAC,GAAD,MAEA,kBAAC,GAAD,CAAWA,UAAW,OAAQ8S,YAAa,mHAC3C,yBAAK9S,UAAU,6BACX,kBAAC,GAAD,MACA,yBAAKA,UAAU,YAEX,yBAAKA,UAAU,QACX,wBAAIA,UAAU,sBAAd,uHACA,kBAAC,GAAD,KACK6H,EAAkBsI,KAAI,SAAC0G,GAAD,OACnB,kBAAC,GAAD,eAAc7W,UAAW,kBAAsB6W,QAEvD,kBAAC,GAAD,CAA0BhT,SAAU,MAAOuN,eAAgB9L,GACvD,kBAAC,GAAD,CAAQtF,UAAW,6BAA8BuC,MAAO,mJAGhE,wBAAIvC,UAAU,SACd,yBAAKA,UAAU,kBACX,wBAAIA,UAAU,aAAd,qDACA,wBAAIA,UAAU,SACd,uBAAGA,UAAU,QAAQ8H,KAI7B,kBAAC,GAAD,OAEJ,kBAAC,GAAD,QC/CGgP,I,MAvBM,SAAC/W,GAElB,OACI,yBAAKC,UAAW,kCACZ,kBAAC,GAAD,MAEA,yBAAKA,UAAU,8DACX,yBAAKA,UAAU,iBACX,wBAAIA,UAAU,aAAd,oIACA,wBAAIA,UAAU,SACd,uBAAGA,UAAU,QAAb,gOAQR,kBAAC,GAAD,SCXG+W,I,MAPa,SAACC,GACzB,OAAO,SAACjX,GAEJ,OADeoP,YAAYtB,IACmB,kBAACmJ,EAAcjX,GAA5C,kBAAC,IAAD,CAAUE,GAAImN,QCyBxB6J,I,MAzBK,SAAClX,GAAiC,IAE3CmX,EAAyCnX,EAAzCmX,cAAelX,EAA0BD,EAA1BC,UAF2B,EAEDD,EAAfgV,cAFgB,MAET,KAFS,EAiBnD,OAAO,yBAAKtS,MAAOsS,EAAQ/U,UAAS,sBAAiBA,IACjD,2BAAO4C,SAdmB,SAACtC,GACzB,IAAM6W,EAAO7W,EAAMkU,OAAO4C,MAAM,GADQ,GAEMD,GAAQ,IAA/CvT,YAFiC,6BAEVyT,KAAKC,OAFK,EAGlCC,EAAS,IAAIC,WAEnBD,EAAOE,OAAS,WAAO,IACZjL,EAAU+K,EAAV/K,OACP0K,EAAc1K,EAAQ5I,IAG1BuT,GAAQI,EAAOG,cAAcP,IAIOrU,KAAK,OAAO9C,UAAS,gBAC3D,yBAAKA,UAAU,8FACZ,wBAAIA,UAAW,aAAf,SC8GM+W,OA1HM,SAAChX,GAGlB,IAAMgP,EAAYI,aAAY,SAACnJ,GAAD,OAAW8I,GAAmC9I,EAAO,eAC5EkC,EAA+B6G,EAA/B7G,OAAQtE,EAAuBmL,EAAvBnL,KAAMwE,EAAiB2G,EAAjB3G,MAAOC,EAAU0G,EAAV1G,MAEtB4I,EAAgB9B,aAAa,SAACnJ,GAAD,MAAY,CAC3CkC,OAAQ8I,GAAqChL,EAAO,UACpDpC,KAAMoN,GAAqChL,EAAO,QAClDoC,MAAO4I,GAAqChL,EAAO,SACnDqC,MAAO2I,GAAqChL,EAAO,aAEjD2R,EAAuB7M,OAAOC,QAAQkG,GAGtClF,EAAWyD,cACXoI,EAAqBlI,uBAAY,SAACxM,EAAMmB,GAAP,OAAiB0H,E/BmKrB,SAAC7I,EAAWmB,GAAZ,OAAyC,SAAC0H,EAA0CC,GACvHD,EAASrC,IAA2B,IAEpCvG,QAAQC,IAAI,2BAH6H,MAIzH0H,OAAO+M,OAAO3U,GAAvBhB,EAJkI,oBAMvG8J,IAA3BE,UAAYpG,WAET,oBAAwB5C,EAAMmB,GACnC8H,MAAK,SAACC,GACH,IAAKA,EAASC,GACV,KAAK,6BAAL,OAAmCD,EAASE,QAChD,OAAOF,EAASG,UAEnBJ,MAAK,YAA4B,IAAD,IAAzBK,YAAyB,UACnBT,EAASvD,EAAmCtG,EAAOmC,OAEhEqI,OAAM,SAACW,GACJtB,EAASrC,IAA2B,IACpCvG,QAAQwJ,MAAMU,O+BtL2CyK,CAAwB5U,EAAMmB,MAAS,CAAC0H,IACnG2F,EAAahC,uBAAY,kBAAM3D,EAASkB,GAAuB,aAAY,CAAClB,IAC5EgM,EAAarI,uBAAY,kBAAM3D,EAASkB,GAAuB,aAAY,CAAClB,IAC5E8D,EAAqBH,uBAAY,SAACxN,EAAOmC,GAAR,OAAkB0H,EAASL,GAAqBxJ,EAAOmC,EAAO,eAAc,CAAC0H,IAC9GgE,EAAwBL,uBAAY,SAACrL,GAAD,OAAW0H,EAASJ,GAAwBtH,EAAO,eAAc,CAAC0H,IAG5GlL,qBAAU,WACN8W,EAAqBhK,SAAS,mCAAExL,EAAF,KAAOD,EAAP,YAAkB2N,EAAmB3N,EAAOC,QAC3E,IAsDH,OACI,yBAAKnC,UAAW,kCACZ,kBAAC,GAAD,MACA,yBAAKA,UAAU,0BACX,wBAAIA,UAAU,gCAAd,qGACA,yBAAKA,UAAU,oCACX,yBAAKA,UAAU,kCAEX,yBAAKA,UAAU,sCACX,kBAAC,GAAD,CAAO8U,MAAO5M,EAAOhG,QACrB,kBAAC,GAAD,CAAalC,UAAW,wCAAyCkX,cA9D9D,SAACc,EAAYC,GACpC,IAAMhN,EAAW,CAAC6J,MAAOkD,EAAOpU,KAAMqU,GACtCpI,EAAmBmI,EAAO,UAC1BJ,EAAmB3M,EAAU,cA8Db,yBAAKjL,UAAU,oCACX,kBAAC,GAAD,CAAkB8Q,eAAgB,kBAAC,GAAD,CAAQ9Q,UAAW,yBAA0BuC,MAAO,iGACpEkO,oBAAqB,CAACD,YAAa,sBACnCE,oBAAqB,CAACE,YAAa,eAAMD,cAAce,GACvDzC,UAAW,kGAE7B,kBAAC,GAAD,CAAkB6B,eAAgB,kBAAC,GAAD,CAAQ9Q,UAAW,mBAAoBuC,MAAO,0FAC9DkO,oBAAqB,CAACD,YAAa,sBACnCE,oBAAqB,CAACE,YAAa,eAAMD,cAAcoH,GACvD9I,UAAW,6FAIrC,yBAAKjP,UAAU,oDAnDpB,CACH,CACIqE,MAAO,OACP9B,MAAO,qBACPD,UAAW,OACXJ,MAAO0B,EAAK1B,MACZM,QAASoB,EAAKpB,SAElB,CACI6B,MAAO,QACP9B,MAAO,iCACPD,UAAW,OACXJ,MAAOmG,EAAMnG,MACbM,QAAS6F,EAAM7F,SAEnB,CACI6B,MAAO,QACP9B,MAAO,kFACPD,UAAW,MACXJ,MAAOkG,EAAMlG,MACbM,QAAS4F,EAAM5F,UAgCa2N,KAAK,gBAAE9L,EAAF,EAAEA,MAAU6T,EAAZ,gCAA4B,oCACjD,yBAAKlY,UAAU,iDACX,kBAAC,EAAD,eAAWmC,IAAKkC,GAAW6T,EAA3B,CACW9V,cAAe,kBAAM2N,EAAsB1L,IAC3ChC,gBAAiB,SAAC/B,GAAD,OA5EhC,SAACA,EAA4C+D,GACjElB,QAAQC,IAAI,kBAAmBiB,GAD+D,IAEvEnC,EAAU5B,EAA1B8P,cAAgBlO,MACvB2N,EAAmB3N,EAAOmC,GAyEoEhC,CAAgB/B,EAAO+D,OAC7F,kBAAC,GAAD,CAAQrE,UAAW,qDAAsD6O,eAAgB,kBAtE9F,SAACxK,GAA6B,MAExB0K,EAAU1K,GAA5B7B,EAF0C,EAE1CA,QAASN,EAFiC,EAEjCA,MAEViW,EAAyBlH,EAAc5M,GAC7ClB,QAAQC,IAAI,iBAAkBZ,GAC9B,IAAMyI,EAAQ,gBAAK5G,EAASnC,GAC5BM,GAAWN,IAAUiW,GAA0BP,EAAmB3M,EAAU5G,GA+D2CwK,CAAexK,IAAQ9B,MAAO,4DAEjI,wBAAIvC,UAAU,SAPmC,WAWjE,kBAAC,GAAD,UCtICoY,I,MAA0B,SAACpS,GAAD,OAAgBA,EAAMqS,kBAAkB5P,eAClE6P,GAA2C,SAACtS,GAAD,OAAgBA,EAAMqS,kBAAkB7S,Y,MC+CjF3D,qBArCf,SAAgB9B,GAA0B,IAE/BsB,EAAuBtB,EAAvBsB,SAAUrB,EAAaD,EAAbC,UAFoB,EAKGwB,mBAAS,GALZ,mBAK9B+W,EAL8B,KAKhBC,EALgB,KAU/BC,EAAmB,SAACC,GACtBvV,QAAQC,IAAI,cAAesV,GACT,SAAfA,GAAuBF,EAAgBD,EAAe,GACvC,SAAfG,GAAuBF,EAAgBD,EAAe,IAGvDI,EAAiB,CACnBC,UAAU,eAAD,QAAiC,IAAhBL,EAAjB,QAGb,OACI,uBAAKvY,UAAS,iBAAYA,IACjB6B,WAAesO,IAAI9O,GAAU,SAAAwX,GAAK,OAC/B,uBAAKpW,MAAOkW,EAAgB3Y,UAAS,gBAC/B6B,eAAmBgX,SAhBG,IAAjBN,IAkBC,uBAAKxW,QAAS,kBAAM0W,EAAY,SAASzY,UAAU,0CACnE,wBAAMA,UAAU,kCApBFuY,IAAiBlX,EAAQ,OAAa,IAsBrC,uBAAKU,QAAS,kBAAM0W,EAAY,SAASzY,UAAU,0CAClE,wBAAMA,UAAU,oCC+CjB8Y,GAzEU,SAAC/Y,GAGHoP,YAAYmJ,IAA/B,IAHqC,EAajCnJ,YAAYiJ,IAbqB,IAKjCW,cALiC,MAKxB,GALwB,MAMjCnV,YANiC,MAM1B,GAN0B,MAOjCsG,aAPiC,MAOzB,EAPyB,MAQjCC,mBARiC,MAQnB,GARmB,MASjC+J,eATiC,MASvB,GATuB,MAUjC8E,mBAViC,MAUnB,GAVmB,MAWjCC,oBAXiC,MAWlB,GAXkB,MAYjC/D,oBAZiC,MAYlB,GAZkB,EAgB/BnJ,EAAWyD,cACX0J,EAAsBxJ,uBAAY,kBAAM3D,ElC8NV,SAAClI,EAAkBI,GAAnB,OAAkC,SAAC8H,EAA2CC,GAClHD,EAASpD,GAAoC,IAC7CoD,EAASrC,IAA2B,IACpCvG,QAAQC,IAAI,4BAEsB4I,IAA3BE,UAAYpG,WAET,yBAA6BjC,EAAUI,GAC5CkI,MAAK,SAACC,GACH,IAAIA,EAASC,GAAI,MAAMD,EAASE,OAChC,OAAOF,EAASG,UAEnBJ,MAAK,SAACjJ,GACH6I,ERtQgE,CAAEjJ,KDF9C,mBCEsEoD,QAAS,CAAChE,MQsQzEgB,KAC3B6I,EAASpD,GAAoC,OAEhD+D,OAAM,SAACJ,GAEAP,EADO,MAAXO,EACa7C,IAA8B,GAC9BC,IAA2B,IACxCqC,EAASpD,GAAoC,IAC7CxF,QAAQwJ,MAAML,OkCnPiCtI,CAAyBH,EAAUI,MAAM,CAAC8H,IAjB5D,EAoBdoN,cAAhBtV,EApB8B,EAoB9BA,SAAUI,EApBoB,EAoBpBA,GAEVmV,EAAUxF,cAAVwF,OAQP,OALAvY,qBAAU,WACN+U,OAAOG,SAAS,EAAE,GAClBmD,MACD,IAGC,yBAAKlZ,UAAW,sCACZ,kBAAC,GAAD,MACA,yBAAKA,UAAU,sDACX,yBAAKA,UAAU,6DACX,kBAAC,GAAD,CAAQA,UAAW,yBAA0B6O,eAAgBuK,EAAQ7W,MAAO,mCAC5E,wBAAIvC,UAAU,gBACd,wBAAIA,UAAU,wCAAwC4D,IAG1D,wBAAI5D,UAAU,SAClB,yBAAKA,UAAU,iEAEX,yBAAKA,UAAU,kCACX,kBAAC,GAAD,KACK+Y,EAAO5I,KAAK,SAAC2E,GAAD,OAAkB,kBAAC,GAAD,CAAOA,MAAOA,SAIrD,yBAAK9U,UAAU,sEACX,wBAAIA,UAAU,6DAAd,oCAAoFkK,EAApF,yBACA,wBAAIlK,UAAU,iBACd,wBAAIA,UAAU,iEAAd,0CAAyFkU,IACzF,wBAAIlU,UAAU,iBACd,yBAAKA,UAAU,4DACX,wBAAIA,UAAU,yCAAd,qDAAiEgZ,GACjE,wBAAIhZ,UAAU,yCAAd,+CAAgEiZ,IAEpE,wBAAIjZ,UAAU,iBACd,wBAAIA,UAAU,mDAAd,2IAA2FkV,KAG/F,yBAAKlV,UAAU,qDACX,wBAAIA,UAAW,aAAf,qDACA,2BAAImK,KAIZ,kBAAC,GAAD,QCnFCkP,I,MAA6B,SAACrT,GAAD,OAAgBA,EAAMuH,qBAAqB3E,kBACxE0Q,GAA8C,SAACtT,GAAD,OAAgBA,EAAMuH,qBAAqB/H,YACzF+T,GAA+C,SAACvT,GAAD,OAAgBA,EAAMuH,qBAAqB7G,aAC1F8S,GAAmD,SAACxT,GAAD,OAAgBA,EAAMuH,qBAAqB5G,iBCsB5F8S,GAvBW,SAACrZ,GAEvB,IAAMsZ,EAAgB,SAACpZ,GAEGoV,KAAKC,KAAKC,OAAOC,YAAcD,OAAOE,UAC1CJ,KAAKiE,IACnB7Y,SAAS8Y,KAAKC,aAAc/Y,SAASgZ,gBAAgBD,aACrD/Y,SAAS8Y,KAAKG,aAAcjZ,SAASgZ,gBAAgBC,aACrDjZ,SAAS8Y,KAAKI,aAAclZ,SAASgZ,gBAAgBE,eAIrD5Z,EAAQE,IAIlBO,qBAAU,WAEJ,OADAC,SAASC,iBAAiB,SAAU2Y,GAC7B,kBAAM5Y,SAASE,oBAAoB,SAAU0Y,MACnD,CAACtZ,KC0DK2W,OAxDa,SAAChX,GAGzB,IAAM6I,EAAkBuG,YAAYkK,IAC9B7T,EAAa2J,YAAYmK,IACzB5S,EAAcyI,YAAYoK,IAC1B5S,EAAkBwI,YAAYqK,IAG9BzN,EAAWyD,cACXtL,EAAqBwL,uBAAY,eAACzI,EAAD,+DAAwB8E,EAASuB,GAAwBrG,MAAc,CAAC8E,IACzGkO,EAAiBvK,uBAAY,kBAAM3D,E3CNxC,CAAEjJ,KDtBkD,gD4C4BuC,CAACiJ,IACvF5H,EAAyBuL,uBAAY,SAACzL,GAAD,OAAQ8H,ErCoRZ,SAAC9H,GAAD,OAAgB,SAAC8H,EAA8CC,GACtGD,EAAS7C,GAAuC,IAChD6C,EAASrC,IAA2B,IACpCvG,QAAQC,IAAI,+BAEsB4I,IAA3BE,UAAYpG,WAET,uBAA2B7B,GAChCkI,MAAK,SAACC,GACH,IAAKA,EAASC,GACV,KAAK,6BAAL,OAAmCD,EAASE,QAChD,OAAOF,EAASG,UAEnBJ,MAAK,YAA4B,IAAD,IAAzBK,YAAyB,UACnBT,ENhTiB,SAAC9H,GAAD,MAClC,CAAEnB,KDlBqC,+BCkBDoD,QAAS,CAACjC,OM+StBiW,CAAwBjW,IAC3C8H,EAAS7C,GAAuC,OAEnDwD,OAAM,SAACW,GACJtB,EAAS7C,GAAuC,IAChD6C,EAASrC,IAA2B,IACpCvG,QAAQwJ,MAAMU,OqCxSsC8M,CAA4BlW,MAAM,CAAC8H,IAG/FlL,qBAAU,WACN+U,OAAOG,SAAS,EAAE,GAClB7R,MACD,IAGH,IAAMkW,EAAwB,SAAC9Z,GACxBoG,IAAgBC,IACfsT,IACA/V,GAAmB,KAG3BuV,GAAkBW,GAKlB,OACI,yBAAKpa,UAAW,qCACZ,kBAAC,GAAD,MACA,yBAAKA,UAAU,qDACX,wBAAIA,UAAU,2BAAd,mFACA,kBAAC,GAAD,KACK4I,EAAgBuH,KAAK,gBAAElM,EAAF,EAAEA,GAAOoW,EAAT,6BAClB,yBAAKlY,IAAK8B,EAAIjE,UAAU,eACpB,kBAAC,GAAD,eAAcA,UAAW,iBAAkBiE,GAAIA,GAAQoW,IACvD,kBAAC,GAAD,CAAkBvJ,eAAgB,kBAAC,GAAD,CAAQ9Q,UAAW,+DAAgE4O,WAAYpJ,EAAYjD,MAAO,4GAClIkO,oBAAqB,CAACD,YAAa,sBACnCE,oBAAqB,CAACE,YAAa,eAAMD,cAAc,kBAAMxM,EAAuBF,KACpFgL,UAAW,kHAGxCvI,IAAgBC,GAAmB,kBAAC,GAAD,CAAQ3G,UAAW,gCAAiC6O,eAAgBuL,EAC/F7X,MAAO,2IAChB,kBAAC,GAAD,OAEJ,kBAAC,GAAD,U,SCqIGwU,I,MAAAA,IA1KY,SAAChX,GAGxB,IAAM4F,EAAqBwJ,YAAYjB,IAHA,EAIMiB,aAAa,SAACnJ,GAAD,OACtDoI,GAA4BD,GAA0BnI,GAAQ,aAL3B,kBAIZJ,GAJY,iBAMjC0U,EAAanL,aAAa,SAACnJ,GAAD,OAAWgL,GAAqChL,EAAO,YACjF+I,EAAYI,aAAY,SAACnJ,GAAD,OAAW8I,GAAmC9I,EAAO,yBAE/EiE,EAKA8E,EALA9E,UAAWrG,EAKXmL,EALWnL,KACXsG,EAIA6E,EAJA7E,MAAOrD,EAIPkI,EAJOlI,WACPsD,EAGA4E,EAHA5E,YACAC,EAEA2E,EAFA3E,YAAaC,EAEb0E,EAFa1E,UACbR,EACAkF,EADAlF,cAEErE,EAAa2J,YAAYpB,IAGzBhC,EAAWyD,cACX5K,EAAsB8K,uBAAY,SAACxM,GAAD,OAAU6I,EtCyRd,SAAC7I,GAAD,OAA+B,SAAC6I,EAA2CC,GAC/GD,EAASvC,IAAyB,IAClCuC,EAASrC,IAA2B,IACpCvG,QAAQC,IAAI,uBAEsB4I,IAA3BE,UAAYpG,WAET,oBAAwB5C,GAC7BiJ,MAAK,SAACC,GACH,IAAKA,EAASC,GAAI,KAAK,6BAAL,OAAmCD,EAASE,QAE1DP,EAASvC,IAAyB,IAClCuC,EAASoB,YAAKqF,QAGrB9F,OAAM,SAACW,GACJtB,EAASvC,IAAyB,IAClCuC,EAASrC,IAA2B,IACpCvG,QAAQwJ,MAAMU,OsC3SqCkN,CAAyBrX,MAAQ,CAAC6I,IACvFyO,EAAsB9K,uBAAY,SAACxN,EAAOmC,GAAR,OAAkB0H,EAASL,GAAqBxJ,EAAOmC,EAAO,yBAAwB,CAAC0H,IACzHgE,EAAwBL,uBAAY,SAACrL,GAAD,OAAW0H,EAASJ,GAAwBtH,EAAO,yBAAwB,CAAC0H,IAChHkE,EAAqBP,uBAAY,kBAAM3D,EAASH,GAAsC,yBAAwB,CAACG,IAC/GiE,EAAkCN,uBAAY,kBAAM3D,EAASF,GAAkC,yBAAwB,CAACE,IAG9HlL,qBAAU,WAEN,OADA2Z,EAAoBF,EAAY,eACzB,WACHtK,OAEL,IAGHnP,qBAAU,WACN,GAAGgJ,EAAe,CACd,IAIMoB,EAAWN,GAA8BoE,EAA9BpE,EAJC,SAACM,EAAe9I,EAAUD,GAExC,OAD8C+I,EAAS9I,GAA/C,eAARA,GAAgC,cAARA,EAAsCD,EAAM+B,GAAqB/B,EAClF+I,KAGXrG,EAAoBqG,MAEzB,CAACpB,IAEJ,IAAMyK,EAA4B,SAACjQ,EAAmC8O,EAAiBoB,GACnF,GAAG,cAAepB,EAAY,OAAO,EACrCqH,EAAoBrH,EAAY9O,GAChCkQ,GAAkB,IAShBlS,EAAkB,SAAC/B,EAA4C+D,GACjElB,QAAQC,IAAI,kBAAmBiB,GAD0E,IAElFnC,EAAU5B,EAA1B8P,cAAgBlO,MACvBsY,EAAoBtY,EAAOmC,IAqCzBoW,EAAoB,SAACpW,GAAD,OACrB0K,EAAU1K,GAAO7B,SAAW,mCAEjC,OACI,yBAAKxC,UAAW,wCACZ,kBAAC,GAAD,MACA,yBAAKA,UAAU,mDACX,wBAAIA,UAAU,gCAAd,iHACA,yBAAKA,UAAU,uCACX,wBAAIA,UAAS,oEAA+Dya,EAAkB,gBAA9F,0DAGA,kBAAC,GAAD,CAAQza,UAAW,WAAYoC,cAAe,kBAAM2N,EAAsB,eACtEgD,0BAA2B,SAACI,EAAiB/S,GAAlB,OAAmCkU,EAA0B,aAAcnB,EAAY/S,IAClH8B,MAAO2E,EAAW3E,MAAMK,MAAOsQ,YAAajN,EAAgBkN,YAAa,2FAEjF,wBAAI9S,UAAU,SACd,yBAAKA,UAAU,gDACX,wBAAIA,UAAU,0EAAd,0DACA,yBAAKA,UAAU,gBA9CpB,CACH,CACIqE,MAAO,OACP9B,MAAO,qBACPD,UAAW,OACXJ,MAAO0B,EAAK1B,MACZM,QAASoB,EAAKpB,SAElB,CACI6B,MAAO,QACP9B,MAAO,2BACPD,UAAW,SACXJ,MAAOgI,EAAMhI,MACbM,QAAS0H,EAAM1H,SAEnB,CACI6B,MAAO,cACP9B,MAAO,mDACPD,UAAW,WACXJ,MAAOiI,EAAYjI,MACnBM,QAAS2H,EAAY3H,UA2BY2N,KAAI,gBAAE9L,EAAF,EAAEA,MAAU6T,EAAZ,gCACzB,kBAAC,EAAD,eAAWlY,UAAW,OAAQmC,IAAKkC,GAAW6T,EAA9C,CACW9V,cAAe,kBAAM2N,EAAsB1L,IAC3ChC,gBAAiB,SAAC/B,GAAD,OAA0C+B,EAAgB/B,EAAO+D,UAEjG,yBAAKrE,UAAU,uDAEP,0BAAMA,UAAW,gDAAjB,uEACmBiK,EAAU/H,MAAMsI,OADnC,oBAIJ,yBAAKxK,UAAU,4DACViK,EAAU/H,MAAMiO,KAAK,gBAAE2E,EAAF,EAAEA,MAAOlR,EAAT,EAASA,KAAT,OAClB,kBAAC,GAAD,CAAOiL,eAAgB,kBAnE7B,SAACoJ,GACvB,IAAMyC,EAAiBzQ,EAAU/H,MAAM8G,QAAQ,cAAE8L,MAAF,SAASlR,OAAwBqU,KAChFuC,EAAoBE,EAAgB,aAiEqBC,CAAkB/W,IAAO5D,UAAW,6DAA8D8U,MAAOA,OACzI7K,EAAU/H,MAAMsI,OAAS,GAC1B,kBAAC,GAAD,CAAaxK,UAAW,oBAAqBkX,cAjF9C,SAACc,EAAYC,GACpC,IAAM/V,EAAQ+H,EAAU/H,MAAMiE,OAAO,CAAC2O,MAAOkD,EAAOpU,KAAMqU,IAC1DuC,EAAoBtY,EAAO,gBAgFH,2NAOhB,wBAAIlC,UAAU,SACd,yBAAKA,UAAU,uCACX,wBAAIA,UAAS,oEAA+Dya,EAAkB,eAA9F,uEACA,kBAAC,GAAD,CAAQza,UAAW,eAAgBoC,cAAe,kBAAM2N,EAAsB,cAC1EgD,0BAA2B,SAACI,EAAiB/S,GAAlB,OAAmCkU,EAA0B,YAAanB,EAAY/S,IACjH8B,MAAOmI,EAAUnI,MAAM0B,KAAMiP,YAAalN,EAAoBmN,YAAa,mEAEnF,wBAAI9S,UAAU,SAEd,yBAAKA,UAAU,uCACX,wBAAIA,UAAU,6DAAd,oDACA,kBAAC,EAAD,CAAWA,UAAW,eAAgBwC,QAAS4H,EAAY5H,QAASN,MAAOkI,EAAYlI,MAC5ED,YAAa,kFAAkBM,MAAO,6CAAWD,UAAW,SAC5DF,cAAe,kBAAM2N,EAAsB,gBAC3C1N,gBAAiB,SAAC/B,GAAD,OAA0C+B,EAAgB/B,EAAO,mBAEjG,wBAAIN,UAAU,SACd,yBAAKA,UAAW,8DACZ,kBAAC,GAAD,CAAQA,UAAW,oCAAqCuC,MAAO,0GAAsBqM,WAAYpJ,EAAYqJ,eAAgBoB,IAC7H,kBAAC,GAAD,CAAkBa,eAAgB,kBAAC,GAAD,CAAQ9Q,UAAW,sBAAuBuC,MAAO,8EACjEkO,oBAAqB,CAACD,YAAa,sBACnCE,oBAAqB,CAACE,YAAa,eAAMD,cAAcX,GACvDf,UAAW,uKAGrC,kBAAC,GAAD,WC1MC2L,I,MAA+B,SAAC5U,GAAD,OAAgBA,EAAMyH,uBAAuBrE,oBAC5EyR,GAAiD,SAAC7U,GAAD,OAAgBA,EAAMyH,uBAAuB/G,aAC9FoU,GAAqD,SAAC9U,GAAD,OAAgBA,EAAMyH,uBAAuB9G,iBC0IhGoU,GAhGe,SAAChb,GAAe,IAIpC8D,EADyB+P,cAAxB1M,SAAWC,SACQ6T,OAAO,GAKnBC,GAFS9L,aAAY,SAACnJ,GAAD,OAAWmI,GAA0BnI,MAEvCmJ,YAAYkE,IAAtC9Q,OACM2Y,EAAsB/L,YAAYmE,IAAxC1P,KAED6C,EAAe0I,YAAYiE,IAC3B+H,EAAwBhM,YAAYqE,IAGpC4H,EAFoBjM,YAAYsE,MACTtE,YAAYuE,IAGnC2H,EAAgB5U,EAAa+D,QAAU2Q,EAEvC/R,EAAoB+F,YAAYyL,IAGhCU,EAFcnM,YAAY0L,MACR1L,YAAY2L,IAG9BS,EAAsBpM,YAAYpB,IAGlChC,EAAWyD,cACXgM,EAAmB9L,uBAAY,SAAC7L,GAAD,IAAWoD,EAAX,+DAAkC8E,EAASyB,GAA0B3J,EAAUoD,MAAc,CAAC8E,IAC7HpI,EAA4B+L,uBAAY,kBAAM3D,EAASa,IAA+B,MAAQ,CAACb,IAC/FkO,EAAiBvK,uBAAY,kBAAM3D,E5C1DxC,CAAEjJ,KDboD,kD6CuEwC,CAACiJ,IAC1F0P,EAA0B/L,uBAAY,kBAAM3D,EtDhEgC,CAAEjJ,KDNzC,sCuDsEkD,CAACiJ,IACxF2P,EAAuChM,uBAAY,kBAAM3D,E5C9DmD,CAAEjJ,KDT7D,kD6CuEmE,CAACiJ,IACrHiI,EAAmCtE,uBAAY,kBAAM3D,EtDhEiC,CAAEjJ,KDNnD,sCuDsEgE,CAACiJ,IAMtG4P,EAA6C,kBAAMN,EAAgBD,EAAiCE,GAxChE,EA2ChB9Z,oBAAS,iBAAO,CAACyZ,kBAAiBC,oBA3ClB,mBA2CnClV,EA3CmC,KA2C5B4V,EA3C4B,KA8C1C/a,qBAAU,WAGN,OAFA+U,OAAOG,SAAS,EAAE,GAClByF,EAAiB3X,GACV,WACH6X,IACA1H,OAEL,IAGHnT,qBAAU,WACN6a,IACAF,EAAiB3X,GACjB+X,EAAS,CAACX,kBAAiBC,oBAC5B,CAACrX,IAGJ,IAAMuW,EAAwB,SAAC9Z,GACtBqb,OAzB6CN,EAAgBI,EAA0BxB,MAFpDoB,EAAgB1X,EAA4B6X,GA6BhE3X,GAAU,KAKlC,OAFA4V,GAAkBW,GAGd,yBAAKpa,UAAW,uCACZ,kBAAC,GAAD,MACA,kBAAC,GAAD,CAAWA,UAAW,OAAQ8S,YAAa,mHAC3C,yBAAK9S,UAAU,iEACX,kBAAC,GAAD,MACA,yBAAKA,UAAU,sCACX,wBAAIA,UAAW,+CACX,0BAAMA,UAAW,oBAAjB,kDACCgG,EAAMkV,cAFX,KAE4BlV,EAAMiV,iBAElC,kBAAC,GAAD,CAA6BzV,WAAY+V,GAAuBJ,IA5CnCE,EAAgB5U,EAAe2C,GA6CxC+G,KAAI,gBAAElM,EAAF,EAAEA,GAAOoW,EAAT,6BAChB,kBAAC,GAAD,eAAcra,UAAW,iBAAkBiE,GAAIA,GAAQoW,QAE/D,kBAAC,GAAD,QAEFsB,KAAiC,kBAAC,GAAD,CAAQ3b,UAAW,gCAAiC6O,eAAgBuL,EAC9F7X,MAAO,4IAEpB,kBAAC,GAAD,QCvHC6K,GAAY,QACZoF,GAAwB,mBAExBC,GAAgB,YAChBnL,GAAc,UACd+J,GAAkB,SAACxN,GAAD,gBAA0ByD,GAA1B,YAAyCzD,IAC3D2N,GAAgB,YAEhBkB,GAA2B,SAAC1S,GAAD,OAAsB,oCAC1D,kBAAC,IAAD,CAASqO,gBAAiB,SAAUrO,UAAS,wGAAmGA,GAAaC,GAPzH,uBAOpC,+HAuCW4b,GAjCH,WAGR,IAAMjW,EAAiBuJ,aAAa,SAACnJ,GAAD,OAChCoI,GAA4BD,GAA0BnI,OACpDM,EAAS6I,YAAYtB,IAGrB9B,EAAWyD,cACX9L,EAAoBgM,uBAAY,kBAAM3D,GzCuEJ,SAACA,EAAyCC,GAClF7I,QAAQC,IAAI,0BAEsB4I,IAA3BE,UAAYpG,WAET,oBACLqG,MAAK,SAACC,GACH,IAAKA,EAASC,GACV,KAAK,4BAAL,OAAkCD,EAASE,QAC/C,OAAOF,EAASG,UAEnBJ,MAAK,SAACjJ,GACH6I,EHvG8E,CAAEjJ,KfZpD,2BeYoFoD,QAAS,CAAChE,MGuGzFgB,QAEpCwJ,OAAM,SAACW,GAEJlK,QAAQwJ,MAAMU,WyCvF0D,CAACtB,IAC3E+P,EAAcpM,uBAAY,kBAAM3D,EAASU,QAAqB,CAACV,IAOrE,OALAlL,qBAAU,WACN6C,IACA4C,GAAUwV,MACX,IAGH,yBAAK9b,UAAU,gBACX,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAO+b,OAAK,EAACtb,KAjCe,sBAiCiBub,UAAWC,KACxD,kBAAC,IAAD,CAAOF,OAAK,EAACtb,KAAM2M,GAAW4O,UAAWpF,KACzC,kBAAC,IAAD,CAAOmF,OAAK,EAACtb,KAAM+R,GAAuBwJ,UAAWE,KACrD,kBAAC,IAAD,CAAOH,OAAK,EAACtb,KAAMgS,GAAeuJ,UAAWG,KAC7C,kBAAC,IAAD,CAAOJ,OAAK,EAACtb,KAAM+Q,GAAewK,UAAWlF,KAC5ClR,EAAeuK,KAAK,gBAAEtM,EAAF,EAAEA,SAAF,OAAoB,kBAAC,IAAD,CAAOkY,OAAK,EAACtb,KAAM4Q,GAAgBxN,GAAWmY,UAAWjB,QACjGnV,EAAeuK,KAAK,gBAAEtM,EAAF,EAAEA,SAAF,OAAqB,kBAAC,IAAD,CAAOkY,OAAK,EAACtb,KAAI,UAAK4Q,GAAgBxN,GAArB,QAAsCmY,UAAWlD,QAC5G,kBAAC,IAAD,CAAU7Y,GAAImN,Q,6CC1CbgP,GAAUC,eAoBRC,GAFDC,aAhBSC,aAAgB,CACnCC,OAAQC,aAAcN,IACtBlQ,UAAWnG,EACX0H,uBAAwBpE,EACxB0F,UAAW3D,GACXuJ,UAAW5M,EACX8E,eAAgB7F,EAChBqR,kBAAmB3P,EACnB6E,qBAAsB1E,EACtBoI,cAAe1I,EACf0D,mBAAoB1F,IAMcoW,aAAgBC,aAAiBR,IAAUS,OCzBhFjH,OAAe0G,MAAQA,GAExBQ,IAASC,OACL,kBAAC,IAAMC,WAAP,KACI,kBAAC,IAAD,CAAUV,MAAOA,IACb,kBAAC,KAAD,CAAiBF,QAASA,IACtB,kBAAC,GAAD,SAIZtb,SAASmc,eAAe,Y","file":"static/js/main.72fe5a04.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/defaultAvatar.d73128e4.jpg\";","import React from 'react';\nimport \"./logoStyles.css\"\nimport { NavLink } from 'react-router-dom';\n\nconst Logo = (props: any) => {\n    const {className} = props\n  return (\n      <NavLink className={className} to={\"/feed\"}>\n          <div className=\"logo navbar-brand mb-0 h1 d-flex\">\n              <span className={\"border rounded d-flex align-items-center p-0 pl-2 pr-2 mr-2 font-weight-bold bg-warning text-dark border-dark\"}>C</span>\n              <span className={\"font-weight-bold\"}>calam.ru</span>\n          </div>\n      </NavLink>\n\n  );\n}\n\nexport default Logo;\n","import React, {useEffect} from 'react';\n\nconst useOutsideClick = (ref: any, handler: any) => {\n\n    const listener = (event: any) => {\n        const popupBox = ref.current\n        const target = event.path || ( event.composed && event.composedPath() )\n        !target.includes(popupBox) && handler(event);\n    }\n\n  useEffect(() => {\n        document.addEventListener('click', listener)\n        return () => document.removeEventListener('click', listener)\n      }, [ref, handler]\n  );\n}\n\nexport default useOutsideClick;\n","import React, {ReactElement, Ref, useEffect, useRef, useState} from 'react';\nimport \"./modalWindowStyles.css\"\nimport useOutsideClick from '../../hooks/useOutsideClick';\n\ntype propsTypes = {\n    alertCloseHandler?: Function\n    isActiveFromProps?: boolean\n    children?: any\n    withOpenBtn?: boolean\n    modal: ReactElement\n}\n\nconst ModalWindow = (props: propsTypes) => {\n\n    const {isActiveFromProps, modal, withOpenBtn = false, children, alertCloseHandler = () => null} = props\n    const ref: Ref<any> = useRef(null)\n\n    const [isActive, setIsActive] = useState(false)\n\n    useEffect(() => {\n      isActiveFromProps && setIsActive(true)\n    }, [isActiveFromProps])\n\n    const outsideClickHandler = () => {\n      isActive && closeModalWindow()\n    }\n    const closeModalWindow = (withAlertClose = true) => {\n        setIsActive(false)\n        withAlertClose && alertCloseHandler()\n    }\n\n    useOutsideClick(ref, outsideClickHandler)\n\n    return (\n\n        <>\n            <div className={`modalWindow ${isActive && \"modalWindow__active\"} `}>\n                <div ref={ref} className=\"p-lg-5 p-4 bg-light position-relative\">\n                    {React.cloneElement(modal, {closeModalWindow})}\n                    <span onClick={() => closeModalWindow()} className={\"popup__close\"}>&times;</span>\n                </div>\n            </div>\n            { withOpenBtn && children(() => setIsActive(true)) }\n        </>\n    );\n}\n\nexport default ModalWindow;\n","import React from 'react';\r\nimport \"./textInputStyles.css\"\r\n\r\ntype propsTypes = {\r\n  placeholder?:string\r\n  inputType?: string\r\n  value: string\r\n  key?: number | string\r\n  onBlurHandler: Function\r\n  onChangeHandler: Function\r\n  isValid?: boolean\r\n  className?: string\r\n  label?: string\r\n}\r\n\r\nconst TextInput = (props: propsTypes) => {\r\n\r\n  const {\r\n    className,\r\n    placeholder,\r\n    value, key,\r\n    onBlurHandler,\r\n    onChangeHandler,\r\n    inputType = \"text\",\r\n    label = \"\",\r\n    isValid = true} = props\r\n\r\n  return (\r\n        <div className={`textInput ${!isValid ? \"textInput__alert\" : null} ${className}`}>\r\n          <label>{label}</label>\r\n          {inputType === \"textArea\" ?\r\n              <textarea style={{resize: \"none\"}} rows={6} className={\"form-control\"} onChange={(event) => onChangeHandler(event)} placeholder={placeholder}\r\n                        onBlur={(event) => onBlurHandler(event)} value={value}/> :\r\n              <input className={\"form-control\"} key={key} onBlur={(event) => onBlurHandler(event)} value={value} type={inputType} placeholder={placeholder}\r\n                     onChange={(event) => onChangeHandler(event)} />}\r\n        </div>\r\n  );\r\n}\r\n\r\nexport default TextInput;\r\n","// ------AUTHORIZATION-TYPES-----//\r\nimport {SettingsFieldType} from \"../redux/reducers/settingsState/settingsState\";\r\n\r\nexport type AuthorizationData = { login: string,  password: string }\r\nexport type RegistrationData = { name: string,  login: string, password: string }\r\n\r\n// ------CREATE-ANNOUNCEMENT-PAGE---//?\r\nexport type NewAnnouncementData = {\r\n    category: number,\r\n    name: string,\r\n    description: string\r\n    photos?: Array<string>,\r\n    price: number,\r\n    subway: string,\r\n    phone: string\r\n}\r\n\r\n// ------SEARCH-BOX-TYPES-----//\r\nexport type GetAnnouncementsCategoryType = \"announcements\" |  \"housing\" | \"apartment\" | \"bunk\" | \"room\" | \"job\" | \"vacancies\" | string\r\n\r\n// ------SETTINGS-TYPES---//\r\nexport type PostSettingsAvatarData = { avatar: string }\r\nexport type PostSettingsNameData = { name: string }\r\nexport type PostSettingsEmailData = { email: string }\r\nexport type PostSettingsPhoneData = { phone: string }\r\n\r\nexport class testAPI {\r\n\r\n    static baseUrl = './json/'\r\n\r\n    // ------AUTHORIZATION-----//\r\n    static postAuthorizationData = (data: AuthorizationData): Promise<Response> => {\r\n        console.log(data, \"postAuthorizationData\")\r\n         return fetch(`https://5faa7de0b5c645001602aa4e.mockapi.io/responseForPost`)\r\n    }\r\n\r\n    static postRegistrationData = (data: RegistrationData): Promise<Response> => {\r\n        console.log(data, \"postRegistrationData\")\r\n        return fetch(`https://5faa7de0b5c645001602aa4e.mockapi.io/responseForPost`)\r\n    }\r\n\r\n    // ------FEED-PAGE-----//\r\n    //@response  20 последних объявлений\r\n    static getLastAnnouncements = (page: number): Promise<Response> => {\r\n        console.log(\"getLastAnnouncements\")\r\n        const path = `getLastAnnouncements`\r\n        return fetch(`https://5faa8c4eb5c645001602abd5.mockapi.io/getAnnouncementsList`)\r\n    }\r\n\r\n    // ------GET-USER-INFO-----//\r\n    static getUserInfo = (): Promise<Response> => {\r\n        console.log(\"getUserInfo\")\r\n        return fetch(`https://5faa8c4eb5c645001602abd5.mockapi.io/getUserData`)\r\n    }\r\n\r\n    // ------SEARCH-BOX-----//\r\n    static getSubwayStations = (): Promise<Response> => {\r\n        console.log(\"getSubwayStations\")\r\n        return fetch(`https://5faa7de0b5c645001602aa4e.mockapi.io/getSubwayStations`)\r\n    }\r\n\r\n    static getAnnouncementsByFilters = (page: number, name?: string, category?: string| number, subway?: string | number): Promise<Response> => {\r\n        const path = `getAnnouncementsByFilters?page=${page}&category=${category}&name=${name}&subway=${subway}`\r\n        console.log(page, category, name, subway, \"getAnnouncementsByFilters\", path)\r\n        return fetch(`https://5faa8c4eb5c645001602abd5.mockapi.io/getAnnouncementsByFilters`)\r\n    }\r\n\r\n    //---REQUEST-FOR-SEARCH-BOX/FEED-PAGE/HOUSING/JOB/TRADING---//\r\n    static getAnnouncementsList = (page: number, category: GetAnnouncementsCategoryType): Promise<Response> => {\r\n        const path = `getAnnouncementsByCategoryAndName?page=${page}&category=${category}`\r\n        console.log(page, category, \"getAnnouncementsByCategoryAndName\", path)\r\n        return fetch(`https://5faa8c4eb5c645001602abd5.mockapi.io/getAnnouncementsList`)\r\n    }\r\n\r\n    // ------GET-ANNOUNCEMENT-BY-CATEGORY-AND-ID----//\r\n    static getAnnouncementByIdThunk = (category: GetAnnouncementsCategoryType, id: number): Promise<Response> => {\r\n        console.log(\"getAnnouncementByIdThunk\", category, id)\r\n        const path = `getAnnouncementByIdThunk/${category}/${id}`\r\n        return fetch(`https://5faa7de0b5c645001602aa4e.mockapi.io/getAnnouncement`)\r\n    }\r\n\r\n    // ------MY-ANNOUNCEMENTS-PAGE---//\r\n    static getMyAnnouncements = (page: number): Promise<Response> => {\r\n        console.log(\"getMyAnnouncements\")\r\n        const path = `getMyAnnouncements?page=${page}`\r\n        return fetch(`https://5faa7de0b5c645001602aa4e.mockapi.io/getMyAnnouncements`)\r\n    }\r\n\r\n    static postDeleteAnnouncement = (id:number): Promise<Response> => {\r\n        console.log(id, \"postDeleteAnnouncement\")\r\n        return fetch(`https://5faa7de0b5c645001602aa4e.mockapi.io/responseForPost`)\r\n    }\r\n\r\n\r\n    // ------SETTINGS-PAGE---//\r\n\r\n    static postSettingsByField = (data: any, field: SettingsFieldType): Promise<Response> => {\r\n        console.log(data, \"postSettingsByField\")\r\n        switch (field) {\r\n            case \"avatar\": return testAPI.postSettingsAvatar(data)\r\n            case \"name\": return testAPI.postSettingsName(data)\r\n            case \"phone\": return testAPI.postSettingsPhone(data)\r\n            case \"login\": return testAPI.postSettingsLogin(data)\r\n            default: return testAPI.postSettingsAvatar(data)\r\n        }\r\n    }\r\n    static postSettingsAvatar = (data: PostSettingsAvatarData): Promise<Response> => {\r\n        console.log(data, \"postSettingsAvatar\")\r\n        return fetch(`https://5faa7de0b5c645001602aa4e.mockapi.io/responseForPost`)\r\n    }\r\n\r\n    static postSettingsName = (data: PostSettingsNameData): Promise<Response> => {\r\n        console.log(data, \"postSettingsName\")\r\n        return fetch(`https://5faa7de0b5c645001602aa4e.mockapi.io/responseForPost`)\r\n    }\r\n\r\n    static postSettingsLogin = (data: PostSettingsEmailData): Promise<Response> => {\r\n        console.log(data, \"postSettingsLogin\")\r\n        return fetch(`https://5faa7de0b5c645001602aa4e.mockapi.io/responseForPost`)\r\n    }\r\n\r\n    static postSettingsPhone = (data: PostSettingsPhoneData): Promise<Response> => {\r\n        console.log(data, \"postSettingsPhone\")\r\n        return fetch(`https://5faa7de0b5c645001602aa4e.mockapi.io/responseForPost`)\r\n    }\r\n\r\n    static postLogout = (): Promise<Response> => {\r\n        console.log(\"postLogout\")\r\n        return fetch(`https://5faa7de0b5c645001602aa4e.mockapi.io/responseForPost`)\r\n    }\r\n\r\n    static postDelete = (): Promise<Response> => {\r\n        console.log(\"postDelete\")\r\n        return fetch(`https://5faa7de0b5c645001602aa4e.mockapi.io/responseForPost`)\r\n    }\r\n\r\n    // ------CREATE-ANNOUNCEMENT-PAGE---//\r\n    static postNewAnnouncement = (data: NewAnnouncementData): Promise<Response> => {\r\n        console.log(data, \"postNewAnnouncement\")\r\n        return fetch(`https://5faa7de0b5c645001602aa4e.mockapi.io/responseForPost`)\r\n    }\r\n}","import {serverAPI} from \"../../../api/serverAPI\";\r\nimport {testAPI} from \"../../../api/testAPI\";\r\n\r\nexport const getItemFromLocalStorage = (feild:string) => localStorage.getItem(feild)\r\nexport const setItemToLocalStorage = (feild:string, value:any) => localStorage.setItem(feild, value)\r\nexport const clearLocalStorage = () => localStorage.clear()\r\n\r\nexport const SET_IS_FETCHING_MAIN_STATE = \"SET_IS_FETCHING_MAIN_STATE\"\r\nexport const SET_SUBWAY_STATIONS_DATA = \"SET_SUBWAY_STATIONS_DATA\"\r\nexport const SET_IS_EMPTY_RESPONSE_MAIN_STATE = \"SET_IS_EMPTY_RESPONSE_MAIN_STATE\"\r\nexport const SET_IS_ERROR_FETCH_MAIN_STATE = \"SET_IS_ERROR_FETCH_MAIN_STATE\"\r\nexport const RESET_TO_DEFAULT_STATE_ALL_REDUCERS = \"RESET_TO_DEFAULT_STATE_ALL_REDUCERS\"\r\n\r\nexport const initialStateSubway = {id: \"\", name: \"Все станции метро\"}\r\nexport const initialStateCategory = { id: \"\", name: \"Любая категория\", category: \"all\"}\r\n\r\ntype initialStateType = typeof initialState\r\nconst initialState = {\r\n    isFetching: false,\r\n    isEmptyResponse: false,\r\n    isErrorFetch: false,\r\n    subwayStationsData: [initialStateSubway],\r\n    categoriesData : [\r\n        initialStateCategory,\r\n        {\r\n            id: 1,\r\n            name: \"Недвижимость\",\r\n            category: \"housing\",\r\n            subCategories : [\r\n                {id: 2, name: \"Квартиры\", category: \"apartments\"},\r\n                {id: 3, name: \"Комната\", category: \"bunk\"},\r\n                {id: 4, name: \"Койко-место\", category: \"room\"}\r\n            ]\r\n        },\r\n        {\r\n            id: 5,\r\n            name: \"Работа\",\r\n            category: \"job\",\r\n            subCategories : [\r\n                {id: 6, name: \"Вакансии\", category: \"vacancies\"}\r\n            ]\r\n        }\r\n    ],\r\n    apiService: testAPI,\r\n    // apiService: serverAPI\r\n}\r\n\r\nexport const mainStateReducer = (state = initialState, action : any): initialStateType => {\r\n    const {type, payload } = action\r\n    const { value } = payload || {}\r\n    const { subwayStationsData } = state\r\n\r\n    switch (type) {\r\n        case SET_IS_FETCHING_MAIN_STATE :\r\n            console.log(\"SET_IS_FETCHING_MAIN_STATE\", value)\r\n            return {...state, isFetching: value}\r\n        case SET_IS_EMPTY_RESPONSE_MAIN_STATE :\r\n            console.log(\"SET_IS_EMPTY_RESPONSE_MAIN_STATE\", value)\r\n            return {...state, isEmptyResponse: value}\r\n        case SET_IS_ERROR_FETCH_MAIN_STATE :\r\n            console.log(\"SET_IS_ERROR_FETCH_MAIN_STATE\", value)\r\n            return {...state, isErrorFetch: value}\r\n        case SET_SUBWAY_STATIONS_DATA :\r\n            console.log(\"SET_SUBWAY_STATIONS_DATA\", value)\r\n            return {...state, subwayStationsData: subwayStationsData.concat(value) }\r\n        case RESET_TO_DEFAULT_STATE_ALL_REDUCERS :\r\n            console.log(\"RESET_TO_DEFAULT_STATE_ALL_REDUCERS\", value)\r\n            return initialState\r\n        default: return state\r\n    }\r\n}","import {AuthorizationStateActionTypes} from \"./authorizationStateActionCreators\";\r\nimport {\r\n    getItemFromLocalStorage,\r\n    setItemToLocalStorage,\r\n    clearLocalStorage,\r\n    RESET_TO_DEFAULT_STATE_ALL_REDUCERS\r\n} from \"../mainState/mainState\";\r\nimport {SET_IS_FETCHING_SETTINGS_REDUCER} from \"../settingsState/settingsState\";\r\n\r\nexport const SET_IS_REGISTRATION = \"SET_IS_REGISTRATION\"\r\nexport const SET_IS_CORRECT_AUTH_DATA = \"SET_IS_CORRECT_AUTH_DATA\"\r\nexport const SET_IS_AUTH = \"SET_IS_AUTH\"\r\nexport const LOGOUT_OR_DELETE_USER = \"LOGOUT_OR_DELETE_USER\"\r\n\r\ntype initialStateType = typeof initialState\r\nconst initialState = {\r\n    isRegistration: false,\r\n    isCorrectAuthData: true,\r\n    isAuth: () => getItemFromLocalStorage(\"isAuth\") !== null\r\n}\r\n\r\nexport const authorizationStateReducer = (state = initialState, action : AuthorizationStateActionTypes): initialStateType => {\r\n    const {type, payload } = action\r\n    const { value } = payload || {}\r\n\r\n    switch (type) {\r\n        case SET_IS_REGISTRATION :\r\n            console.log(\"SET_IS_REGISTRATION\", value)\r\n            return {...state, isRegistration: value}\r\n        case SET_IS_CORRECT_AUTH_DATA :\r\n            console.log(\"SET_IS_CORRECT_AUTH_DATA\", value)\r\n            return {...state, isCorrectAuthData: value}\r\n        case SET_IS_AUTH :\r\n            console.log(\"SET_IS_AUTH\", value)\r\n            setItemToLocalStorage(\"isAuth\", value)\r\n            return {...state, isAuth: () => getItemFromLocalStorage(\"isAuth\") !== null}\r\n        case LOGOUT_OR_DELETE_USER:\r\n            console.log(\"LOGOUT_OR_DELETE_USER\")\r\n            clearLocalStorage()\r\n            return state\r\n        case RESET_TO_DEFAULT_STATE_ALL_REDUCERS :\r\n            console.log(\"RESET_TO_DEFAULT_STATE_ALL_REDUCERS\", value)\r\n            return initialState\r\n        default: return state\r\n    }\r\n}","import {LOGOUT_OR_DELETE_USER, SET_IS_AUTH, SET_IS_CORRECT_AUTH_DATA, SET_IS_REGISTRATION} from \"./authorizationState\";\r\n\r\nexport type AuthorizationStateActionTypes  = SetIsRegistrationACType | SetIsAuthACType | SetIsCorrectAuthDataACType\r\n\r\nexport type SetIsRegistrationACType = {\r\n    type: typeof SET_IS_REGISTRATION\r\n    payload : { value: boolean }\r\n}\r\nexport type SetIsAuthACType = {\r\n    type: typeof SET_IS_AUTH | string\r\n    payload : { value: boolean }\r\n}\r\nexport type SetIsCorrectAuthDataACType = {\r\n    type: typeof SET_IS_CORRECT_AUTH_DATA | string\r\n    payload : { value: boolean }\r\n}\r\n\r\nexport type LogoutOrDeleteUserACType = { type: typeof LOGOUT_OR_DELETE_USER | string }\r\n\r\nexport const setIsRegistrationAC = (value:boolean):SetIsRegistrationACType => ({ type: SET_IS_REGISTRATION, payload: {value} })\r\nexport const setIsCorrectAuthDataAC = (value:boolean):SetIsCorrectAuthDataACType => ({ type: SET_IS_CORRECT_AUTH_DATA, payload: {value} })\r\nexport const setIsAuthAC = (value:boolean): SetIsAuthACType => ({ type: SET_IS_AUTH, payload: {value} })\r\nexport const logoutOrDeleteUseAC = (): LogoutOrDeleteUserACType => ({ type: LOGOUT_OR_DELETE_USER })","import {LOCATION_CHANGE} from \"connected-react-router\";\r\nimport {PATH_SEARCH} from \"../../../app/App\";\r\nimport {initialStateCategory, initialStateSubway, RESET_TO_DEFAULT_STATE_ALL_REDUCERS} from \"../mainState/mainState\";\r\n\r\nexport const SET_SEARCHED_DATA = \"SET_SEARCHED_DATA\"\r\nexport const SET_IS_FETCHING_SEARCH_REDUCER = \"SET_IS_FETCHING_SEARCH_REDUCER\"\r\nexport const SET_CURRENT_PAGE_SEARCH_REDUCER = \"SET_CURRENT_PAGE_SEARCH_REDUCER\"\r\nexport const SET_TOTAL_NUM_OF_PAGE_SEARCH_REDUCER = \"SET_TOTAL_NUM_OF_PAGE_SEARCH_REDUCER\"\r\nexport const RESET_TO_INITIAL_SEARCH_REDUCER = \"RESET_TO_INITIAL_SEARCH_REDUCER\"\r\nexport const SET_SEARCH_CONFIG_CATEGORY_ID = \"SET_SEARCH_CONFIG_CATEGORY_ID\"\r\nexport const SET_SEARCH_CONFIG_SUBWAY_STATIONS = \"SET_SEARCH_CONFIG_SUBWAY_STATIONS\"\r\nexport const SET_SEARCH_CONFIG_SEARCH_VALUE = \"SET_SEARCH_CONFIG_SEARCH_VALUE\"\r\n\r\nexport type initialStateType = typeof initialState\r\n\r\n// @ts-ignore\r\nconst initialState = {\r\n    searchedData : [],\r\n    currentPage : 0,\r\n    totalNumOfPages: 1,\r\n    isFetching: false,\r\n    searchConfig : {\r\n        categoryId: initialStateCategory,\r\n        subwayStations: initialStateSubway,\r\n        searchValue: \"\"\r\n    }\r\n}\r\n\r\nexport const searchBoxStateReducer = (state = initialState, action: any): initialStateType => {\r\n    const { type, payload } = action\r\n    const { value, withConcat, location : {pathname = \"/\"} = {} } = payload || {}\r\n    const { searchedData, currentPage, searchConfig, isFetching } = state\r\n    const {searchConfig: initialStateSearchConfig} = initialState\r\n\r\n    switch (type) {\r\n        case LOCATION_CHANGE :\r\n            console.log(\"LOCATION_CHANGE\", payload)\r\n            return !pathname.includes(PATH_SEARCH) ?\r\n                {...state, searchConfig: initialStateSearchConfig} : state\r\n        case SET_SEARCHED_DATA :\r\n            console.log(\"SET_SEARCHED_DATA\", value)\r\n            const newSearchedData = withConcat ? searchedData.concat(value) : value\r\n            return {...state, searchedData: newSearchedData}\r\n        case SET_IS_FETCHING_SEARCH_REDUCER :\r\n            console.log(\"SET_IS_FETCHING_SEARCH_REDUCER\", value)\r\n            return {...state, isFetching: value}\r\n        case SET_CURRENT_PAGE_SEARCH_REDUCER :\r\n            const newCurrentPage = currentPage + 1\r\n            console.log(\"SET_CURRENT_PAGE_SEARCH_REDUCER\", newCurrentPage)\r\n            return {...state, currentPage: newCurrentPage}\r\n        case SET_TOTAL_NUM_OF_PAGE_SEARCH_REDUCER :\r\n            console.log(\"SET_TOTAL_NUM_OF_PAGE_SEARCH_REDUCER\", value)\r\n            return {...state, totalNumOfPages: value}\r\n        case RESET_TO_INITIAL_SEARCH_REDUCER :\r\n            console.log(\"RESET_TO_INITIAL_SEARCH_REDUCER\", value)\r\n            return {...initialState, isFetching, searchConfig: {...searchConfig}}\r\n        case SET_SEARCH_CONFIG_CATEGORY_ID :\r\n            console.log(\"SET_SEARCH_CONFIG_CATEGORY_ID\", value)\r\n            return {...state, searchConfig: {...searchConfig, categoryId: value}}\r\n        case SET_SEARCH_CONFIG_SUBWAY_STATIONS :\r\n            console.log(\"SET_SEARCH_CONFIG_SUBWAY_STATIONS\", value)\r\n            return {...state, searchConfig: {...searchConfig, subwayStations: value}}\r\n        case SET_SEARCH_CONFIG_SEARCH_VALUE :\r\n            console.log(\"SET_SEARCH_CONFIG_SEARCH_VALUE\", value)\r\n            return {...state, searchConfig: {...searchConfig, searchValue: value}}\r\n        case RESET_TO_DEFAULT_STATE_ALL_REDUCERS :\r\n            console.log(\"RESET_TO_DEFAULT_STATE_ALL_REDUCERS\", value)\r\n            return initialState\r\n        default: return state\r\n    }\r\n}","import {\r\n    SET_SEARCHED_DATA,\r\n    SET_IS_FETCHING_SEARCH_REDUCER,\r\n    SET_CURRENT_PAGE_SEARCH_REDUCER,\r\n    SET_TOTAL_NUM_OF_PAGE_SEARCH_REDUCER,\r\n    RESET_TO_INITIAL_SEARCH_REDUCER,\r\n    SET_SEARCH_CONFIG_CATEGORY_ID,\r\n    SET_SEARCH_CONFIG_SUBWAY_STATIONS, SET_SEARCH_CONFIG_SEARCH_VALUE,\r\n} from \"./searchBoxState\";\r\n\r\nexport const setSearchedDataAC = (value:Array<any>, withConcat:boolean):SetSearchedDataAType => ({ type: SET_SEARCHED_DATA, payload: {value, withConcat} })\r\nexport const setIsFetchingSearchReducerAC = (value:boolean):SetIsFetchingSearchReducerACType => ({ type: SET_IS_FETCHING_SEARCH_REDUCER, payload: {value} })\r\nexport const setCurrentPageSearchReducerAC = ():SetCurrentPageSearchReducerACType => ({ type: SET_CURRENT_PAGE_SEARCH_REDUCER })\r\nexport const setTotalNumOfPageSearchReducerAC = (value:number):SetTotalNumOfPageSearchReducerACType => ({ type: SET_TOTAL_NUM_OF_PAGE_SEARCH_REDUCER, payload: {value} })\r\nexport const resetToInitialStateSearchReducerAC = ():ResetToInitialStateSearchReducerACType => ({ type: RESET_TO_INITIAL_SEARCH_REDUCER })\r\nexport const setSearchConfigCategoryAC = (value:any):SetSearchConfigCategoryACType => ({ type: SET_SEARCH_CONFIG_CATEGORY_ID, payload: {value} })\r\nexport const setSearchConfigSubwayStationsAC = (value:string):SetSearchConfigSubwayStationsACType => ({ type: SET_SEARCH_CONFIG_SUBWAY_STATIONS, payload: {value} })\r\nexport const setSearchConfigSearchValueAC = (value:string):SetSearchConfigSearchValueACType => ({ type: SET_SEARCH_CONFIG_SEARCH_VALUE, payload: {value} })\r\n\r\n\r\n\r\nexport type SetSearchedDataAType = { type: typeof SET_SEARCHED_DATA, payload: { value: Array<any>, withConcat: boolean}}\r\nexport type SetIsFetchingSearchReducerACType = { type: typeof SET_IS_FETCHING_SEARCH_REDUCER, payload: { value: boolean }}\r\nexport type SetCurrentPageSearchReducerACType = { type: typeof SET_CURRENT_PAGE_SEARCH_REDUCER }\r\nexport type SetTotalNumOfPageSearchReducerACType = { type: typeof SET_TOTAL_NUM_OF_PAGE_SEARCH_REDUCER, payload: { value: number } }\r\nexport type ResetToInitialStateSearchReducerACType = { type: typeof RESET_TO_INITIAL_SEARCH_REDUCER }\r\nexport type SetSearchConfigCategoryACType = { type: typeof SET_SEARCH_CONFIG_CATEGORY_ID, payload: { value: any } }\r\nexport type SetSearchConfigSubwayStationsACType = { type: typeof SET_SEARCH_CONFIG_SUBWAY_STATIONS, payload: { value: string }}\r\nexport type SetSearchConfigSearchValueACType = { type: typeof SET_SEARCH_CONFIG_SEARCH_VALUE, payload: { value: string }}\r\n","import {RESET_TO_DEFAULT_STATE_ALL_REDUCERS} from \"../mainState/mainState\";\r\n\r\nexport const SET_IS_FETCHING_FEED_REDUCER = \"SET_IS_FETCHING_FEED_REDUCER\"\r\nexport const SET_LAST_ANNOUNCEMENTS = \"SET_LAST_ANNOUNCEMENTS\"\r\n\r\ntype initialStateType = typeof initialState\r\nconst initialState = {\r\n    lastAnnouncements: [],\r\n    isFetching: false,\r\n    descriptionSalamRu: \"\"\r\n}\r\n\r\nexport const feedStateReducer = (state = initialState, action: any): initialStateType => {\r\n    const {type, payload } = action\r\n    const { value, withConcat = false } = payload || {}\r\n    const {lastAnnouncements} = state\r\n\r\n    switch (type) {\r\n        case SET_LAST_ANNOUNCEMENTS :\r\n            console.log(\"SET_LAST_ANNOUNCEMENTS\", value)\r\n            const newLastAnnouncements = withConcat ? lastAnnouncements.concat(value) : value\r\n            return {...state, lastAnnouncements: newLastAnnouncements}\r\n        case SET_IS_FETCHING_FEED_REDUCER :\r\n            console.log(\"SET_IS_FETCHING_FEED_REDUCER\", value)\r\n            return {...state, isFetching: value}\r\n        case RESET_TO_DEFAULT_STATE_ALL_REDUCERS :\r\n            console.log(\"RESET_TO_DEFAULT_STATE_ALL_REDUCERS\", value)\r\n            return initialState\r\n        default: return state\r\n    }\r\n}","import { SET_LAST_ANNOUNCEMENTS, SET_IS_FETCHING_FEED_REDUCER } from \"./feedState\"\r\n\r\nexport type SetLastAnnouncementsACType = { type: typeof SET_LAST_ANNOUNCEMENTS, payload: { value: Array<any> , withConcat:boolean}}\r\nexport type SetetIsFetchingFeedReducerACType = { type: typeof SET_IS_FETCHING_FEED_REDUCER, payload: { value: boolean }}\r\n\r\nexport const setLastAnnouncementsAC = (value:Array<any>, withConcat:boolean):SetLastAnnouncementsACType => ({ type: SET_LAST_ANNOUNCEMENTS, payload: {value, withConcat} })\r\nexport const setIsFetchingFeedReducerAC = (value:boolean):SetetIsFetchingFeedReducerACType => ({ type: SET_IS_FETCHING_FEED_REDUCER, payload: {value} })","import {\r\n    getItemFromLocalStorage,\r\n    RESET_TO_DEFAULT_STATE_ALL_REDUCERS,\r\n    setItemToLocalStorage\r\n} from \"../mainState/mainState\";\r\nimport defaultAvatar from \"../../../pictures/defaultAvatar.jpg\"\r\nexport const SET_SETTINGS_IN_LOCAL_STORAGE_BY_FIELD = \"SET_SETTINGS_IN_LOCAL_STORAGE_BY_FIELD\"\r\nexport const SET_IS_FETCHING_SETTINGS_REDUCER = \"SET_IS_FETCHING_SETTINGS_REDUCER\"\r\n\r\ntype initialStateType = typeof initialState\r\nconst initialState = {\r\n    avatar: () => getItemFromLocalStorage(\"avatar\") || defaultAvatar,\r\n    name: () => getItemFromLocalStorage(\"name\") || \"\",\r\n    phone: () => getItemFromLocalStorage(\"phone\") || \"\",\r\n    login: () => getItemFromLocalStorage(\"login\") || \"\",\r\n    password: () => getItemFromLocalStorage(\"password\") || \"\",\r\n    isFetching: false\r\n}\r\n\r\nexport type SettingsFieldType = \"avatar\" | \"name\" | \"phone\" | \"login\" | \"currentPassword\" | \"password\" | string\r\n\r\nexport const settingsStateReducer = (state = initialState, action : any): initialStateType => {\r\n    const {type, payload } = action\r\n    const { value, field } = payload || {}\r\n\r\n    switch (type) {\r\n        case SET_SETTINGS_IN_LOCAL_STORAGE_BY_FIELD :\r\n            console.log(\"SET_SETTINGS_IN_LOCAL_STORAGE_BY_FIELD\", value)\r\n            setItemToLocalStorage(field, value)\r\n            return state\r\n        case SET_IS_FETCHING_SETTINGS_REDUCER :\r\n            console.log(\"SET_IS_FETCHING_SETTINGS_REDUCER\", value)\r\n            return {...state, isFetching: value}\r\n        case RESET_TO_DEFAULT_STATE_ALL_REDUCERS :\r\n            console.log(\"RESET_TO_DEFAULT_STATE_ALL_REDUCERS\", value)\r\n            return initialState\r\n        default: return state\r\n    }\r\n}","import {\r\n    SET_IS_FETCHING_SETTINGS_REDUCER,\r\n    SET_SETTINGS_IN_LOCAL_STORAGE_BY_FIELD,\r\n    SettingsFieldType\r\n} from \"./settingsState\";\r\n\r\nexport type SetSettingsInLocalStorageByFieldACType = {\r\n    type: typeof SET_SETTINGS_IN_LOCAL_STORAGE_BY_FIELD\r\n    payload : { value: any, field:  SettingsFieldType}\r\n}\r\n\r\nexport type SetIsFetchingSettingsReducerACType = {\r\n    type: typeof SET_IS_FETCHING_SETTINGS_REDUCER\r\n    payload : { value: boolean}\r\n}\r\nexport const setSettingsInLocalStorageByFieldAC = (value:any, field:SettingsFieldType):SetSettingsInLocalStorageByFieldACType =>\r\n    ({ type: SET_SETTINGS_IN_LOCAL_STORAGE_BY_FIELD, payload: {value, field} })\r\n\r\nexport const setIsFetchingSettingsReducerAC = (value:boolean):SetIsFetchingSettingsReducerACType =>\r\n    ({ type: SET_IS_FETCHING_SETTINGS_REDUCER, payload: {value} })\r\n","import {RESET_TO_DEFAULT_STATE_ALL_REDUCERS} from \"../mainState/mainState\";\r\n\r\nexport const SET_IS_FETCHING_ANNOUNCEMENT_REDUCER = \"SET_IS_FETCHING_ANNOUNCEMENT_REDUCER\"\r\nexport const SET_ANNOUNCEMENT = \"SET_ANNOUNCEMENT\"\r\n\r\ntype initialStateType = typeof initialState\r\nconst initialState = {\r\n    announcement: {},\r\n    isFetching: false,\r\n}\r\n\r\nexport const announcementStateReducer = (state = initialState, action: any): initialStateType => {\r\n    const {type, payload } = action\r\n    const { value } = payload || {}\r\n\r\n    switch (type) {\r\n        case SET_ANNOUNCEMENT :\r\n            console.log(\"SET_ANNOUNCEMENT\", value)\r\n            return {...state, announcement: value}\r\n        case SET_IS_FETCHING_ANNOUNCEMENT_REDUCER :\r\n            console.log(\"SET_IS_FETCHING_FEED_REDUCER\", value)\r\n            return {...state, isFetching: value}\r\n        case RESET_TO_DEFAULT_STATE_ALL_REDUCERS :\r\n            console.log(\"RESET_TO_DEFAULT_STATE_ALL_REDUCERS\", value)\r\n            return initialState\r\n        default: return state\r\n    }\r\n}","import { SET_ANNOUNCEMENT, SET_IS_FETCHING_ANNOUNCEMENT_REDUCER } from \"./announcementState\"\r\n\r\nexport type SetAnnouncementsACType = { type: typeof SET_ANNOUNCEMENT, payload: { value: boolean }}\r\nexport type SettIsFetchingAnnouncementReducerACType = { type: typeof SET_IS_FETCHING_ANNOUNCEMENT_REDUCER, payload: { value: boolean }}\r\n\r\nexport const setAnnouncementAC = (value:boolean):SetAnnouncementsACType => ({ type: SET_ANNOUNCEMENT, payload: {value} })\r\nexport const settIsFetchingAnnouncementReducerAC = (value:boolean):SettIsFetchingAnnouncementReducerACType => ({ type: SET_IS_FETCHING_ANNOUNCEMENT_REDUCER, payload: {value} })","import {SET_CURRENT_PAGE_SEARCH_REDUCER, SET_TOTAL_NUM_OF_PAGE_SEARCH_REDUCER} from \"../searchBoxState/searchBoxState\";\r\nimport {RESET_TO_DEFAULT_STATE_ALL_REDUCERS} from \"../mainState/mainState\";\r\n\r\nexport const SET_IS_FETCHING_MY_ANNOUNCEMENTS_REDUCER = \"SET_IS_FETCHING_MY_ANNOUNCEMENTS_REDUCER\"\r\nexport const DELETE_MY_ANNOUNCEMENT_BY_ID = \"DELETE_MY_ANNOUNCEMENT_BY_ID\"\r\nexport const SET_MY_ANNOUNCEMENTS = \"SET_MY_ANNOUNCEMENTS\"\r\nexport const SET_CURRENT_PAGE_MY_ANNOUNCEMENTS_REDUCER = \"SET_CURRENT_PAGE_MY_ANNOUNCEMENTS_REDUCER\"\r\nexport const SET_TOTAL_NUM_OF_PAGE_MY_ANNOUNCEMENTS_REDUCER = \"SET_TOTAL_NUM_OF_PAGE_MY_ANNOUNCEMENTS_REDUCER\"\r\n\r\ntype initialStateType = typeof initialState\r\nconst initialState = {\r\n    myAnnouncements: [],\r\n    currentPage: 0,\r\n    totalNumOfPages: 1,\r\n    isFetching: false\r\n}\r\n\r\nexport const myAnnouncementsStateReducer = (state = initialState, action: any): initialStateType => {\r\n    const {type, payload } = action\r\n    const { value, id, withConcat = false } = payload || {}\r\n    const { myAnnouncements, currentPage } = state\r\n\r\n    switch (type) {\r\n        case SET_MY_ANNOUNCEMENTS :\r\n            console.log(\"SET_MY_ANNOUNCEMENTS\", value)\r\n            const newMyAnnouncementsSet = withConcat ? myAnnouncements.concat(value) : value\r\n            return {...state, myAnnouncements: newMyAnnouncementsSet}\r\n        case DELETE_MY_ANNOUNCEMENT_BY_ID :\r\n            console.log(\"DELETE_MY_ANNOUNCEMENT_BY_ID\", id)\r\n            const newMyAnnouncementsDel = myAnnouncements.filter( ({id: myAnnouncementId}:any) => myAnnouncementId !== id )\r\n            return {...state, myAnnouncements: newMyAnnouncementsDel}\r\n        case SET_IS_FETCHING_MY_ANNOUNCEMENTS_REDUCER :\r\n            console.log(\"SET_IS_FETCHING_MY_ANNOUNCEMENTS_REDUCER\", value)\r\n            return {...state, isFetching: value}\r\n        case SET_CURRENT_PAGE_MY_ANNOUNCEMENTS_REDUCER :\r\n            const newCurrentPage = currentPage + 1\r\n            console.log(\"SET_CURRENT_PAGE_SEARCH_REDUCER\", newCurrentPage)\r\n            return {...state, currentPage: newCurrentPage}\r\n        case SET_TOTAL_NUM_OF_PAGE_MY_ANNOUNCEMENTS_REDUCER :\r\n            console.log(\"SET_TOTAL_NUM_OF_PAGE_SEARCH_REDUCER\", value)\r\n            return {...state, totalNumOfPages: value}\r\n        case RESET_TO_DEFAULT_STATE_ALL_REDUCERS :\r\n            console.log(\"RESET_TO_DEFAULT_STATE_ALL_REDUCERS\", value)\r\n            return initialState\r\n        default: return state\r\n    }\r\n}","import {\r\n    SET_MY_ANNOUNCEMENTS,\r\n    SET_IS_FETCHING_MY_ANNOUNCEMENTS_REDUCER,\r\n    SET_CURRENT_PAGE_MY_ANNOUNCEMENTS_REDUCER,\r\n    SET_TOTAL_NUM_OF_PAGE_MY_ANNOUNCEMENTS_REDUCER, DELETE_MY_ANNOUNCEMENT_BY_ID\r\n} from \"./myAnnouncementState\"\r\n\r\nexport type SetMyAnnouncementsACType =\r\n    { type: typeof SET_MY_ANNOUNCEMENTS, payload: { value: Array<any>, withConcat: boolean }}\r\n\r\nexport type SettIsFetchingMyAnnouncementReducerACType =\r\n    { type: typeof SET_IS_FETCHING_MY_ANNOUNCEMENTS_REDUCER, payload: { value: boolean }}\r\n\r\nexport type SetCurrentPageMyAnnouncementReducerACType = { type: typeof SET_CURRENT_PAGE_MY_ANNOUNCEMENTS_REDUCER }\r\nexport type DelMyAnnouncementByIdACType = { type: typeof DELETE_MY_ANNOUNCEMENT_BY_ID, payload: {id:number} }\r\nexport type SetTotalNumOfPageMyAnnouncementReducerACType = { type: typeof SET_TOTAL_NUM_OF_PAGE_MY_ANNOUNCEMENTS_REDUCER, payload: { value: number } }\r\n\r\n\r\nexport const setMyAnnouncementsAC = (value:Array<any>, withConcat: boolean):SetMyAnnouncementsACType =>\r\n    ({ type: SET_MY_ANNOUNCEMENTS, payload: {value, withConcat} })\r\n\r\nexport const delMyAnnouncementByIdAC = (id:number):DelMyAnnouncementByIdACType =>\r\n    ({ type: DELETE_MY_ANNOUNCEMENT_BY_ID, payload: {id} })\r\n\r\nexport const settIsFetchingMyAnnouncementsReducerAC = (value:boolean):SettIsFetchingMyAnnouncementReducerACType =>\r\n    ({ type: SET_IS_FETCHING_MY_ANNOUNCEMENTS_REDUCER, payload: {value} })\r\n\r\nexport const setCurrentPageMyAnnouncementReducerAC = ():SetCurrentPageMyAnnouncementReducerACType =>\r\n    ({ type: SET_CURRENT_PAGE_MY_ANNOUNCEMENTS_REDUCER })\r\n\r\nexport const setTotalNumOfPageMyAnnouncementReducerAC = (value:number):SetTotalNumOfPageMyAnnouncementReducerACType =>\r\n    ({ type: SET_TOTAL_NUM_OF_PAGE_MY_ANNOUNCEMENTS_REDUCER, payload: {value} })","import {RESET_TO_INITIAL_SEARCH_REDUCER} from \"../searchBoxState/searchBoxState\";\r\nimport {RESET_TO_DEFAULT_STATE_ALL_REDUCERS} from \"../mainState/mainState\";\r\n\r\nexport const SET_ANNOUNCEMENTS_LIST = \"SET_ANNOUNCEMENTS_LIST\"\r\nexport const SET_CURRENT_PAGE_ANNOUNCEMENTS_LIST_REDUCER = \"SET_CURRENT_PAGE_ANNOUNCEMENTS_LIST_REDUCER\"\r\nexport const SET_TOTAL_NUM_OF_PAGE_ANNOUNCEMENTS_LIST_REDUCER = \"SET_TOTAL_NUM_OF_PAGE_ANNOUNCEMENTS_LIST_REDUCER\"\r\nexport const RESET_TO_INITIAL_ANNOUNCEMENTS_LIST_REDUCER = \"RESET_TO_INITIAL_ANNOUNCEMENTS_LIST_REDUCER\"\r\n\r\ntype initialStateType = typeof initialState\r\n\r\nconst initialState = {\r\n    announcementsList: [],\r\n    currentPage: 0,\r\n    totalNumOfPages: 1\r\n}\r\n\r\nexport const announcementsListStateReducer = (state = initialState, action: any): initialStateType => {\r\n\r\n    const {type, payload } = action\r\n    const { value, id, withConcat = false } = payload || {}\r\n    const { announcementsList, currentPage } = state\r\n\r\n    switch (type) {\r\n        case SET_ANNOUNCEMENTS_LIST:\r\n            console.log(\"SET_ANNOUNCEMENTS_LIST\", value)\r\n            const newMyAnnouncementsSet = withConcat ? announcementsList.concat(value) : value\r\n            return {...state, announcementsList: newMyAnnouncementsSet}\r\n        case SET_CURRENT_PAGE_ANNOUNCEMENTS_LIST_REDUCER:\r\n            const newCurrentPage = currentPage + 1\r\n            console.log(\"SET_CURRENT_PAGE_ANNOUNCEMENTS_LIST_REDUCER\", newCurrentPage)\r\n            return {...state, currentPage: newCurrentPage}\r\n        case SET_TOTAL_NUM_OF_PAGE_ANNOUNCEMENTS_LIST_REDUCER :\r\n            console.log(\"SET_TOTAL_NUM_OF_PAGE_ANNOUNCEMENTS_LIST_REDUCER\", value)\r\n            return {...state, totalNumOfPages: value}\r\n        case RESET_TO_INITIAL_ANNOUNCEMENTS_LIST_REDUCER :\r\n            console.log(\"RESET_TO_INITIAL_ANNOUNCEMENTS_LIST_REDUCER\")\r\n            return initialState\r\n        case RESET_TO_DEFAULT_STATE_ALL_REDUCERS :\r\n            console.log(\"RESET_TO_DEFAULT_STATE_ALL_REDUCERS\", value)\r\n            return initialState\r\n        default: return state\r\n    }\r\n}","import {\r\n    RESET_TO_INITIAL_ANNOUNCEMENTS_LIST_REDUCER,\r\n    SET_ANNOUNCEMENTS_LIST,\r\n    SET_CURRENT_PAGE_ANNOUNCEMENTS_LIST_REDUCER,\r\n    SET_TOTAL_NUM_OF_PAGE_ANNOUNCEMENTS_LIST_REDUCER\r\n} from \"./announcementsListState\";\r\n\r\n\r\nexport type SetAnnouncementsListACType = { type: typeof SET_ANNOUNCEMENTS_LIST, payload: { value: Array<any>, withConcat: boolean }}\r\nexport type SetCurrentPageAnnouncementsListReducerACType = { type: typeof SET_CURRENT_PAGE_ANNOUNCEMENTS_LIST_REDUCER }\r\nexport type SetTotalNumOfPageAnnouncementsListReducerACType = { type: typeof SET_TOTAL_NUM_OF_PAGE_ANNOUNCEMENTS_LIST_REDUCER, payload: { value: number } }\r\nexport type ResetToInitialStateAnnouncementsListReducerACType = { type: typeof RESET_TO_INITIAL_ANNOUNCEMENTS_LIST_REDUCER }\r\n\r\nexport const setAnnouncementsListAC = (value:Array<any>, withConcat: boolean):SetAnnouncementsListACType =>\r\n    ({ type: SET_ANNOUNCEMENTS_LIST, payload: {value, withConcat} })\r\nexport const resetToInitialStateAnnouncementsListReducerAC = ():ResetToInitialStateAnnouncementsListReducerACType => ({ type: RESET_TO_INITIAL_ANNOUNCEMENTS_LIST_REDUCER })\r\nexport const setCurrentPageAnnouncementsListReducerAC = ():SetCurrentPageAnnouncementsListReducerACType =>\r\n    ({ type: SET_CURRENT_PAGE_ANNOUNCEMENTS_LIST_REDUCER })\r\n\r\nexport const setTotalNumOfPageAnnouncementsListReducerAC = (value:number):SetTotalNumOfPageAnnouncementsListReducerACType =>\r\n    ({ type: SET_TOTAL_NUM_OF_PAGE_ANNOUNCEMENTS_LIST_REDUCER, payload: {value} })","import {\r\n    RESET_TO_DEFAULT_STATE_ALL_REDUCERS,\r\n    SET_IS_EMPTY_RESPONSE_MAIN_STATE,\r\n    SET_IS_ERROR_FETCH_MAIN_STATE,\r\n    SET_IS_FETCHING_MAIN_STATE,\r\n    SET_SUBWAY_STATIONS_DATA\r\n} from \"./mainState\";\r\n\r\nexport type MainStateActionTypes  = SetIsFetchingMainStateACType & SetSubwayStationsDataACType\r\n\r\nexport type SetIsFetchingMainStateACType = { type: typeof SET_IS_FETCHING_MAIN_STATE, payload: { value: boolean }}\r\nexport type SetIsEmptyResponseMainStateACType = { type: typeof SET_IS_EMPTY_RESPONSE_MAIN_STATE, payload: { value: boolean }}\r\nexport type SetIsErrorFetchMainStateACType = { type: typeof SET_IS_ERROR_FETCH_MAIN_STATE, payload: { value: boolean }}\r\nexport type SetSubwayStationsDataACType = { type: typeof SET_SUBWAY_STATIONS_DATA, payload: { value: Array<any> }}\r\n\r\n\r\nexport const setIsFetchingMainStateAC = (value:boolean):SetIsFetchingMainStateACType => ({ type: SET_IS_FETCHING_MAIN_STATE, payload: {value} })\r\nexport const setIsEmptyResponseMainStateAC = (value:boolean):SetIsEmptyResponseMainStateACType => ({ type: SET_IS_EMPTY_RESPONSE_MAIN_STATE, payload: {value} })\r\nexport const resetToDefaultAllReducersAC = () => ({ type: RESET_TO_DEFAULT_STATE_ALL_REDUCERS })\r\nexport const setIsErrorFetchMainStateAC = (value:boolean):SetIsErrorFetchMainStateACType => ({ type: SET_IS_ERROR_FETCH_MAIN_STATE, payload: {value} })\r\nexport const setSubwayStationsDataAC = (value:Array<any>):SetSubwayStationsDataACType => ({ type: SET_SUBWAY_STATIONS_DATA, payload: {value} })","import {initialStateCategory, initialStateSubway, RESET_TO_DEFAULT_STATE_ALL_REDUCERS} from \"../mainState/mainState\"\r\n\r\nexport const SET_VALUE_BY_PAGE_AND_FIELD_FORM_REDUCER = \"SET_VALUE_BY_PAGE_AND_FIELD_FORM_REDUCER\"\r\nexport const RESET_TO_INITIAL_BY_PAGE_FORM_REDUCER = \"RESET_TO_INITIAL_BY_PAGE_FORM_REDUCER\"\r\nexport const SET_IS_VALID_BY_PAGE_AND_FIELD_FORM_REDUCER = \"SET_IS_VALID_BY_PAGE_AND_FIELD_FORM_REDUCER\"\r\nexport const CHECK_IS_READY_TO_SEND_BY_PAGE_FORM_REDUCER = \"CHECK_IS_READY_TO_SEND_BY_PAGE_FORM_REDUCER\"\r\nexport const SET_IS_READY_TO_SEND = \"SET_IS_READY_TO_SEND\"\r\n\r\nexport type FormReducerPagesType = \"authorization\" | \"registration\" | \"createAnnouncement\" | \"settings\"\r\nexport type FormReducerFieldsType = FormReducerAuthorizationFieldsType | FormReducerRegistrationFieldsType\r\nexport type FormReducerAuthorizationFieldsType = \"login\" | \"password\"\r\nexport type FormReducerRegistrationFieldsType = \"name\" | \"login\" | \"phoneNumber\" | \"password\"\r\n\r\n\r\nexport const defaultInitialStateForFormField = {value: \"\", isValid: true}\r\n\r\nconst initialState = {\r\n    authorization : {\r\n        login: defaultInitialStateForFormField,\r\n        password: defaultInitialStateForFormField,\r\n        isReadyToSend: false\r\n    },\r\n    registration : {\r\n        name: defaultInitialStateForFormField,\r\n        login: defaultInitialStateForFormField,\r\n        phoneNumber: defaultInitialStateForFormField,\r\n        password: defaultInitialStateForFormField,\r\n        isReadyToSend: false\r\n    },\r\n    createAnnouncement : {\r\n        photoList: {value: [], isValid: true},\r\n        name: defaultInitialStateForFormField,\r\n        price: defaultInitialStateForFormField,\r\n        categoryId: {value: initialStateCategory, isValid: true},\r\n        description: defaultInitialStateForFormField,\r\n        sellerPhone: defaultInitialStateForFormField,\r\n        stationId: {value: initialStateSubway, isValid: true},\r\n        isReadyToSend: false\r\n    },\r\n    settings : {\r\n        avatar: defaultInitialStateForFormField,\r\n        name: defaultInitialStateForFormField,\r\n        phone: defaultInitialStateForFormField,\r\n        login: defaultInitialStateForFormField,\r\n        isReadyToSend: false\r\n    }\r\n}\r\n\r\nconst checkIsValid = (field: string, value: any) => {\r\n    console.log(\"checkIsValid\", field, value)\r\n    switch (field) {\r\n        case \"name\" :\r\n            return !!value.length\r\n        case \"password\" :\r\n            return value.length <= 24 && value.length >= 3\r\n        case \"phoneNumber\" :\r\n            return !!value.length\r\n        case \"login\" :\r\n            return !!value.length\r\n        case \"stationId\":\r\n            return JSON.stringify(value) !== JSON.stringify(initialStateSubway)\r\n        case \"price\":\r\n            return !!value.length\r\n        case \"phone\":\r\n            return !!value.length\r\n        case \"categoryId\":\r\n            console.log(JSON.stringify(value), JSON.stringify(initialStateCategory))\r\n            return JSON.stringify(value) !== JSON.stringify(initialStateCategory)\r\n        case \"description\":\r\n            return !!value.length\r\n        default : return true\r\n    }\r\n}\r\n\r\nexport const prepareFormStateByPageForSend = ({isReadyToSend, ...restFormState}: any) => {\r\n    const stateEntries = Object.entries(restFormState)\r\n    const defaultCondition = (postData: any, key: any, value: any) => {\r\n        postData[key] = value\r\n        return postData\r\n    }\r\n    return (condition: Function = defaultCondition) => stateEntries.reduce( (postData: any, [key, {value}]: any) => {\r\n        return condition(postData, key, value)\r\n    }, {})\r\n}\r\n\r\nconst formStateReducer = (state = initialState, action: any) => {\r\n    const {type, payload} = action\r\n    const {field = \"\", value = \"\", page = \"\" } = payload || {}\r\n    // @ts-ignore\r\n    const stateByPage = state[page] || {}\r\n    const stateByField = stateByPage[field]\r\n\r\n    switch (type) {\r\n        case SET_VALUE_BY_PAGE_AND_FIELD_FORM_REDUCER :\r\n            console.log(\"SET_VALUE_BY_PAGE_AND_FIELD_FORM_REDUCER\", page, value)\r\n            return {...state, [page] : {...stateByPage, [field] : {...stateByField, value, isValid: true}} }\r\n        case SET_IS_VALID_BY_PAGE_AND_FIELD_FORM_REDUCER :\r\n            const isValid = checkIsValid(field, stateByField.value)\r\n            console.log(\"SET_IS_VALID_BY_PAGE_AND_FIELD_FORM_REDUCER\", field, page)\r\n            return {...state, [page] : {...stateByPage, [field] : {...stateByField, isValid, isReadyToSend:false}} }\r\n        case SET_IS_READY_TO_SEND :\r\n            console.log(\"SET_IS_READY_TO_SEND\", page, value)\r\n            return {...state, [page] : {...stateByPage, isReadyToSend:value} }\r\n        case CHECK_IS_READY_TO_SEND_BY_PAGE_FORM_REDUCER :\r\n            console.log(\"SET_IS_VALID_BY_PAGE_AND_FIELD_FORM_REDUCER\", page)\r\n            const stateKeys = Object.keys(stateByPage)\r\n            const newState = stateKeys.reduce( (newState: any, field: any) => {\r\n                const {value} = stateByPage[field]\r\n                const isValid = checkIsValid(field, value)\r\n                if(!isValid) {\r\n                    console.log(\"ISVALID FALSE\")\r\n                    newState.isReadyToSend = false\r\n                    newState[field].isValid = false\r\n                }\r\n                return newState\r\n            }, {...stateByPage, isReadyToSend: true} )\r\n            return {...state, [page] : newState }\r\n        case RESET_TO_INITIAL_BY_PAGE_FORM_REDUCER :\r\n            // @ts-ignore\r\n            return {...state, [page] : initialState[page] }\r\n        case RESET_TO_DEFAULT_STATE_ALL_REDUCERS :\r\n            console.log(\"RESET_TO_DEFAULT_STATE_ALL_REDUCERS\", value)\r\n            return initialState\r\n        default: return state\r\n    }\r\n}\r\n\r\nexport default formStateReducer","import {\r\n    FormReducerFieldsType,\r\n    SET_VALUE_BY_PAGE_AND_FIELD_FORM_REDUCER,\r\n    SET_IS_VALID_BY_PAGE_AND_FIELD_FORM_REDUCER,\r\n    CHECK_IS_READY_TO_SEND_BY_PAGE_FORM_REDUCER,\r\n    RESET_TO_INITIAL_BY_PAGE_FORM_REDUCER,\r\n    FormReducerPagesType,\r\n    SET_IS_READY_TO_SEND,\r\n\r\n} from \"./formState\"\r\nimport {SET_LAST_ANNOUNCEMENTS} from \"../feedState/feedState\";\r\n\r\nexport type ResetToInitialByPageFormReducerACType = { type: typeof RESET_TO_INITIAL_BY_PAGE_FORM_REDUCER, payload: { page: FormReducerPagesType }}\r\n\r\n\r\nexport const seValueFormReducerAC = ( value: string | number, field: FormReducerFieldsType, page: FormReducerPagesType,) =>\r\n    ({ type: SET_VALUE_BY_PAGE_AND_FIELD_FORM_REDUCER, payload: {value, field, page} })\r\n\r\nexport const setIsValidFormReducerAC = (field: FormReducerFieldsType, page: FormReducerPagesType ) =>\r\n    ({ type: SET_IS_VALID_BY_PAGE_AND_FIELD_FORM_REDUCER, payload: {field, page} })\r\n\r\nexport const setIsReadyToSendFormReducerAC = (value: boolean, page: FormReducerPagesType ) =>\r\n    ({ type: SET_IS_READY_TO_SEND, payload: {value, page} })\r\n\r\nexport const checkIsReadyToSendByPageFormReducerAC = (page: FormReducerPagesType ) =>\r\n    ({ type: CHECK_IS_READY_TO_SEND_BY_PAGE_FORM_REDUCER, payload: {page} })\r\n\r\nexport const resetToInitialByPageFormReducerAC = (page: FormReducerPagesType): ResetToInitialByPageFormReducerACType =>\r\n    ({ type: RESET_TO_INITIAL_BY_PAGE_FORM_REDUCER, payload: {page} })\r\n","import {AuthorizationData, NewAnnouncementData, RegistrationData} from \"../../api/testAPI\";\r\nimport {Dispatch} from \"redux\";\r\nimport {AppStateType} from \"../store\";\r\nimport {\r\n    logoutOrDeleteUseAC,\r\n    LogoutOrDeleteUserACType,\r\n    setIsAuthAC,\r\n    SetIsAuthACType,\r\n    setIsCorrectAuthDataAC,\r\n} from \"../reducers/authorizationState/authorizationStateActionCreators\";\r\nimport {CallHistoryMethodAction, push} from \"connected-react-router\";\r\nimport {\r\n    setIsFetchingSearchReducerAC,\r\n    SetIsFetchingSearchReducerACType,\r\n    setSearchedDataAC,\r\n    SetSearchedDataAType,\r\n    setTotalNumOfPageSearchReducerAC,\r\n    SetTotalNumOfPageSearchReducerACType\r\n} from \"../reducers/searchBoxState/searchBoxStateActionCreators\";\r\nimport {\r\n    SetetIsFetchingFeedReducerACType,\r\n    setIsFetchingFeedReducerAC,\r\n    setLastAnnouncementsAC,\r\n    SetLastAnnouncementsACType\r\n} from \"../reducers/feedState/feedStateActionCreators\";\r\nimport {SettingsFieldType} from \"../reducers/settingsState/settingsState\";\r\nimport {\r\n    setSettingsInLocalStorageByFieldAC,\r\n    SetSettingsInLocalStorageByFieldACType\r\n} from \"../reducers/settingsState/settingsStateActionCreators\";\r\nimport {\r\n    setAnnouncementAC,\r\n    SetAnnouncementsACType,\r\n    settIsFetchingAnnouncementReducerAC,\r\n    SettIsFetchingAnnouncementReducerACType\r\n} from \"../reducers/announcementState/announcementStateActionCreators\";\r\nimport {\r\n    delMyAnnouncementByIdAC,\r\n    DelMyAnnouncementByIdACType,\r\n    setMyAnnouncementsAC,\r\n    SetMyAnnouncementsACType,\r\n    SettIsFetchingMyAnnouncementReducerACType,\r\n    settIsFetchingMyAnnouncementsReducerAC,\r\n    setTotalNumOfPageMyAnnouncementReducerAC,\r\n    SetTotalNumOfPageMyAnnouncementReducerACType\r\n} from \"../reducers/myAnnouncementState/myAnnouncementStateActionCreators\";\r\nimport {PATH_FEED, PATH_MY_ANNOUNCEMENTS} from \"../../app/App\";\r\nimport {\r\n    setAnnouncementsListAC,\r\n    SetAnnouncementsListACType,\r\n    SetCurrentPageAnnouncementsListReducerACType,\r\n    setTotalNumOfPageAnnouncementsListReducerAC,\r\n    SetTotalNumOfPageAnnouncementsListReducerACType\r\n} from \"../reducers/announcementsListState/announcementsListStateActionCreators\";\r\nimport {\r\n    setIsFetchingMainStateAC,\r\n    SetIsFetchingMainStateACType,\r\n    setSubwayStationsDataAC,\r\n    SetSubwayStationsDataACType,\r\n    SetIsEmptyResponseMainStateACType,\r\n    setIsEmptyResponseMainStateAC,\r\n    setIsErrorFetchMainStateAC,\r\n    SetIsErrorFetchMainStateACType, resetToDefaultAllReducersAC\r\n} from \"../reducers/mainState/mainStateActionCreators\";\r\nimport {\r\n    resetToInitialByPageFormReducerAC,\r\n    ResetToInitialByPageFormReducerACType, setIsReadyToSendFormReducerAC\r\n} from \"../reducers/formState/formStateActionCreators\";\r\nimport defaultAvatar from \"../../pictures/defaultAvatar.jpg\"\r\n\r\ntype GetStateType = () => AppStateType\r\n\r\n\r\n//--------------------AUTHORIZATION---------------------//\r\ntype SendAuthDispatchType = Dispatch<SetIsErrorFetchMainStateACType | SetIsAuthACType | SetIsFetchingMainStateACType | any | SetSettingsInLocalStorageByFieldACType | CallHistoryMethodAction | ResetToInitialByPageFormReducerACType>\r\nexport const sendAuthorizationOrRegistrationThunk = (data: AuthorizationData & RegistrationData) => (dispatch: SendAuthDispatchType, getState: any) => {\r\n    const {authorizationState: {isRegistration}, mainState : {apiService}} = getState()\r\n    dispatch(setIsFetchingMainStateAC(true))\r\n    dispatch(setIsErrorFetchMainStateAC(false))\r\n    console.log(\"sendAuthorizationOrRegistrationThunk\", data)\r\n\r\n    const getRequestMethod = () => isRegistration ? \"postRegistrationData\" : \"postAuthorizationData\"\r\n    const getPageForFormReducer = () => isRegistration ? \"registration\" : \"authorization\"\r\n    apiService[getRequestMethod()](data)\r\n        .then((response:any) => {\r\n            if (!response.ok) throw response.status\r\n            return response.json()\r\n        })\r\n        .then(({result = true}: any) => {\r\n            dispatch(setIsFetchingMainStateAC(false))\r\n            if (result) {\r\n                dispatch(getUserInfoThunk())\r\n                dispatch(setSettingsInLocalStorageByFieldAC(data.login,\"login\"))\r\n                dispatch(setSettingsInLocalStorageByFieldAC(data.password,\"password\"))\r\n                dispatch(setIsAuthAC(true))\r\n            }\r\n        })\r\n        .catch((status: any) => {\r\n            console.log(status)\r\n            status == \"401\" ?\r\n                dispatch(setIsCorrectAuthDataAC(false)) :\r\n                dispatch(setIsErrorFetchMainStateAC(true))\r\n            dispatch(setIsFetchingMainStateAC(false))\r\n            dispatch(setIsReadyToSendFormReducerAC(false, getPageForFormReducer()))\r\n\r\n            console.error(status)\r\n        })\r\n}\r\n\r\n//--------------------SEARCH-BOX---------------------//\r\ntype GetSubwayStationsDispatchType = Dispatch<SetIsErrorFetchMainStateACType | SetSubwayStationsDataACType>\r\nexport const getSubwayStationsThunk = () => (dispatch: GetSubwayStationsDispatchType, getState: any) => {\r\n    console.log(\"getSubwayStationsThunk\")\r\n\r\n    const {mainState: {apiService}} = getState()\r\n\r\n    apiService[\"getSubwayStations\"]()\r\n        .then((response:any) => {\r\n            if (!response.ok)\r\n                throw `CANNOT FETCH GET REQUEST ${response.status}`\r\n            return response.json()\r\n        })\r\n        .then((data: any) => {\r\n            dispatch(setSubwayStationsDataAC(data))\r\n        })\r\n        .catch((err: any) => {\r\n            // dispatch(setIsErrorFetchMainStateAC(true))\r\n            console.error(err)\r\n        })\r\n}\r\n\r\ntype GetAnnouncementsByFiltersDispatchType = Dispatch<SetIsErrorFetchMainStateACType | SetIsEmptyResponseMainStateACType | SetSearchedDataAType | SetTotalNumOfPageSearchReducerACType | SetIsFetchingSearchReducerACType>\r\nexport const getAnnouncementsByFiltersThunk = (withConcat: boolean = false) => (dispatch: GetAnnouncementsByFiltersDispatchType, getState: any) => {\r\n    dispatch(setIsFetchingSearchReducerAC(true))\r\n    dispatch(setIsErrorFetchMainStateAC(false))\r\n    dispatch(setIsEmptyResponseMainStateAC(false))\r\n    console.log(\"getAnnouncementsByFiltersThunk\")\r\n\r\n    const {\r\n        searchBoxState : {\r\n            currentPage,\r\n            searchConfig: {categoryId: {category}, subwayStations: {id:stationId}, searchValue}\r\n        },\r\n        mainState : {apiService} } = getState()\r\n\r\n    apiService[\"getAnnouncementsByFilters\"](currentPage, searchValue, category, stationId)\r\n        .then((response:any) => {\r\n            if(!response.ok) throw response.status\r\n            dispatch(setIsEmptyResponseMainStateAC(response.status === 404))\r\n            if (!response.ok)\r\n                throw `CANNOT FETCH GET REQUEST ${response.status}`\r\n            return response.json()\r\n        })\r\n        .then(({pages, announcements}: any) => {\r\n            dispatch(setTotalNumOfPageSearchReducerAC(pages - 1))\r\n            dispatch(setSearchedDataAC(announcements, withConcat))\r\n            dispatch(setIsFetchingSearchReducerAC(false))\r\n        })\r\n        .catch((status: any) => {\r\n            status === 404 ?\r\n                dispatch(setIsEmptyResponseMainStateAC(true)) :\r\n                dispatch(setIsErrorFetchMainStateAC(true))\r\n            dispatch(setIsFetchingSearchReducerAC(false))\r\n            console.error(status)\r\n        })\r\n}\r\n\r\n//--------------------FEED-PAGE--------------------//\r\ntype getLastAnnouncementsDispatchType = Dispatch<SetIsErrorFetchMainStateACType | SetIsEmptyResponseMainStateACType | SetIsFetchingMainStateACType | SetLastAnnouncementsACType>\r\nexport const getLastAnnouncementsThunk = (page: number, withConcat = false) => (dispatch: getLastAnnouncementsDispatchType, getState: any) => {\r\n    dispatch(setIsFetchingMainStateAC(true))\r\n    dispatch(setIsErrorFetchMainStateAC(false))\r\n    dispatch(setIsEmptyResponseMainStateAC(false))\r\n    console.log(\"getLastAnnouncementsThunk\")\r\n\r\n    const {mainState: {apiService}} = getState()\r\n\r\n    apiService[\"getAnnouncementsByFilters\"](page, \"\", \"\", \"\")\r\n        .then((response:any) => {\r\n            if(!response.ok) throw response.status\r\n            return response.json()\r\n        })\r\n        .then(({announcements}: any)  => {\r\n            dispatch(setLastAnnouncementsAC(announcements, withConcat))\r\n            dispatch(setIsFetchingMainStateAC(false))\r\n        })\r\n        .catch((status: any) => {\r\n            status === 404 ?\r\n                dispatch(setIsEmptyResponseMainStateAC(true)) :\r\n                dispatch(setIsErrorFetchMainStateAC(true))\r\n            dispatch(setIsFetchingMainStateAC(false))\r\n            console.error(status)\r\n        })\r\n}\r\n//--------------------SETTINGS-PAGE--------------------//\r\ntype PostSettingByFieldDispatchType = Dispatch<SetIsErrorFetchMainStateACType | SetSettingsInLocalStorageByFieldACType>\r\nexport const postSettingByFieldThunk = (data: any, field: SettingsFieldType) => (dispatch: PostSettingByFieldDispatchType, getState: any) => {\r\n    dispatch(setIsErrorFetchMainStateAC(false))\r\n\r\n    console.log(\"postSettingByFieldThunk\")\r\n    const [value] = Object.values(data)\r\n\r\n    const {mainState: {apiService}} = getState()\r\n\r\n    apiService[\"postSettingsByField\"](data, field)\r\n        .then((response:any) => {\r\n            if (!response.ok)\r\n                throw `CANNOT FETCH POST REQUEST ${response.status}`\r\n            return response.json()\r\n        })\r\n        .then(({result = false}: any) => {\r\n            result && dispatch(setSettingsInLocalStorageByFieldAC(value, field))\r\n        })\r\n        .catch((err: any) => {\r\n            dispatch(setIsErrorFetchMainStateAC(true))\r\n            console.error(err)\r\n        })\r\n}\r\n\r\ntype PostLogoutOrDeleteUserType = Dispatch<SetIsErrorFetchMainStateACType | LogoutOrDeleteUserACType | CallHistoryMethodAction>\r\ntype LogoutOrDeleteType = \"logout\" | \"delete\"\r\nexport const postLogoutOrDeleteUser = (logoutOrDelete: LogoutOrDeleteType) => (dispatch: PostLogoutOrDeleteUserType, getState:any) => {\r\n    console.log(\"postLogoutOrDeleteUser\")\r\n    dispatch(setIsErrorFetchMainStateAC(false))\r\n\r\n    const {mainState: {apiService}} = getState()\r\n\r\n    const getRequestByLogoutOrDelete = () => {\r\n        if (logoutOrDelete === \"logout\") return \"postLogout\"\r\n        if (logoutOrDelete === \"delete\") return \"postDelete\"\r\n        return \"postLogout\"\r\n    }\r\n\r\n    apiService[getRequestByLogoutOrDelete()]()\r\n        .then((response:any) => {\r\n            if (!response.ok)\r\n                throw `CANNOT FETCH POST REQUEST ${response.status}`\r\n            return response.json()\r\n        })\r\n        .then(({result = false}: any) => {\r\n            if (result) {\r\n                dispatch(logoutOrDeleteUseAC())\r\n                dispatch(resetToDefaultAllReducersAC())\r\n                dispatch(push(PATH_FEED))\r\n            }\r\n        })\r\n        .catch((err: any) => {\r\n            dispatch(setIsErrorFetchMainStateAC(true))\r\n            console.error(err)\r\n        })\r\n}\r\n\r\n//--------------------ANNOUNCEMENT-PAGE--------------------//\r\ntype GetAnnouncementByIdDispatchType = Dispatch<SetIsErrorFetchMainStateACType | SetIsEmptyResponseMainStateACType | SettIsFetchingAnnouncementReducerACType | SetAnnouncementsACType>\r\nexport const getAnnouncementByIdThunk = (category: string, id: number) => (dispatch: GetAnnouncementByIdDispatchType, getState: any) => {\r\n    dispatch(settIsFetchingAnnouncementReducerAC(true))\r\n    dispatch(setIsErrorFetchMainStateAC(false))\r\n    console.log(\"getAnnouncementByIdThunk\")\r\n\r\n    const {mainState: {apiService}} = getState()\r\n\r\n    apiService[\"getAnnouncementByIdThunk\"](category, id)\r\n        .then((response:any) => {\r\n            if(!response.ok) throw response.status\r\n            return response.json()\r\n        })\r\n        .then((data: any) => {\r\n            dispatch(setAnnouncementAC(data))\r\n            dispatch(settIsFetchingAnnouncementReducerAC(false))\r\n        })\r\n        .catch((status: any) => {\r\n            status === 404 ?\r\n                dispatch(setIsEmptyResponseMainStateAC(true)) :\r\n                dispatch(setIsErrorFetchMainStateAC(true))\r\n            dispatch(settIsFetchingAnnouncementReducerAC(false))\r\n            console.error(status)\r\n        })\r\n}\r\n\r\n//--------------------MY-ANNOUNCEMENT-PAGE--------------------//\r\ntype GetMyAnnouncementsDispatchType = Dispatch<SetIsErrorFetchMainStateACType | SetMyAnnouncementsACType | SetIsEmptyResponseMainStateACType | SetIsFetchingMainStateACType | SetTotalNumOfPageMyAnnouncementReducerACType>\r\nexport const getMyAnnouncementsThunk = (withConcat = false) => (dispatch: GetMyAnnouncementsDispatchType, getState: any) => {\r\n    dispatch(setIsFetchingMainStateAC(true))\r\n    dispatch(setIsErrorFetchMainStateAC(false))\r\n    dispatch(setIsEmptyResponseMainStateAC(false))\r\n    console.log(\"getMyAnnouncementsThunk\")\r\n\r\n    const {myAnnouncementsState: {currentPage}, mainState : {apiService}} = getState()\r\n\r\n    apiService[\"getMyAnnouncements\"](currentPage)\r\n        .then((response:any) => {\r\n            if (!response.ok) throw response.status\r\n            return response.json()\r\n        })\r\n        .then(({pages, announcements}: any) => {\r\n            dispatch(setTotalNumOfPageMyAnnouncementReducerAC(pages - 1))\r\n            dispatch(setMyAnnouncementsAC(announcements, withConcat))\r\n            dispatch(setIsFetchingMainStateAC(false))\r\n        })\r\n        .catch((status: any) => {\r\n            status === 404 ?\r\n                dispatch(setIsEmptyResponseMainStateAC(true)) :\r\n                dispatch(setIsErrorFetchMainStateAC(true))\r\n\r\n            dispatch(setIsFetchingMainStateAC(false))\r\n\r\n            console.error(status)\r\n        })\r\n}\r\n\r\ntype PostDeleteAnnouncementDispatchType = Dispatch<SetIsErrorFetchMainStateACType | SettIsFetchingMyAnnouncementReducerACType | DelMyAnnouncementByIdACType>\r\nexport const postDeleteAnnouncementThunk = (id: number) => (dispatch: PostDeleteAnnouncementDispatchType, getState: any) => {\r\n    dispatch(settIsFetchingMyAnnouncementsReducerAC(true))\r\n    dispatch(setIsErrorFetchMainStateAC(false))\r\n    console.log(\"postDeleteAnnouncementThunk\")\r\n\r\n    const {mainState: {apiService}} = getState()\r\n\r\n    apiService[\"postDeleteAnnouncement\"](id)\r\n        .then((response:any) => {\r\n            if (!response.ok)\r\n                throw `CANNOT FETCH POST REQUEST ${response.status}`\r\n            return response.json()\r\n        })\r\n        .then(({result = false}: any) => {\r\n            result && dispatch(delMyAnnouncementByIdAC(id))\r\n            dispatch(settIsFetchingMyAnnouncementsReducerAC(false))\r\n        })\r\n        .catch((err: any) => {\r\n            dispatch(settIsFetchingMyAnnouncementsReducerAC(false))\r\n            dispatch(setIsErrorFetchMainStateAC(true))\r\n            console.error(err)\r\n        })\r\n}\r\n\r\n//--------------------CREATE-ANNOUNCEMENT--------------------//\r\ntype PostNewAnnouncementDispatchType = Dispatch<SetIsErrorFetchMainStateACType | SetIsFetchingMainStateACType | CallHistoryMethodAction>\r\nexport const postNewAnnouncementThunk = (data: NewAnnouncementData) => (dispatch: PostNewAnnouncementDispatchType, getState:any) => {\r\n    dispatch(setIsFetchingMainStateAC(true))\r\n    dispatch(setIsErrorFetchMainStateAC(false))\r\n    console.log(\"postNewAnnouncement\")\r\n\r\n    const {mainState: {apiService}} = getState()\r\n\r\n    apiService[\"postNewAnnouncement\"](data)\r\n        .then((response:any) => {\r\n            if (!response.ok) throw `CANNOT FETCH POST REQUEST ${response.status}`\r\n            else {\r\n                dispatch(setIsFetchingMainStateAC(false))\r\n                dispatch(push(PATH_MY_ANNOUNCEMENTS))\r\n            }\r\n        })\r\n        .catch((err: any) => {\r\n            dispatch(setIsFetchingMainStateAC(false))\r\n            dispatch(setIsErrorFetchMainStateAC(true))\r\n            console.error(err)\r\n        })\r\n}\r\n\r\n//--------------------ANNOUNCEMENTS-LIST-PAGE--------------------//\r\ntype GetAnnouncementsListDispatchType = Dispatch<SetIsErrorFetchMainStateACType | SetIsEmptyResponseMainStateACType | SetTotalNumOfPageAnnouncementsListReducerACType | SetIsFetchingMainStateACType | SetAnnouncementsListACType | SetCurrentPageAnnouncementsListReducerACType>\r\nexport const getAnnouncementsListThunk = (category: string, withConcat = false) => (dispatch: GetAnnouncementsListDispatchType, getState: any) => {\r\n    dispatch(setIsFetchingMainStateAC(true))\r\n    dispatch(setIsErrorFetchMainStateAC(false))\r\n    console.log(\"getAnnouncementsListThunk\")\r\n\r\n    const {announcementsListState: {currentPage}, mainState : {apiService}} = getState()\r\n\r\n    apiService[\"getAnnouncementsByFilters\"](currentPage, \"\", \"\", \"\")\r\n        .then((response:any) => {\r\n            dispatch(setIsEmptyResponseMainStateAC(response.status === 404))\r\n            if (!response.ok)\r\n                throw `CANNOT FETCH GET REQUEST ${response.status}`\r\n            return response.json()\r\n        })\r\n        .then(({pages, announcements}: any) => {\r\n            dispatch(setTotalNumOfPageAnnouncementsListReducerAC(pages - 1))\r\n            dispatch(setAnnouncementsListAC(announcements, withConcat))\r\n            dispatch(setIsFetchingMainStateAC(false))\r\n        })\r\n        .catch((err: any) => {\r\n            dispatch(setIsFetchingMainStateAC(false))\r\n            dispatch(setIsErrorFetchMainStateAC(true))\r\n            console.error(err)\r\n        })\r\n}\r\n//--------------------GET-USER-INFO--------------------//\r\ntype GetUserInfoDispatchType = Dispatch<SetIsErrorFetchMainStateACType | SetSettingsInLocalStorageByFieldACType>\r\ntype GetUserInfoThunkType = typeof getUserInfoThunk\r\nexport const getUserInfoThunk = () => (dispatch:GetUserInfoDispatchType, getState:any) => {\r\n    console.log(\"getUserInfoThunk\")\r\n\r\n    const {mainState: {apiService}} = getState()\r\n\r\n    apiService.getUserInfo()\r\n        .then((response:any) => {\r\n            if (!response.ok)\r\n                throw `CANNOT FETCH GET REQUEST ${response.status}`\r\n            return response.json()\r\n        })\r\n        .then( ({avatar = defaultAvatar, ...restUserData}: any) => {\r\n            console.log(\"RESPONSE\", restUserData)\r\n            dispatch(setSettingsInLocalStorageByFieldAC(avatar, \"avatar\"))\r\n            const userDataEntries = Object.entries(restUserData)\r\n            userDataEntries.forEach( ([field, value]) => {\r\n                console.log(field, value)\r\n                dispatch(setSettingsInLocalStorageByFieldAC(value, field))\r\n            })\r\n        })\r\n}","\r\nexport const getIsRegistrationSelector = (state: any) => state.authorizationState.isRegistration\r\nexport const getIsAuthSelector = (state: any) => state.authorizationState.isAuth()\r\nexport const getIsCorrectAuthDataSelector = (state: any) => state.authorizationState.isCorrectAuthData","\r\nexport const getIsFetchingMainStateSelector = (state: any) => state.mainState.isFetching\r\nexport const getIsEmptyResponseMainStateSelector = (state: any) => state.mainState.isEmptyResponse\r\nexport const getIsErrorFetchMainStateSelector = (state: any) => state.mainState.isErrorFetch\r\nexport const getSubwayStationsDataSelector = (state: any) => state.mainState.subwayStationsData\r\nexport const getCategoriesDataSelector = (state: any) => state.mainState.categoriesData\r\n\r\nexport const getTheSubCategoriesSelector = (categoriesData: Array<any>, activeClassName?: string) => {\r\n    //Проверка содержит ли объект с категорией подкатегории\r\n    const isIncludesSubCategory = (categoryData: Object) => \"subCategories\" in categoryData\r\n    //Возвращает подготовленный объект категории\r\n    const prepareCategoryToPush = (categoryData: any) => {\r\n        const {id, name, category} = categoryData\r\n        const baseCategory = {id, name, category}\r\n        return isIncludesSubCategory(categoryData) ?\r\n            {...baseCategory, className: activeClassName} : baseCategory\r\n    }\r\n    //В процессе итерации достаём подкатегории из объекта категории\r\n    return categoriesData.reduce( (newCategoriesData: any, category: any) => {\r\n        const {subCategories} = category\r\n        newCategoriesData.push(prepareCategoryToPush(category))\r\n        isIncludesSubCategory(category) && newCategoriesData.push(...subCategories)\r\n        return newCategoriesData\r\n    }, [] )\r\n}","import React from 'react';\r\nimport \"./buttonStyles.css\"\r\n\r\ntype ButtonPropsType = {\r\n    onClickHandler?: ((event: React.MouseEvent<HTMLDivElement, MouseEvent>) => void)\r\n    label: any\r\n    isDisabled?: boolean\r\n    className?: string\r\n}\r\n\r\nconst Button = (props: ButtonPropsType) => {\r\n\r\n    const {className, isDisabled = false, label, onClickHandler} = props\r\n\r\n  return isDisabled ?\r\n       <div className={`btn ${className} font-weight-bold`}>Отправка...</div> :\r\n      <div onClick={onClickHandler} className={`btn ${className} font-weight-bold`}>{label}</div>\r\n\r\n}\r\n\r\nexport default Button;\r\n","import { FormReducerFieldsType, FormReducerPagesType } from \"./formState\"\r\n\r\nexport const getFieldsByPageFormReducerSelector = (state: any, page: FormReducerPagesType) => state.formState[page]\r\n// export const getIsValidByFieldFormReducerSelector = (state: any, field: FormReducerFieldsType) => state.formState[field].isValid\r\n","import React from 'react';\n\ntype AlertEmptyResponsePropsType = {\n  alertText?: string\n  className?: string\n}\n\nconst AlertErrorFetching: React.FC<AlertEmptyResponsePropsType> = (props) => {\n  const {className, alertText = \"При отправке запроса возникла ошибка, попробуйте еще раз!!\"} = props\n\n  return (\n          <div className={`alert alert-danger text-center ${className}`}>\n            {alertText}\n          </div>\n  )\n}\n\nexport default AlertErrorFetching;","import React, {ChangeEvent, useCallback, useEffect} from 'react';\nimport \"./authorizationPopupBoxStyles.css\"\nimport TextInput from \"../../textInput/textInput\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {sendAuthorizationOrRegistrationThunk} from \"../../../redux/thunks/thunks\";\nimport {\n    setIsCorrectAuthDataAC,\n    setIsRegistrationAC,\n} from \"../../../redux/reducers/authorizationState/authorizationStateActionCreators\";\nimport {\n    getIsCorrectAuthDataSelector,\n    getIsRegistrationSelector\n} from \"../../../redux/reducers/authorizationState/authorizationStateSelectors\";\nimport {\n    getIsErrorFetchMainStateSelector,\n    getIsFetchingMainStateSelector\n} from \"../../../redux/reducers/mainState/mainStateSelectors\";\nimport Button from \"../../button/button\";\nimport {\n    checkIsReadyToSendByPageFormReducerAC, resetToInitialByPageFormReducerAC,\n    setIsValidFormReducerAC,\n    seValueFormReducerAC\n} from \"../../../redux/reducers/formState/formStateActionCreators\";\nimport {getFieldsByPageFormReducerSelector} from \"../../../redux/reducers/formState/formStateSelectors\";\nimport {prepareFormStateByPageForSend} from \"../../../redux/reducers/formState/formState\";\nimport AlertErrorFetching from \"../../alertErrorFetching/alertErrorFetching\";\n\n\ntype fieldTypes = \"password\" | \"login\" | \"name\" | string\n\ntype PropsType = {\n    closeModalWindow?: Function\n}\n\nconst AuthorizationPopupBox = (props: PropsType) => {\n\n    //------MAP-STATE-TO-PROPS-----//\n    const isRegistration = useSelector(getIsRegistrationSelector)\n    const isErrorFetchMainState = useSelector(getIsErrorFetchMainStateSelector)\n    const isCorrectAuthData = useSelector(getIsCorrectAuthDataSelector)\n    const isFetching = useSelector(getIsFetchingMainStateSelector)\n    const authFormState: any = useSelector((state) => getFieldsByPageFormReducerSelector(state, \"authorization\"))\n    const regFormState: any = useSelector((state) => getFieldsByPageFormReducerSelector(state, \"registration\"))\n    const currentFormState = (isRegistration ? regFormState : authFormState) || {}\n    const currentPage = isRegistration ? \"registration\" : \"authorization\"\n    const {isReadyToSend} = currentFormState\n\n    //-----MAP-DISPATCH-TO-PROPS----//\n    const dispatch = useDispatch()\n    const sendAuthorizationOrRegistration = useCallback((data) => dispatch(sendAuthorizationOrRegistrationThunk(data)), [dispatch])\n    const setIsRegistration = useCallback((boolean) => dispatch(setIsRegistrationAC(boolean)), [dispatch])\n    const seValueFormReducer = useCallback((value, field) => dispatch(seValueFormReducerAC(value, field, currentPage)), [dispatch, isRegistration])\n    const setIsCorrectAuthData = useCallback(() => dispatch(setIsCorrectAuthDataAC(true)), [dispatch])\n    const setIsValidFormReducer = useCallback((field) => dispatch(setIsValidFormReducerAC(field, currentPage)), [dispatch, isRegistration])\n    const resetToInitialByPageFormReducer = useCallback((page) => dispatch(resetToInitialByPageFormReducerAC(page)), [dispatch, isRegistration])\n    const checkIsReadyToSend = useCallback(() => dispatch(checkIsReadyToSendByPageFormReducerAC(currentPage)), [dispatch, isRegistration])\n\n    //------WILL-UNMOUNT-LIFE-CYCLE-----//\n    useEffect(() => {\n        return () => {\n            resetToInitialByPageFormReducer(\"authorization\")\n            resetToInitialByPageFormReducer(\"registration\")\n        }\n    }, [])\n\n    //------DID-UPDATE-LIFE-CYCLE-----//\n    useEffect(() => {\n        if(isReadyToSend) {\n            const postData = prepareFormStateByPageForSend(currentFormState)()\n            sendAuthorizationOrRegistration(postData)\n        }\n    }, [isReadyToSend])\n\n    //Функция - обработчик события изменеия в инпуте. Проверка на валидность значения в инпуте.\n    const onChangeHandler = (event: React.ChangeEvent<HTMLInputElement>, field: fieldTypes) => {\n        const {currentTarget: {value}} = event\n        console.log(\"onChangeHandler\", field, value)\n        seValueFormReducer(value, field)\n        !isCorrectAuthData && setIsCorrectAuthData()\n    }\n\n    //Функция возращает массив с конфигурацией для полей ввода\n    const getInputsConfig = () => {\n        const {name = {}, login = {}, password = {}, phoneNumber = {}} = currentFormState\n        return [\n            {\n                field: \"name\",\n                label: \"Имя\",\n                inputType: \"text\",\n                placeholder: \"Введите ваше имя\",\n                value: name.value,\n                isValid: name.isValid\n            },\n            {\n                field: \"phoneNumber\",\n                label: \"Номер телефона\",\n                inputType: \"number\",\n                placeholder: \"Введите ваш телефон\",\n                value: phoneNumber.value,\n                isValid: phoneNumber.isValid\n            },\n            {\n                field: \"login\",\n                label: \"E-mail\",\n                inputType: \"text\",\n                placeholder: \"Введите ваш E-mail\",\n                value: login.value,\n                isValid: login.isValid\n            },\n            {\n                field: \"password\",\n                label: \"Пароль\",\n                inputType: \"password\",\n                placeholder: \"Введите ваш пароль\",\n                value: password.value,\n                isValid: password.isValid\n            },\n        ]\n    }\n\n    //Функция возращает кнопку для отображения в зависимости от условия\n    const getBtnByIsExistUserForSwitch = () => {\n        return <span onClick={() => setIsRegistration(!isRegistration)} className={\"authorization-popupBox__reg-btn\"}>\n            {isRegistration ? \"Войти\" : \"Зарегестрироваться\" }\n        </span>\n    }\n\n    return (\n        <div className=\"authorization-popupBox position-relative\">\n            <h1 className={\"authorization-popupBox__title\"}>{!isRegistration ? \"Вход\" : \"Регистрация\"}</h1>\n            {isErrorFetchMainState && <AlertErrorFetching className={\"p-1 pr-0\"} alertText={\"Возникла ошибка!\"}/>}\n            {!isCorrectAuthData && !isRegistration && <AlertErrorFetching className={\"p-1 pr-0\"} alertText={\"Введённые данные не верны!\"}/>}\n            <hr className={\"my-3\"}/>\n            <div className=\"authorization-popupBox__inputs-wrapper mb-2\">\n                { getInputsConfig().map( ({field, inputType, placeholder, value, label, isValid}) => {\n                    if(!isRegistration && field == \"name\") return null\n                    if(!isRegistration && field == \"phoneNumber\") return null\n                    return <TextInput className={\"mb-4\"} key={field} label={label}\n                                      isValid={isValid} placeholder={placeholder}\n                                      inputType={inputType} value={value}\n                                      onBlurHandler={() => setIsValidFormReducer(field)}\n                                      onChangeHandler={(event: ChangeEvent<HTMLInputElement>) => onChangeHandler(event, field)}/>\n                }) }\n            </div>\n            <Button onClickHandler={checkIsReadyToSend} label={!isRegistration ? \"Войти\" : \"Зарегестрироваться\"}\n                    isDisabled={isFetching} className={\"authorization-popupBox__btn btn-success\"}/>\n            {getBtnByIsExistUserForSwitch()}\n        </div>\n    );\n}\n\nexport default AuthorizationPopupBox;\n","import React from 'react';\nimport ModalWindow from \"../modalWindow\";\nimport AuthorizationPopupBox from \"./authorizationPopupBox\";\nimport Button from \"../../button/button\";\n\ntype AuthorizationModalWindowType = {\n  isActiveFromProps?: boolean\n  alertCloseHandler?:Function\n}\nconst AuthorizationModalWindow = (props: AuthorizationModalWindowType) => {\n\n  const {isActiveFromProps = false, alertCloseHandler} = props\n\n  return (\n      <ModalWindow alertCloseHandler={alertCloseHandler} isActiveFromProps={isActiveFromProps} withOpenBtn={true} modal={<AuthorizationPopupBox/>}>{\n          (openModalWindow:any) =>\n              <Button label=\"Вход и регистрация\" onClickHandler={openModalWindow} className=\"btn-outline-light align-items-end mr-md-3 mb-3 mb-md-0\"/>\n      }</ModalWindow>\n  );\n}\n\nexport default AuthorizationModalWindow;\n","import React from 'react';\nimport \"./alertPopupBoxStyles.css\"\nimport Button from \"../../button/button\";\n\nexport type AlertPopupBoxType = {\n    closeModalWindow?: (boolean:boolean | any) => void\n    btnOneConfiguration : {\n        btnOneClassName? : string\n        btnOneLabel : string\n    }\n    btnTwoConfiguration : {\n        btnTwoHandler?: Function\n        btnTwoLabel : string\n        btnTwoClassName? : string\n    }\n    className?:string\n    alertText: string\n}\n\nconst AlertPopupBox = (props: AlertPopupBoxType) => {\n\n    const {\n        closeModalWindow = () => null,\n        alertText,\n        btnOneConfiguration : {btnOneLabel},\n        btnTwoConfiguration : {btnTwoHandler = () => null, btnTwoLabel}\n    } = props\n\n    const onClickBtnTwoHandler = () => {\n        btnTwoHandler()\n        closeModalWindow(false)\n    }\n\n    return (\n        <div className=\"alertPopupBox\">\n            <h3 className={\"alertPopupBox__title\"}>{alertText}</h3>\n            <hr className={\"my-4\"}/>\n            <div className=\"d-lg-flex justify-content-between\">\n                <Button className={\"btn-success col-lg-5\"} onClickHandler={closeModalWindow} label={btnOneLabel}/>\n                <Button className={\"btn-danger my-4 my-lg-0 col-lg-5\"} onClickHandler={onClickBtnTwoHandler} label={btnTwoLabel}/>\n            </div>\n        </div>\n    );\n}\n\nexport default AlertPopupBox;\n","import React from 'react';\nimport ModalWindow from \"../modalWindow\";\nimport AlertPopupBox from \"./alertPopupBox\";\n\nexport type AlertModalType = {\n  btnOneConfiguration : {\n    btnOneHandler?: Function\n    btnOneClassName? : string\n    btnOneLabel : string\n  }\n  btnTwoConfiguration : {\n    btnTwoHandler?: Function\n    btnTwoLabel : string\n    btnTwoClassName? : string\n  }\n  className?:string\n  alertText: string\n  openBtnElement?: any\n  isActiveFromProps?: boolean\n}\n\nconst AlertModalWindow = (props: AlertModalType) => {\n  const {openBtnElement, btnOneConfiguration: {btnOneHandler}, isActiveFromProps} = props\n  return (\n      <ModalWindow isActiveFromProps={isActiveFromProps} alertCloseHandler={btnOneHandler} withOpenBtn={true} modal={<AlertPopupBox {...props}/>}>{ (openModalWindow:any) =>\n          openBtnElement && React.cloneElement(openBtnElement, {onClickHandler: openModalWindow})\n      }</ModalWindow>\n  );\n}\n\nexport default AlertModalWindow;\n","\r\nexport const getSettingsFieldValueByFieldSelector = (state: any, field: string) => state.settingsState[field]()","import React, {useCallback} from 'react';\nimport Button from \"../button/button\";\nimport {GET_PATH_SEARCH} from \"../../app/App\";\nimport { NavLink } from 'react-router-dom';\nimport {useDispatch} from \"react-redux\";\nimport {setSearchConfigCategoryAC} from \"../../redux/reducers/searchBoxState/searchBoxStateActionCreators\";\n\ntype navCategoryButtonPropsType = {\n    category: string\n    activeClassName?: string\n    configCategory: any\n    children: any\n    key?: any\n    className?: string\n}\n\nconst CategoryNavigationButton = (props: navCategoryButtonPropsType) => {\n\n    //-----MAP-DISPATCH-TO-PROPS----//\n    const dispatch = useDispatch()\n    const setSearchConfigCategory = useCallback((category) => dispatch(setSearchConfigCategoryAC(category)), [dispatch])\n\n    const {activeClassName = \"active\", key, category, configCategory, className, children} = props\n\n    return <NavLink className={className} key={key} onClick={() => setSearchConfigCategory(configCategory)} to={GET_PATH_SEARCH(category)} activeClassName={activeClassName}>\n        {children}\n    </NavLink>\n\n}\n\nexport default CategoryNavigationButton;\n","import React from 'react';\r\nimport \"./navBarStyles.css\"\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {PATH_CONTACTS} from \"../../app/App\";\r\nimport CategoryNavigationButton from \"../categoryNavButton/categoryNavigationButton\";\r\nimport {initialStateCategory} from \"../../redux/reducers/mainState/mainState\";\r\nimport Button from \"../button/button\";\r\n\r\ntype NavBarPropsType = {\r\n    className?: string\r\n}\r\n\r\nconst NavBar = (props: NavBarPropsType) => {\r\n\r\n    const linkConfigs = [\r\n        {path: PATH_CONTACTS, label: \"Контакты\"},\r\n        {path: PATH_CONTACTS, label: \"Реклама\"},\r\n        {path: PATH_CONTACTS, label: \"Поддержка\"}\r\n    ]\r\n\r\n\r\n    const {className} = props\r\n\r\n  return (\r\n      <div className={`navbar-nav my-4 my-md-0 d-flex col-lg-7 col-md-7  justify-content-md-center flex-fill flex-md-row p-0 ${className}`}>\r\n          <CategoryNavigationButton className={\"nav-link p-md-0\"} category={\"all\"} configCategory={initialStateCategory}>\r\n              <Button className={\"btn-light w-100\"} label={\"Объявления\"}/>\r\n          </CategoryNavigationButton>\r\n          {linkConfigs.map( ({path, label}) =>\r\n              <NavLink className=\"nav-link ml-md-2 p-md-0 \" to={path}>\r\n                  <Button className={\"btn-light w-100\"} label={label}/>\r\n              </NavLink> )}\r\n      </div>\r\n  )\r\n}\r\n\r\nexport default NavBar;\r\n","import React, {useCallback, useRef, useState} from 'react';\r\nimport \"./headerStyles.css\"\r\nimport {Link, NavLink} from 'react-router-dom';\r\nimport Logo from \"../logo/logo\";\r\nimport AuthorizationModalWindow from \"../modalWindow/authorizationModalWindow/authorizationModalWindow\";\r\nimport {linkToCreateAnnouncement, PATH_CREATE_ANNOUNCEMENT, PATH_MY_ANNOUNCEMENTS, PATH_SETTINGS} from \"../../app/App\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {getIsAuthSelector,} from \"../../redux/reducers/authorizationState/authorizationStateSelectors\";\r\nimport AlertModalWindow from \"../modalWindow/alertModalWindow/alertModalWindow\";\r\nimport Button from \"../button/button\";\r\nimport {postLogoutOrDeleteUser} from \"../../redux/thunks/thunks\";\r\nimport useOutsideClick from \"../../hooks/useOutsideClick\";\r\nimport {getSettingsFieldValueByFieldSelector} from \"../../redux/reducers/settingsState/settingsStateSelectors\";\r\nimport {\r\n    getCategoriesDataSelector,\r\n    getTheSubCategoriesSelector\r\n} from \"../../redux/reducers/mainState/mainStateSelectors\";\r\nimport CategoryNavigationButton from \"../categoryNavButton/categoryNavigationButton\";\r\nimport NavBar from \"../navBar/navBar\";\r\n\r\nconst Header = (props: any) => {\r\n\r\n    //------USE-REF-----//\r\n    const ref = useRef(null)\r\n\r\n    //------MAP-STATE-TO-PROPS-----//\r\n    const isAuth = useSelector(getIsAuthSelector)\r\n    const name = useSelector((state) => getSettingsFieldValueByFieldSelector(state, \"name\"))\r\n\r\n    //-----MAP-DISPATCH-TO-PROPS----//\r\n    const dispatch = useDispatch()\r\n    const logoutUser = useCallback(() => dispatch(postLogoutOrDeleteUser(\"logout\")), [dispatch])\r\n\r\n    //------LOCAL-STATE-----//\r\n    const [isActiveAuthModal, setIsActiveAuthModal] = useState(false)\r\n    const [isActiveMobileMenu, setIsActiveMobileMenu] = useState(false)\r\n    const [isActiveAuthMenu, setIsActiveAuthMenu] = useState(false)\r\n    const [isActiveLogoutAlert, setIsActiveLogoutAlert] = useState(false)\r\n\r\n    const outsideClickHandler = () => {\r\n        isActiveAuthMenu && toggleIsActiveAuthMenu()\r\n    }\r\n\r\n    useOutsideClick(ref, outsideClickHandler)\r\n\r\n    const toggleIsActiveAuthMenu = () => {\r\n        console.log(\"toggleIsActiveAuthMenu\")\r\n        setIsActiveAuthMenu(prevState => !prevState)\r\n    }\r\n\r\n    // const linkConfigs = [\r\n    //     {path: PATH_HOUSING, label: \"Недвижимость\"},\r\n    //     {path: PATH_JOB, label: \"Работа\"}\r\n    // ]\r\n\r\n    const alertCreateAnnouncement = useCallback(() =>\r\n        <AlertModalWindow openBtnElement={<Button className={\"btn-outline-light my-sm-2\"} label={\"Разместить объявление\"}/>}\r\n                          btnOneConfiguration={{btnOneLabel: \"Позже\", btnOneHandler:() => setIsActiveAuthModal(false) }}\r\n                          btnTwoConfiguration={{btnTwoLabel: \"Авторизироваться\", btnTwoHandler:() => setIsActiveAuthModal(true) }}\r\n                          alertText={\"Для размещения объявления, необходимо авторизироваться!\"}/>, [])\r\n\r\n    const alertLogout = useCallback(() =>\r\n        <AlertModalWindow isActiveFromProps={true} alertText={\"Выйти из аккаунта?\"}\r\n                          btnOneConfiguration={{btnOneLabel: \"Нет\", btnOneHandler:() => setIsActiveLogoutAlert(false)}}\r\n                          btnTwoConfiguration={{btnTwoLabel: \"Да\", btnTwoHandler:logoutUser }}/>, [])\r\n\r\n    const authMenu = <>\r\n        <div ref={ref} onClick={toggleIsActiveAuthMenu} className=\"dropdown header__authMenu mr-md-4\">\r\n            <Button className={\"btn-warning dropdown-toggle w-100\"} label={name}/>\r\n            <div className={`header__authMenu-menu dropdown-menu ${isActiveAuthMenu && \"header__show\"}`}>\r\n                <Link to={PATH_MY_ANNOUNCEMENTS} className=\"dropdown-item\">\r\n                    Мои объявления\r\n                </Link>\r\n                <Link to={PATH_SETTINGS} className=\"dropdown-item\">\r\n                    Настройки\r\n                </Link>\r\n                <div className=\"dropdown-divider\"/>\r\n                <div onClick={() => setIsActiveLogoutAlert(true)} className=\"dropdown-item\">Выход</div>\r\n            </div>\r\n        </div>\r\n    </>\r\n\r\n    return (\r\n        <div className=\"navbar justify-content-center navbar-dark d-flex flex-column flex-lg-row align-items-center bg-info pl-5 pr-5\">\r\n            <div className={\"d-flex col-sm-12 justify-content-between justify-content-md-center col-md-1 mb-md-3 mb-lg-0 align-items-center \"}>\r\n                <Logo/>\r\n                <span onClick={() => setIsActiveMobileMenu(prevState => !prevState)}\r\n                      className=\"navbar-toggler-icon mobile border rounded border-color-dark p-3\"/>\r\n            </div>\r\n            <div className={`header__menu p-0 flex-md-fill flex-md-column flex-lg-row justify-content-center justify-content-lg-between align-items-center flex-wrap flex-lg-nowrap d-flex ${isActiveMobileMenu && \"header__show\"}`}>\r\n                <NavBar className={\"mb-md-3 mb-lg-0\"}/>\r\n            <div className=\"d-flex align-items-md-center flex-column flex-md-row flex-grow-1 flex-md-grow-0 justifu-content-center\">\r\n                {isAuth ? authMenu : <AuthorizationModalWindow alertCloseHandler={() => setIsActiveAuthModal(false)} isActiveFromProps={isActiveAuthModal}/>}\r\n                {isAuth ? linkToCreateAnnouncement(\"\") : alertCreateAnnouncement()}\r\n            </div>\r\n            </div>\r\n            {isActiveLogoutAlert && alertLogout()}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\nimport \"./selectItem.css\"\n\ntype PropsType = {\n    name?: string\n    isActive: any\n    onChangeHandler: any\n    className?: string\n}\n\nconst SelectItem = (props: PropsType) => {\n\n    const {name = \"\", isActive, onChangeHandler, className} = props\n\n    return (\n        <div onClick={onChangeHandler} className={`selectItem dropdown-item p-3 border-bottom ${className} ${isActive && \"active\"}`}>\n            {name}\n            {/*<input checked={isActive} type=\"radio\" className=\"selectItem__checkBox\"/>*/}\n        </div>\n    );\n}\n\nexport default SelectItem;\n","import React, {useRef, useState} from 'react';\nimport \"./selectStyles.css\"\nimport SelectItem from \"./selectItem/selectItem\";\nimport useOutsideClick from \"../../../hooks/useOutsideClick\";\n\nconst Select = (props: any) => {\n    const {\n        selectItems = [],\n        placeHolder,\n        onChangeHandler,\n        onBlurHandler = null,\n        onChangeHandlerSelectItem,\n        value,\n        className\n    } = props\n\n    const [isActive, setIsActive] = useState(false)\n    const ref = useRef(null)\n    const outsideClickHandler = () => isActive && setIsActive(false)\n    useOutsideClick(ref, outsideClickHandler)\n\n    const toggleIsActive: (boolean?: any) => void = (boolean:any = null) => {\n        console.log(\"toggleIsActive\", boolean)\n        setIsActive(prevIsActive => boolean !== null ? boolean : !prevIsActive)\n    }\n\n    return (\n        <div ref={ref} className={`select dropdown ${className} p-0`}>\n                <input onClick={() => toggleIsActive()} onBlur={onBlurHandler} readOnly={true} onChange={onChangeHandler}\n                       placeholder={placeHolder}\n                       className={\"select__current form-control dropdown-toggle w-100\"}\n                       value={value} type=\"text\"/>\n                {/*<div className={\"select__current-arrow\"}>&darr;</div>*/}\n            <div className={`select__items dropdown-menu w-100 ${isActive && \"show\"}`}>\n                {selectItems.map((selectItem: any) =>\n                    <SelectItem {...selectItem} isActive={selectItem[\"name\"] === value}  onChangeHandler={(event:any) => onChangeHandlerSelectItem(selectItem, toggleIsActive)}/>)}\n            </div>\n        </div>\n    );\n}\n\nexport default Select;\n","export const getSearchedDataSelector = (state: any) => state.searchBoxState.searchedData\r\nexport const getSearchConfigCategorySelector = (state: any) => state.searchBoxState.searchConfig.categoryId\r\nexport const getSearchConfigSubwayStationsSelector = (state: any) => state.searchBoxState.searchConfig.subwayStations\r\nexport const getSearchConfigSearchValueSelector = (state: any) => state.searchBoxState.searchConfig.searchValue\r\nexport const getIsFetchingSearchReducerSelector = (state: any) => state.searchBoxState.isFetching\r\nexport const getCurrentPageSearchReducerSelector = (state: any) => state.searchBoxState.currentPage\r\nexport const getTotalNumOfPageSearchReducerSelector = (state: any) => state.searchBoxState.totalNumOfPages","import React, {useCallback, useState} from 'react';\nimport \"./searchBoxStyles.css\";\nimport Select from \"./select/select\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {getAnnouncementsByFiltersThunk} from \"../../redux/thunks/thunks\";\nimport Button from \"../button/button\";\nimport {\n    getCategoriesDataSelector,\n    getSubwayStationsDataSelector, getTheSubCategoriesSelector\n} from \"../../redux/reducers/mainState/mainStateSelectors\";\nimport {\n    getIsFetchingSearchReducerSelector,\n    getSearchConfigCategorySelector,\n    getSearchConfigSearchValueSelector,\n    getSearchConfigSubwayStationsSelector\n} from \"../../redux/reducers/searchBoxState/searchBoxStateSelectors\";\nimport {useHistory} from 'react-router-dom';\nimport {\n    resetToInitialStateSearchReducerAC,\n    setSearchConfigCategoryAC,\n    setSearchConfigSearchValueAC,\n    setSearchConfigSubwayStationsAC\n} from '../../redux/reducers/searchBoxState/searchBoxStateActionCreators';\nimport {GET_PATH_SEARCH} from \"../../app/App\";\n\nconst SearchBox = (props: any) => {\n\n    const {placeHolder, className} = props\n\n    //------USE-HISTORY-----//\n    const {location : {pathname}, push} = useHistory()\n\n    //------MAP-STATE-TO-PROPS-----//\n    const subwayStationsData = useSelector(getSubwayStationsDataSelector)\n    const categoriesData = useSelector( (state) =>\n        getTheSubCategoriesSelector(getCategoriesDataSelector(state), \"bg-warning font-weight-bold text-center\"))\n    const isFetching = useSelector(getIsFetchingSearchReducerSelector)\n    const searchConfigCategory = useSelector(getSearchConfigCategorySelector)\n    const searchConfigSubwayStation = useSelector(getSearchConfigSubwayStationsSelector)\n    const searchConfigSearchValue = useSelector(getSearchConfigSearchValueSelector)\n\n    //-----MAP-DISPATCH-TO-PROPS----//\n    const dispatch = useDispatch()\n    const getAnnouncementsByFilters = useCallback(() => dispatch(getAnnouncementsByFiltersThunk()), [dispatch])\n    const resetToInitialStateSearchReducer = useCallback(() => dispatch(resetToInitialStateSearchReducerAC()), [dispatch])\n    const setSearchConfigCategory = useCallback((category) => dispatch(setSearchConfigCategoryAC(category)), [dispatch])\n    const setSearchConfigSubwayStation = useCallback((station) => dispatch(setSearchConfigSubwayStationsAC(station)), [dispatch])\n    const setSearchConfigSearchValue = useCallback((value) => dispatch(setSearchConfigSearchValueAC(value)), [dispatch])\n\n    //-----LOCAL-STATE-----//\n    const [searchValue, setSearchValue] = useState(searchConfigSearchValue)\n\n\n    const selectItemOnChangeHandler = (field: \"category\" | \"subway\", selectItem: any, setIsActiveSelect:Function) => {\n        field === \"category\" && setSearchConfigCategory(selectItem)\n        field === \"subway\" && setSearchConfigSubwayStation(selectItem)\n        setIsActiveSelect(false)\n    }\n\n    const searchOnChangeHandler = (event?: any) => {\n        const { target : {value = \"\"} = {} } = event || {}\n        setSearchValue(value)\n    }\n\n    const onClickFindBtnHandler = () => {\n        getAnnouncementsByFilters()\n        resetToInitialStateSearchReducer()\n        const newPathname = GET_PATH_SEARCH(searchConfigCategory.category)\n        pathname !== newPathname && push(newPathname)\n    }\n\n  return (\n      <>\n          <div className={`searchBox rounded bg-info p-0 mx-auto d-flex col-lg-10 input-group justify-content-center ${className}`}>\n              <Select className={\"col-lg-3 p-2 input-group-prepend\"} onChangeHandlerSelectItem={(selectItem: any, handler: any) => selectItemOnChangeHandler(\"subway\", selectItem, handler)} value={searchConfigSubwayStation.name} selectItems={subwayStationsData}/>\n              <div className=\"searchBox__search col-lg-4 p-2 d-flex\">\n                  <input onBlur={({target: {value}}) => setSearchConfigSearchValue(value)} onChange={searchOnChangeHandler}\n                         className={\"searchBox__search-input w-100 form-control pr-5\"}\n                         value={searchValue} type=\"text\"\n                         placeholder={placeHolder}/>\n                  <div onClick={() => setSearchValue(\"\")} className={\"searchBox__search-clear\"}>&#10006;</div>\n              </div>\n              <Select className={\"col-lg-3 p-2 input-group-append\"} onChangeHandlerSelectItem={(selectItem: any, handler: any) => selectItemOnChangeHandler(\"category\", selectItem, handler)} value={searchConfigCategory.name} selectItems={categoriesData}/>\n              <div className=\"input-group-append p-2 col-md-6 col-lg-2\">\n                  <Button className={\"btn-warning w-100\"} onClickHandler={onClickFindBtnHandler} label={\"Найти\"} isDisabled={isFetching}/>\n              </div>\n          </div>\n          <hr className={\"my-4\"}/>\n    </>\n  );\n}\n\nexport default SearchBox;\n","export const getLastAnnouncementsSelector = (state: any) => state.feedState.lastAnnouncements\r\nexport const getIsFetchingFeedReducerSelector = (state: any) => state.feedState.isFetching\r\nexport const getDescriptionSalamRuSelector = (state: any) => state.feedState.descriptionSalamRu\r\n","import React from 'react';\nimport \"./imageStyles.css\"\n\ntype ImagePropsType = {\n    photo: string\n    className?: string\n    onClickHandler?: any\n    styles?: any\n}\n\nconst Image = (props: ImagePropsType) => {\n\n    const {photo, className, onClickHandler = null, styles={}} = props\n\n  return <div onClick={onClickHandler} style={{backgroundImage: `url(${photo})`, ...styles}} className={`image ${className}`}/>\n}\n\nexport default Image;\n","import React from 'react';\nimport \"./announcementStyles.css\"\nimport {NavLink} from \"react-router-dom\";\nimport Image from \"../image/image\";\nimport {GET_PATH_SEARCH} from \"../../app/App\";\n\ntype AnnouncementPropsType = {\n    photo: string\n    id: number\n    name: string\n    category: string\n    price: number\n    creationDate: string\n    subwayStation: string\n    hasLike: boolean\n    className?: string\n}\n\nconst Announcement = (props: AnnouncementPropsType) => {\n\n    const {photo, name, creationDate, category, className, price, subwayStation, id} = props\n\n\n  return (\n      <div className={`border text-center d-flex flex-column flex-md-row text-white border-dark mb-3 mr-3 p-0 ${className}`}>\n              <NavLink className={\"col-lg-4 col-md-5 col-sm-12 p-0 card-header\"} to={`${GET_PATH_SEARCH(category)}/${id}`}>\n          {/*<div className=\"card-header p-0\">*/}\n                  <Image photo={photo}/>\n          {/*</div>*/}\n              </NavLink>\n              <div className={\"card-inner-wrapper d-flex flex-column justify-content-between\"}>\n                  <div className=\"card-body d-flex flex-column justify-content-between\">\n                      <h5 className=\"card-title text-primary\">{name}</h5>\n                      <h6 className=\"card-text text-dark\">{`Цена: ${price} руб.`}</h6>\n                      <h6 className=\"card-text text-dark\">{`Метро: ${subwayStation}`}</h6>\n                  </div>\n                  <div className=\"card-footer\">\n                      <small className=\"text-muted\">{`Дата создания: ${creationDate}`}</small>\n                  </div>\n              </div>\n      </div>\n  )\n}\n\nexport default Announcement;\n","import React from 'react';\nimport \"./footerStyles.css\"\nimport {NavLink} from 'react-router-dom';\nimport Logo from \"../logo/logo\";\nimport {linkToCreateAnnouncement, PATH_CONTACTS, PATH_CREATE_ANNOUNCEMENT} from \"../../app/App\";\nimport NavBar from \"../navBar/navBar\";\n\nconst Footer = (props: any) => {\n\n    // const linkConfigs = [\n    //     {path: PATH_CONTACTS, label: \"Контакты\"},\n    //     {path: PATH_CONTACTS, label: \"Реклама\"},\n    //     {path: PATH_CONTACTS, label: \"Поддержка\"}\n    // ]\n\n\n    //TODO Вынести в компонент navigation\n  return (\n      <div className=\"navbar navbar-dark bg-info flex-md-column flex-lg-row pl-5 pr-5 flex-column justify-content-center flex-md-row\">\n          <Logo className={\"mb-3 mb-lg-0\"}/>\n          <div className=\"d-flex flex-column flex-lg-row flex-fill col-sm-12 col-md-10 flex-md-column align-items-md-center flex-md-row p-0 justify-content-md-around\">\n              <NavBar/>\n              {linkToCreateAnnouncement(\"mt-4 mt-lg-0\")}\n          </div>\n\n      </div>\n  );\n}\n\nexport default Footer;\n","import React, {useEffect, useState} from 'react';\nimport \"./buttonUpStyles.css\"\nimport Button from '../button/button';\n\n\nconst ButtonUp = (props: any) => {\n\n    const [isView, setIsView] = useState(false)\n\n    useEffect(() => {\n        document.addEventListener(\"scroll\", onScrollHandler)\n        return () => document.removeEventListener(\"scroll\", onScrollHandler)\n    }, [])\n\n    const onScrollHandler = (event: Event) => {\n        const currentHeight = Math.ceil(window.innerHeight + window.scrollY)\n        const innerHeight = window.innerHeight\n        currentHeight < innerHeight + 300 ? setIsView(false) : setIsView(true)\n    }\n\n  return isView ?\n      <Button className={\"btn-up btn-primary\"} label={\"Наверх\"}\n              onClickHandler={() => window.scrollTo(0,0)} /> : null\n}\n\nexport default ButtonUp;","import React from \"react\";\r\nimport \"./preloaderStyle.css\";\r\n\r\ntype PreloaderPropsType = {\r\n    className?: string\r\n}\r\n\r\nconst Preloader = (props: PreloaderPropsType) => {\r\n    const {className} = props\r\n\r\n    return (\r\n        <span className={`cssload-loader ${className}`}>\r\n            <span className=\"cssload-loader-inner\"/>\r\n        </span>\r\n    )\r\n}\r\n\r\nexport default React.memo(Preloader)","import React from 'react';\n\ntype AlertEmptyResponsePropsType = {\n  alertText?: string\n  className?: string\n}\n\nconst AlertEmptyResponse: React.FC<AlertEmptyResponsePropsType> = (props) => {\n  const {className, alertText = \"По вашему запросу ничего не найдено!!\"} = props\n\n  return (\n          <div className={`alert alert-warning ${className}`}>\n            {alertText}\n          </div>\n  )\n}\n\nexport default AlertEmptyResponse;","import React from 'react';\nimport Preloader from \"../preloader/preloader\";\nimport AlertEmptyResponse from \"../alertEmptyResponse/alertEmptyResponse\";\nimport AlertErrorFetching from \"../alertErrorFetching/alertErrorFetching\";\nimport {useSelector} from \"react-redux\";\nimport {\n    getIsEmptyResponseMainStateSelector, getIsErrorFetchMainStateSelector,\n    getIsFetchingMainStateSelector\n} from \"../../redux/reducers/mainState/mainStateSelectors\";\n\ntype AnnouncementsMappedListType = {\n    preloader?: JSX.Element\n    alertErrorFetching?: JSX.Element\n    alertEmptyResponse?: JSX.Element\n    isErrorFetching?: boolean\n    isEmptyResponse?: boolean\n    isFetching?: boolean\n    children: any\n}\n\nconst WithBadFetchingCasesWrapper = (props: AnnouncementsMappedListType) => {\n\n    const isFetchingRedux = useSelector(getIsFetchingMainStateSelector)\n    const isEmptyResponseRedux = useSelector(getIsEmptyResponseMainStateSelector)\n    const isErrorFetchingRedux = useSelector(getIsErrorFetchMainStateSelector)\n\n    const {\n        preloader = <Preloader/>,\n        alertEmptyResponse = <AlertEmptyResponse/>,\n        alertErrorFetching = <AlertErrorFetching/>,\n        isErrorFetching = isErrorFetchingRedux,\n        isFetching = isFetchingRedux,\n        isEmptyResponse = isEmptyResponseRedux,\n        children = null\n    } = props\n\n  return (\n      isFetching ?\n          <>{children}{preloader}</> :\n          isErrorFetching ?\n              alertErrorFetching :\n              isEmptyResponse ?\n                  alertEmptyResponse :\n                  children\n  )\n}\n\nexport default WithBadFetchingCasesWrapper;\n","import React from 'react';\nimport {useSelector} from \"react-redux\";\nimport {getCategoriesDataSelector} from \"../../redux/reducers/mainState/mainStateSelectors\";\nimport CategoryNavigationButton from \"../categoryNavButton/categoryNavigationButton\";\n\nconst CategoryNavigation: React.FC<any> = (props) => {\n\n  //------MAP-STATE-TO-PROPS-----//\n  const categoriesData = useSelector( (state) => getCategoriesDataSelector(state))\n\n  return (\n      <div className=\"col-lg-2 col-md-3 col-sm-12 p-0 categoryNavigation\">\n          {categoriesData.map( (categoryData: any) => {\n              const {id, name, category, subCategories = []} = categoryData\n              return <>\n                  <CategoryNavigationButton key={id} category={category} activeClassName={\"text-warning\"} configCategory={categoryData}>\n                      <h5>{name}</h5>\n                  </CategoryNavigationButton>\n                  {subCategories.map( (subCategoryData: any) => {\n                      const {id, name, category} = subCategoryData\n                      return <CategoryNavigationButton key={id} activeClassName={\"text-warning\"} category={category} configCategory={subCategoryData}>\n                          <h6>- {name}</h6>\n                      </CategoryNavigationButton> } )}\n              </> } )}\n          <hr className={\"my-4\"}/>\n      </div>\n  )\n}\n\nexport default CategoryNavigation;","import React, {useCallback, useEffect} from 'react';\nimport \"./feedPageStyles.css\"\nimport Header from \"../../components/header/header\";\nimport SearchBox from \"../../components/searchBox/searchBox\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {getLastAnnouncementsThunk} from \"../../redux/thunks/thunks\";\nimport {\n    getDescriptionSalamRuSelector,\n    getIsFetchingFeedReducerSelector,\n    getLastAnnouncementsSelector\n} from \"../../redux/reducers/feedState/feedStateSelectors\";\nimport Announcement from \"../../components/announcement/announcement\";\nimport Footer from \"../../components/footer/footer\";\nimport ButtonUp from \"../../components/buttonUp/buttonUp\";\nimport Button from \"../../components/button/button\";\nimport {GET_PATH_SEARCH} from \"../../app/App\";\nimport {NavLink} from \"react-router-dom\";\nimport {\n    getIsEmptyResponseMainStateSelector, getIsErrorFetchMainStateSelector,\n    getIsFetchingMainStateSelector\n} from \"../../redux/reducers/mainState/mainStateSelectors\";\nimport Preloader from \"../../components/preloader/preloader\";\nimport AlertEmptyResponse from \"../../components/alertEmptyResponse/alertEmptyResponse\";\nimport WithBadFetchingCasesWrapper from \"../../components/withBadFetchingCasesWrapper/withBadFetchingCasesWrapper\";\nimport AlertErrorFetching from \"../../components/alertErrorFetching/alertErrorFetching\";\nimport CategoryNavigation from \"../../components/categoryNavigation/categoryNavigation\";\nimport CategoryNavigationButton from \"../../components/categoryNavButton/categoryNavigationButton\";\nimport {initialStateCategory} from \"../../redux/reducers/mainState/mainState\";\n\n\nconst FeedPage = (props: any) => {\n\n    //------MAP-STATE-TO-PROPS-----//\n    const lastAnnouncements = useSelector(getLastAnnouncementsSelector)\n    const descriptionSalamRu = useSelector(getDescriptionSalamRuSelector)\n\n    //-----MAP-DISPATCH-TO-PROPS----//\n    const dispatch = useDispatch()\n    const getLastAnnouncements = useCallback((page, withConcat = false) => dispatch(getLastAnnouncementsThunk(page, withConcat)), [dispatch])\n\n    //----COMPONENT-DID-MOUNT-LIFECYCLE----//\n    useEffect(() => {\n        window.scrollTo(0,0)\n        getLastAnnouncements(0)\n        getLastAnnouncements(1, true)\n    }, [])\n\n    return (\n        <div className={\"feedPage\"}>\n            <Header/>\n            {/*<div style={{height:\"81px\", width: \"100%\"}} className=\"ads-banner\"></div>*/}\n            <SearchBox className={\"mt-4\"} placeHolder={\"Поиск по объявлениям\"}/>\n            <div className=\"container-fluid d-lg-flex\">\n                <CategoryNavigation />\n                <div className=\"col-lg-8\">\n\n                    <div className=\"mb-5\">\n                        <h2 className=\"jumbotron p-2 pl-0\">Последние объявления</h2>\n                        <WithBadFetchingCasesWrapper>\n                            {lastAnnouncements.map((lastAnnouncement: any) =>\n                                <Announcement className={\"horizontalCard\"} {...lastAnnouncement}/>)}\n                        </WithBadFetchingCasesWrapper>\n                        <CategoryNavigationButton category={\"all\"} configCategory={initialStateCategory}>\n                            <Button className={\"btn-success col-md-12 mt-4\"} label={\"Посмотерть все объявления\"}/>\n                        </CategoryNavigationButton>\n                    </div>\n                    <hr className=\"my-4\"/>\n                    <div className=\"jumbotron p-4 \">\n                        <h1 className=\"display-5\">О проекте</h1>\n                        <hr className=\"my-4\"/>\n                        <p className=\"lead\">{descriptionSalamRu}</p>\n                    </div>\n\n                </div>\n                <ButtonUp/>\n            </div>\n            <Footer/>\n        </div>\n    );\n}\n\nexport default FeedPage;\n","import React from 'react';\nimport \"./contactsPageStyles.css\"\nimport Header from \"../../components/header/header\";\nimport Footer from \"../../components/footer/footer\";\n\n\nconst ContactsPage = (props: any) => {\n\n    return (\n        <div className={\"contactsPage fullHeightContent\"}>\n            <Header/>\n\n            <div className=\"contactsPage__container container-lg pb-5 pt-5 text-center\">\n                <div className=\"jumbotron p-4\">\n                    <h1 className=\"display-5\">Уважаемые пользователи!</h1>\n                    <hr className=\"my-4\"/>\n                    <p className=\"lead\">Lorem ipsum dolor sit amet,\n                        consectetur adipisicing elit.\n                        Impedit minima perferendis tenetur?\n                        Delectus dolores eaque est, explicabo laboriosam minus quia ut vel veniam.\n                        Dignissimos fuga, quas quasi quisquam saepe sint.\n                    </p>\n                </div>\n            </div>\n            <Footer/>\n        </div>\n    );\n}\n\nexport default ContactsPage;\n","import React from 'react';\nimport {useSelector} from \"react-redux\";\nimport {getIsAuthSelector} from \"../redux/reducers/authorizationState/authorizationStateSelectors\";\nimport {Redirect} from 'react-router-dom';\nimport {PATH_FEED} from \"../app/App\";\n\nconst withAuthRedirectHoc = (Component: any) => {\n    return (props: any) => {\n        const isAuth = useSelector(getIsAuthSelector)\n        return !isAuth ? <Redirect to={PATH_FEED}/> : <Component {...props}/>\n    }\n}\n\nexport default withAuthRedirectHoc;\n","import React from 'react';\nimport \"./imagePickerStyles.css\"\n\ntype ImagePickerPropsType = {\n    onLoadHandler: Function\n    className?: string\n    styles?: any\n}\n\nconst ImagePicker = (props: ImagePickerPropsType) => {\n\n    const {onLoadHandler, className, styles=null} = props\n\n    const onChangeFileHandler = (event: any) => {\n        const file = event.target.files[0]\n        const {name = `uploadUserImg${Date.now()}`} = file || {}\n        const reader = new FileReader();\n\n        reader.onload = () => {\n            const {result} = reader\n            onLoadHandler(result, name)\n        }\n\n        file && reader.readAsDataURL(file)\n    }\n\n  return <div style={styles} className={`h-100 w-100 ${className}`}>\n      <input onChange={onChangeFileHandler} type=\"file\" className={`imagePicker`}/>\n      <div className=\"h-100 w-100 d-flex justify-content-center align-items-center border border-dark alert-dark\">\n         <h2 className={\"display-4\"}>+</h2>\n      </div>\n  </div>\n}\n\nexport default ImagePicker;\n","import React, {ChangeEvent, useCallback, useEffect} from 'react';\nimport \"./settingsPageStyles.css\"\nimport Header from \"../../components/header/header\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {postLogoutOrDeleteUser, postSettingByFieldThunk} from \"../../redux/thunks/thunks\";\nimport Footer from \"../../components/footer/footer\";\nimport {SettingsFieldType} from '../../redux/reducers/settingsState/settingsState';\nimport TextInput from \"../../components/textInput/textInput\";\nimport Button from \"../../components/button/button\";\nimport Image from \"../../components/image/image\";\nimport {getSettingsFieldValueByFieldSelector} from '../../redux/reducers/settingsState/settingsStateSelectors';\nimport AlertModalWindow from \"../../components/modalWindow/alertModalWindow/alertModalWindow\";\nimport {setIsValidFormReducerAC, seValueFormReducerAC} from \"../../redux/reducers/formState/formStateActionCreators\";\nimport {getFieldsByPageFormReducerSelector} from \"../../redux/reducers/formState/formStateSelectors\";\nimport withAuthRedirectHoc from '../../hocs/withAuthRedirectHoc';\nimport ImagePicker from \"../../components/imagePicker/imagePicker\";\n\nconst SettingsPage = (props: any) => {\n\n    //------MAP-STATE-TO-PROPS-----//\n    const formState = useSelector((state) => getFieldsByPageFormReducerSelector(state, \"settings\"))\n    const {avatar, name, phone, login,} = formState\n\n    const settingsState = useSelector( (state) => ({\n        avatar: getSettingsFieldValueByFieldSelector(state, \"avatar\"),\n        name: getSettingsFieldValueByFieldSelector(state, \"name\"),\n        phone: getSettingsFieldValueByFieldSelector(state, \"phone\"),\n        login: getSettingsFieldValueByFieldSelector(state, \"login\")\n    }) )\n    const settingsStateEntries = Object.entries(settingsState)\n\n    //-----MAP-DISPATCH-TO-PROPS----//\n    const dispatch = useDispatch()\n    const postSettingByField = useCallback((data, field) => dispatch(postSettingByFieldThunk(data, field)), [dispatch])\n    const logoutUser = useCallback(() => dispatch(postLogoutOrDeleteUser(\"logout\")), [dispatch])\n    const deleteUser = useCallback(() => dispatch(postLogoutOrDeleteUser(\"delete\")), [dispatch])\n    const seValueFormReducer = useCallback((value, field) => dispatch(seValueFormReducerAC(value, field, \"settings\")), [dispatch])\n    const setIsValidFormReducer = useCallback((field) => dispatch(setIsValidFormReducerAC(field, \"settings\")), [dispatch])\n\n    //------DID-MOUNT-LIFE-CYCLE-----//\n    useEffect(() => {\n        settingsStateEntries.forEach( ([key, value]) => seValueFormReducer(value, key) )\n    }, [])\n\n    const onLoadImageHandler = (image: any, imageName: string) => {\n        const postData = {photo: image, name: imageName}\n        seValueFormReducer(image, \"avatar\")\n        postSettingByField(postData, \"avatar\")\n    }\n\n    //Функция - обработчик события изменеия в инпуте. Проверка на валидность значения в инпуте.\n    const onChangeHandler = (event: React.ChangeEvent<HTMLInputElement>, field: SettingsFieldType) => {\n        console.log(\"onChangeHandler\", field)\n        const {currentTarget: {value}} = event\n        seValueFormReducer(value, field)\n    }\n\n    //Функция - обработчик события клик по кнопке отправить или зарегестрироваться\n    const onClickHandler = (field: SettingsFieldType) => {\n        // @ts-ignore\n        const {isValid, value} = formState[field]\n        // @ts-ignore\n        const valueFromSettingsState = settingsState[field]\n        console.log(\"onClickHandler\", isValid)\n        const postData = {[field] : value}\n        isValid && value !== valueFromSettingsState && postSettingByField(postData, field)\n    }\n\n    //TODO Вынести конфиги для всех инпутов в formState!!\n    //Функция возращает массив с конфигурацией для полей ввода\n    const getInputsConfig = () => {\n        return [\n            {\n                field: \"name\",\n                label: \"Имя\",\n                inputType: \"text\",\n                value: name.value,\n                isValid: name.isValid\n            },\n            {\n                field: \"login\",\n                label: \"Логин\",\n                inputType: \"text\",\n                value: login.value,\n                isValid: login.isValid\n            },\n            {\n                field: \"phone\",\n                label: \"Номер телефона\",\n                inputType: \"tel\",\n                value: phone.value,\n                isValid: phone.isValid\n            },\n        ]\n    }\n\n    return (\n        <div className={\"settingsPage fullHeightContent\"}>\n            <Header/>\n            <div className=\"container-lg pb-5 pt-5\">\n                <h2 className=\"display-5 jumbotron p-2 mb-5\">Настройки профиля</h2>\n                <div className=\"d-lg-flex justify-content-around\">\n                    <div className=\"settingsPage__settings-wrapper\">\n\n                        <div className=\"settingsPage__setting-avatar w-100\">\n                            <Image photo={avatar.value}/>\n                            <ImagePicker className={\"position-absolute fixed-top opacity-0\"} onLoadHandler={onLoadImageHandler}/>\n                        </div>\n\n                        <div className=\"settingsPage__logouOrDel-wrapper\">\n                            <AlertModalWindow openBtnElement={<Button className={\"btn-warning w-100 mb-4\"} label={\"Выйти из аккаунта\"}/>}\n                                              btnOneConfiguration={{btnOneLabel: \"Нет\"}}\n                                              btnTwoConfiguration={{btnTwoLabel: \"Да\", btnTwoHandler:logoutUser }}\n                                              alertText={\"Выйти из аккаунта?\"}/>\n\n                            <AlertModalWindow openBtnElement={<Button className={\"btn-danger w-100\"} label={\"Удалить аккаунт\"}/>}\n                                              btnOneConfiguration={{btnOneLabel: \"Нет\"}}\n                                              btnTwoConfiguration={{btnTwoLabel: \"Да\", btnTwoHandler:deleteUser }}\n                                              alertText={\"Удалить аккаунт?\"}/>\n                        </div>\n\n                    </div>\n                    <div className=\"settingsPage__settings-wrapper p-0 mt-5 col-lg-5\">\n                        { getInputsConfig().map( ({field, ...restConfig}) => <>\n                            <div className=\"settingsPage__setting d-flex input-group my-2\">\n                                <TextInput key={field} {...restConfig}\n                                           onBlurHandler={() => setIsValidFormReducer(field)}\n                                           onChangeHandler={(event: ChangeEvent<HTMLInputElement>) => onChangeHandler(event, field)}/>\n                                <Button className={\"input-group-append btn-success ml-4 align-self-end\"} onClickHandler={() => onClickHandler(field)} label={\"Сохранить\"}/>\n                            </div>\n                            <hr className=\"my-4\"/> </>) }\n                    </div>\n                </div>\n            </div>\n            <Footer/>\n        </div>\n    );\n}\n\nexport default withAuthRedirectHoc(SettingsPage);\n","export const getAnnouncementSelector = (state: any) => state.announcementState.announcement\r\nexport const getIsFetchingAnnouncementReducerSelector = (state: any) => state.announcementState.isFetching\r\n","import * as React from \"react\"\r\nimport \"./sliderStyle.css\"\r\nimport {useState} from \"react\";\r\n\r\n\r\ntype NextOrPrevArgType = \"next\" | \"prev\" | string\r\ntype SliderPropsTypes = {\r\n    children : any\r\n    className?: string\r\n}\r\n\r\nfunction Slider(props: SliderPropsTypes) {\r\n\r\n    const {children, className} = props\r\n\r\n    //-------------LOCAL-STATE--------------//\r\n    const [currentSlide, setCurrentSlide] = useState(0)\r\n\r\n    const isLastSlide = () => currentSlide === children[\"length\"] - 1\r\n    const isFirstSlide = () => currentSlide === 0\r\n\r\n    const changeSlide: any = (nextOrPrev: NextOrPrevArgType) => {\r\n        console.log(\"changeSlide\", nextOrPrev)\r\n        if(nextOrPrev === \"next\") setCurrentSlide(currentSlide + 1)\r\n        if(nextOrPrev === \"prev\") setCurrentSlide(currentSlide - 1)\r\n    }\r\n\r\n    const transformStyle = {\r\n        transform: `translateX( ${currentSlide * -100}% )`\r\n    }\r\n\r\n    return (\r\n        <div className={`slider ${className}`}>\r\n                {React.Children.map(children, child =>\r\n                    <div style={transformStyle} className={`slider__page`}>\r\n                        { React.cloneElement(child) }\r\n                    </div>)}\r\n            {!isFirstSlide() && <div onClick={() => changeSlide(\"prev\")} className=\"carousel-control carousel-control-prev\">\r\n                <span className=\"carousel-control-prev-icon\"/>\r\n            </div>}\r\n            {!isLastSlide() && <div onClick={() => changeSlide(\"next\")} className=\"carousel-control carousel-control-next\">\r\n                <span className=\"carousel-control-next-icon\"/>\r\n            </div>}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default React.forwardRef(Slider)","import React, {useCallback, useEffect} from 'react';\nimport \"./announcementPageStyles.css\"\nimport Header from \"../../components/header/header\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {getAnnouncementByIdThunk} from \"../../redux/thunks/thunks\";\nimport Footer from \"../../components/footer/footer\";\nimport {useHistory, useParams} from 'react-router-dom';\nimport {\n    getAnnouncementSelector,\n    getIsFetchingAnnouncementReducerSelector\n} from '../../redux/reducers/announcementState/announcementStateSelectors';\nimport Button from \"../../components/button/button\";\nimport Slider from \"../../components/slider/slider\";\nimport Image from \"../../components/image/image\";\n\nconst AnnouncementPage = (props: any) => {\n\n    //------MAP-STATE-TO-PROPS-----//\n    const isFetching = useSelector(getIsFetchingAnnouncementReducerSelector)\n    const {\n        photos = [],\n        name = \"\",\n        price = 0,\n        description = \"\",\n        station = \"\",\n        contactName = \"\",\n        contactPhone = \"\",\n        creationDate = \"\"\n    } = useSelector(getAnnouncementSelector)\n\n    //-----MAP-DISPATCH-TO-PROPS----//\n    const dispatch = useDispatch()\n    const getAnnouncementById = useCallback(() => dispatch(getAnnouncementByIdThunk(category, id)), [dispatch])\n\n    //------CATCH-PARAMS-FROM-URL-----//\n    const {category, id} = useParams()\n\n    const {goBack} = useHistory()\n\n    //----COMPONENT-DID-MOUNT-LIFECYCLE----//\n    useEffect(() => {\n        window.scrollTo(0,0)\n        getAnnouncementById()\n    }, [])\n\n    return (\n        <div className={\"announcementPage fullHeightContent\"}>\n            <Header/>\n            <div className=\"announcementPage__container container-lg pt-5 pb-5\">\n                <div className=\"d-flex flex-column flex-md-row justify-content-md-between\">\n                    <Button className={\"btn-primary order-md-1\"} onClickHandler={goBack} label={\"Назад\"}/>\n                    <hr className=\"my-4 mobile\"/>\n                    <h2 className=\"announcementPage__name text-left m-0\">{name}</h2>\n                </div>\n\n                <hr className=\"my-4\"/>\n            <div className=\"announcementPage__photoAndInfo-wrapper d-block d-lg-flex mb-5\">\n\n                <div className=\"announcementPage__photo-slider\">\n                    <Slider>\n                        {photos.map( (photo:string) => <Image photo={photo}/> ) }\n                    </Slider>\n                </div>\n\n                <div className=\"announcementPage__info-wrapper mt-5 ml-lg-5 col-sm-12 col-lg-5 p-0\">\n                    <h3 className=\"announcementPage__info-price bg-warning p-2 m-0 text-left\">{`Цена: ${price} руб.`}</h3>\n                    <hr className=\"my-lg-4 my-3\" />\n                    <h5 className=\"announcementPage__info-location text-left alert alert-warning\">{`Метро: ${station}`}</h5>\n                    <hr className=\"my-lg-4 my-3\"/>\n                    <div className=\"announcementPage__info-inner-wrapper alert alert-success\">\n                        <h5 className=\"announcementPage__info-name text-left\">Продавец: {contactName}</h5>\n                        <h5 className=\"announcementPage__info-name text-left\">Телефон: {contactPhone}</h5>\n                    </div>\n                    <hr className=\"my-lg-4 my-3\"/>\n                    <h5 className=\"announcementPage__creationDate alert alert-dark\">Дата создания объявления: {creationDate}</h5>\n                </div>\n            </div>\n                <div className=\"announcementPage__description alert alert-primary\">\n                    <h5 className={\"text-left\"}>Описание:</h5>\n                    <p>{description}</p>\n                </div>\n\n            </div>\n            <Footer/>\n        </div>\n    );\n}\n\nexport default AnnouncementPage;\n","export const getMyAnnouncementsSelector = (state: any) => state.myAnnouncementsState.myAnnouncements\r\nexport const getIsFetchingMyAnnouncementsReducerSelector = (state: any) => state.myAnnouncementsState.isFetching\r\nexport const getCurrentPageMyAnnouncementsReducerSelector = (state: any) => state.myAnnouncementsState.currentPage\r\nexport const getTotalNumOfPagesMyAnnouncementsReducerSelector = (state: any) => state.myAnnouncementsState.totalNumOfPages\r\n","import React, {useEffect} from 'react';\n\nconst useInfinityScroll = (handler: Function) => {\n\n    const scrollHandler = (event: any) => {\n\n        const currentHeight = Math.ceil(window.innerHeight + window.scrollY)\n        const allHeight = Math.max(\n            document.body.scrollHeight, document.documentElement.scrollHeight,\n            document.body.offsetHeight, document.documentElement.offsetHeight,\n            document.body.clientHeight, document.documentElement.clientHeight\n        )\n\n        if(currentHeight >= allHeight) {\n            handler(event)\n        }\n    }\n\n  useEffect(() => {\n        document.addEventListener('scroll', scrollHandler)\n        return () => document.removeEventListener('scroll', scrollHandler)\n      }, [handler]\n  );\n}\n\nexport default useInfinityScroll;\n","import React, {useCallback, useEffect} from 'react';\nimport \"./myAnnouncementsPageStyles.css\"\nimport Header from \"../../components/header/header\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport Footer from \"../../components/footer/footer\";\nimport {\n    getIsFetchingMyAnnouncementsReducerSelector,\n    getMyAnnouncementsSelector,\n    getCurrentPageMyAnnouncementsReducerSelector,\n    getTotalNumOfPagesMyAnnouncementsReducerSelector\n} from '../../redux/reducers/myAnnouncementState/myAnnouncementStateSelectors';\nimport {getMyAnnouncementsThunk, postDeleteAnnouncementThunk} from \"../../redux/thunks/thunks\";\nimport Announcement from \"../../components/announcement/announcement\";\nimport useInfinityScroll from \"../../hooks/useInfinityScroll\";\nimport {setCurrentPageMyAnnouncementReducerAC} from \"../../redux/reducers/myAnnouncementState/myAnnouncementStateActionCreators\";\nimport Button from \"../../components/button/button\";\nimport withAuthRedirectHoc from \"../../hocs/withAuthRedirectHoc\";\nimport ButtonUp from \"../../components/buttonUp/buttonUp\";\nimport Preloader from \"../../components/preloader/preloader\";\nimport WithBadFetchingCasesWrapper from \"../../components/withBadFetchingCasesWrapper/withBadFetchingCasesWrapper\";\nimport AlertEmptyResponse from \"../../components/alertEmptyResponse/alertEmptyResponse\";\nimport AlertModalWindow from \"../../components/modalWindow/alertModalWindow/alertModalWindow\";\n\nconst MyAnnouncementsPage = (props: any) => {\n\n    //------MAP-STATE-TO-PROPS-----//\n    const myAnnouncements = useSelector(getMyAnnouncementsSelector)\n    const isFetching = useSelector(getIsFetchingMyAnnouncementsReducerSelector)\n    const currentPage = useSelector(getCurrentPageMyAnnouncementsReducerSelector)\n    const totalNumOfPages = useSelector(getTotalNumOfPagesMyAnnouncementsReducerSelector)\n\n    //-----MAP-DISPATCH-TO-PROPS----//\n    const dispatch = useDispatch()\n    const getMyAnnouncements = useCallback((withConcat = false) => dispatch(getMyAnnouncementsThunk(withConcat)), [dispatch])\n    const setCurrentPage = useCallback(() => dispatch(setCurrentPageMyAnnouncementReducerAC()), [dispatch])\n    const postDeleteAnnouncement = useCallback((id) => dispatch(postDeleteAnnouncementThunk(id)), [dispatch])\n\n    //----COMPONENT-DID-MOUNT-LIFECYCLE----//\n    useEffect(() => {\n        window.scrollTo(0,0)\n        getMyAnnouncements()\n    }, [])\n\n    //------INFINITY-SCROLL------//\n    const infinityScrollHandler = (event: any) => {\n        if(currentPage !== totalNumOfPages) {\n            setCurrentPage()\n            getMyAnnouncements(true)\n        }\n    }\n    useInfinityScroll(infinityScrollHandler)\n\n\n    const onClickBtnUpHandler = () => window.scrollTo(0, 0)\n\n    return (\n        <div className={\"myAnnouncements fullHeightContent\"}>\n            <Header/>\n            <div className=\"myAnnouncements__container container-lg pt-5 pb-5\">\n                <h2 className=\"display-5 jumbotron p-2\">Мои объявления</h2>\n                <WithBadFetchingCasesWrapper>\n                    {myAnnouncements.map( ({id, ...restMyAnnouncement}: any) =>\n                        <div key={id} className=\"d-flex mb-3\">\n                            <Announcement className={\"horizontalCard\"} id={id} {...restMyAnnouncement}/>\n                            <AlertModalWindow openBtnElement={<Button className={\"btn-danger align-self-stretch mb-3 align-items-center d-flex\"} isDisabled={isFetching} label={\"Удалить объявление\"}/>}\n                                              btnOneConfiguration={{btnOneLabel: \"Нет\"}}\n                                              btnTwoConfiguration={{btnTwoLabel: \"Да\", btnTwoHandler:() => postDeleteAnnouncement(id) }}\n                                              alertText={\"Удалить объявление?\"}/>\n                        </div>) }\n                </WithBadFetchingCasesWrapper>\n                {currentPage !== totalNumOfPages && <Button className={\"btn-success w-100 my-4 mobile\"} onClickHandler={infinityScrollHandler}\n                         label={\"Загрузить еще объявления\"}/>}\n                <ButtonUp/>\n            </div>\n            <Footer/>\n        </div>\n    );\n}\n\nexport default withAuthRedirectHoc(MyAnnouncementsPage);\n","import React, {ChangeEvent, useCallback, useEffect} from 'react';\nimport \"./createAnnouncementStyles.css\"\nimport Header from \"../../components/header/header\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {postNewAnnouncementThunk} from \"../../redux/thunks/thunks\";\nimport Footer from \"../../components/footer/footer\";\nimport TextInput from \"../../components/textInput/textInput\";\nimport Select from \"../../components/searchBox/select/select\";\nimport Button from \"../../components/button/button\";\nimport Image from \"../../components/image/image\";\nimport {\n    getCategoriesDataSelector,\n    getIsFetchingMainStateSelector,\n    getSubwayStationsDataSelector, getTheSubCategoriesSelector\n} from \"../../redux/reducers/mainState/mainStateSelectors\";\nimport {\n    checkIsReadyToSendByPageFormReducerAC, resetToInitialByPageFormReducerAC,\n    setIsValidFormReducerAC,\n    seValueFormReducerAC\n} from \"../../redux/reducers/formState/formStateActionCreators\";\nimport {getFieldsByPageFormReducerSelector} from \"../../redux/reducers/formState/formStateSelectors\";\nimport {prepareFormStateByPageForSend} from \"../../redux/reducers/formState/formState\";\nimport {getSettingsFieldValueByFieldSelector} from \"../../redux/reducers/settingsState/settingsStateSelectors\";\nimport withAuthRedirectHoc from \"../../hocs/withAuthRedirectHoc\";\nimport ImagePicker from \"../../components/imagePicker/imagePicker\";\nimport AlertModalWindow from \"../../components/modalWindow/alertModalWindow/alertModalWindow\";\n\ntype CreateAnnouncementFieldsType =\n    \"photos\"\n    | \"name\"\n    | \"price\"\n    | \"category\"\n    | \"description\"\n    | \"subway\"\n    | \"phone\"\n    | string\n\nconst CreateAnnouncement = (props: any) => {\n\n    //------MAP-STATE-TO-PROPS-----//\n    const subwayStationsData = useSelector(getSubwayStationsDataSelector)\n    const [defaultCategory, ...categoriesData] = useSelector( (state) =>\n        getTheSubCategoriesSelector(getCategoriesDataSelector(state), \"active\"))\n    const phoneRedux = useSelector( (state) => getSettingsFieldValueByFieldSelector(state, \"phone\"))\n    const formState = useSelector((state) => getFieldsByPageFormReducerSelector(state, \"createAnnouncement\"))\n    const {\n        photoList, name,\n        price, categoryId,\n        description,\n        sellerPhone, stationId,\n        isReadyToSend\n    } = formState\n    const isFetching = useSelector(getIsFetchingMainStateSelector)\n\n    //-----MAP-DISPATCH-TO-PROPS----//\n    const dispatch = useDispatch()\n    const postNewAnnouncement = useCallback((data) => dispatch(postNewAnnouncementThunk(data)), [dispatch])\n    const setValueFormReducer = useCallback((value, field) => dispatch(seValueFormReducerAC(value, field, \"createAnnouncement\")), [dispatch])\n    const setIsValidFormReducer = useCallback((field) => dispatch(setIsValidFormReducerAC(field, \"createAnnouncement\")), [dispatch])\n    const checkIsReadyToSend = useCallback(() => dispatch(checkIsReadyToSendByPageFormReducerAC(\"createAnnouncement\")), [dispatch])\n    const resetToInitialByPageFormReducer = useCallback(() => dispatch(resetToInitialByPageFormReducerAC(\"createAnnouncement\")), [dispatch])\n\n    //------DID-MOUNT-LIFE-CYCLE-----//\n    useEffect(() => {\n        setValueFormReducer(phoneRedux, \"sellerPhone\")\n        return () => {\n            resetToInitialByPageFormReducer()\n        }\n    }, [])\n\n    //------DID-UPDATE-LIFE-CYCLE-----//\n    useEffect(() => {\n        if(isReadyToSend) {\n            const condition = (postData: any, key: any, value: any) => {\n                key === \"categoryId\" || key === \"stationId\" ? postData[key] = value.id : postData[key] = value\n                return postData\n            }\n            const postData = prepareFormStateByPageForSend(formState)(condition)\n            postNewAnnouncement(postData)\n        }\n    }, [isReadyToSend])\n\n    const selectItemOnChangeHandler = (field: \"categoryId\" | \"stationId\", selectItem: any, setIsActiveSelect: Function) => {\n        if(\"className\" in selectItem) return false\n        setValueFormReducer(selectItem, field)\n        setIsActiveSelect(false)\n    }\n\n    const onLoadImageHandler = (image: any, imageName: string) => {\n        const value = photoList.value.concat({photo: image, name: imageName})\n        setValueFormReducer(value, \"photoList\")\n    }\n\n    //Функция - обработчик события изменеия в инпуте. Проверка на валидность значения в инпуте.\n    const onChangeHandler = (event: React.ChangeEvent<HTMLInputElement>, field: CreateAnnouncementFieldsType) => {\n        console.log(\"onChangeHandler\", field)\n        const {currentTarget: {value}} = event\n        setValueFormReducer(value, field)\n    }\n\n    const deleteLoadedImage = (imageName: string) => {\n        const newPhotosValue = photoList.value.filter( ({photo, name}: any) => name !== imageName)\n        setValueFormReducer(newPhotosValue, \"photoList\")\n    }\n\n    //Функция возращает массив с конфигурацией для полей ввода\n    const getInputsParamsConfig = () => {\n        return [\n            {\n                field: \"name\",\n                label: \"Имя\",\n                inputType: \"text\",\n                value: name.value,\n                isValid: name.isValid\n            },\n            {\n                field: \"price\",\n                label: \"Цена\",\n                inputType: \"number\",\n                value: price.value,\n                isValid: price.isValid\n            },\n            {\n                field: \"description\",\n                label: \"Описание\",\n                inputType: \"textArea\",\n                value: description.value,\n                isValid: description.isValid\n            },\n        ]\n    }\n\n    // const {name, subway, photos, description, phone, category, price} = state\n\n    const getErrorClassName = (field: \"categoryId\" | \"stationId\") =>\n        !formState[field].isValid && \"createAnnouncement__title-error\"\n\n    return (\n        <div className={\"createAnnouncement fullHeightContent\"}>\n            <Header/>\n            <div className=\"createAnnouncement__container container-lg pt-5\">\n                <h1 className=\"display-5 jumbotron p-2 mb-5\">Создание объявления</h1>\n                <div className=\"createAnnouncement__category d-flex\">\n                    <h4 className={`createAnnouncement__category-title col-lg-3 text-left p-0 ${getErrorClassName(\"categoryId\")}`}>\n                        Категория\n                    </h4>\n                    <Select className={\"col-lg-4\"} onBlurHandler={() => setIsValidFormReducer(\"categoryId\")}\n                        onChangeHandlerSelectItem={(selectItem: any, handler: any) => selectItemOnChangeHandler(\"categoryId\", selectItem, handler)}\n                        value={categoryId.value.label} selectItems={categoriesData} placeHolder={\"Выбор категории\"}/>\n                </div>\n                <hr className=\"my-4\"/>\n                <div className=\"createAnnouncement__params d-block d-lg-flex\">\n                    <h4 className=\"createAnnouncement__params-title col-lg-3 text-lg-left p-0 text-center\">Параметры</h4>\n                    <div className=\"col-lg-4 p-0\">\n                        {getInputsParamsConfig().map(({field, ...restConfig}) =>\n                            <TextInput className={\"mb-3\"} key={field} {...restConfig}\n                                       onBlurHandler={() => setIsValidFormReducer(field)}\n                                       onChangeHandler={(event: ChangeEvent<HTMLInputElement>) => onChangeHandler(event, field)}/>)}\n\n                        <div className=\"createAnnouncement__params-photos position-relative\">\n                            {/*<div className=\"createAnnouncement__params-photos-label mb-3\">*/}\n                                <span className={\"createAnnouncement__params-photos-label mb-3\"}>\n                                    {`Фотографии ${photoList.value.length} из 5`}\n                                </span>\n                            {/*</div>*/}\n                            <div className=\"createAnnouncement__params-photos-files d-flex flex-wrap\">\n                                {photoList.value.map( ({photo, name}: any) =>\n                                    <Image onClickHandler={() => deleteLoadedImage(name)} className={\"createAnnouncement__params-photos-files-file col-lg-4 mr-2\"} photo={photo}/> )}\n                                {photoList.value.length < 5 &&\n                                <ImagePicker className={\"col-lg-4 p-0 my-3\"} onLoadHandler={onLoadImageHandler}/>}\n                                <span>\n                                    Чтобы удалить фото - нажмите на него\n                                </span>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <hr className=\"my-4\"/>\n                <div className=\"createAnnouncement__location d-flex\">\n                    <h4 className={`createAnnouncement__location-title col-lg-3 text-left p-0 ${getErrorClassName(\"stationId\")}`}>Место сделки</h4>\n                    <Select className={\"col-lg-4 p-0\"} onBlurHandler={() => setIsValidFormReducer(\"stationId\")}\n                        onChangeHandlerSelectItem={(selectItem: any, handler: any) => selectItemOnChangeHandler(\"stationId\", selectItem, handler)}\n                        value={stationId.value.name} selectItems={subwayStationsData} placeHolder={\"Выбор метро\"}/>\n                </div>\n                <hr className=\"my-4\"/>\n\n                <div className=\"createAnnouncement__contacts d-flex\">\n                    <h4 className=\"createAnnouncement__contacts-title col-lg-3 text-left p-0\">Контакты</h4>\n                    <TextInput className={\"col-lg-3 p-0\"} isValid={sellerPhone.isValid} value={sellerPhone.value}\n                               placeholder={\"Номер телефона\"} label={\"Телефон\"} inputType={\"number\"}\n                               onBlurHandler={() => setIsValidFormReducer(\"sellerPhone\")}\n                               onChangeHandler={(event: ChangeEvent<HTMLInputElement>) => onChangeHandler(event, \"sellerPhone\")}/>\n                </div>\n                <hr className=\"my-4\"/>\n                <div className={\"d-lg-flex justify-content-around mb-5 col-lg-7 p-0 d-block\"}>\n                    <Button className={\"btn-success col-lg-7 my-3 my-lg-0\"} label={\"Создать объявление\"} isDisabled={isFetching} onClickHandler={checkIsReadyToSend}/>\n                    <AlertModalWindow openBtnElement={<Button className={\"btn-danger col-lg-4\"} label={\"Очистить поля\"} />}\n                                      btnOneConfiguration={{btnOneLabel: \"Нет\" }}\n                                      btnTwoConfiguration={{btnTwoLabel: \"Да\", btnTwoHandler:resetToInitialByPageFormReducer }}\n                                      alertText={\"Сбросить все введённые данные?\"}/>\n                </div>\n            </div>\n            <Footer/>\n        </div>\n    );\n}\n\nexport default withAuthRedirectHoc(CreateAnnouncement);\n","export const getAnnouncementsListSelector = (state: any) => state.announcementsListState.announcementsList\r\nexport const getCurrentPageAnnouncementsListReducerSelector = (state: any) => state.announcementsListState.currentPage\r\nexport const getTotalNumOfPagesAnnouncementsListReducerSelector = (state: any) => state.announcementsListState.totalNumOfPages\r\n","import React, {useCallback, useEffect, useState} from 'react';\nimport \"./announcementsListPageStyles.css\"\nimport Header from \"../../components/header/header\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport Footer from \"../../components/footer/footer\";\nimport {getAnnouncementsByFiltersThunk, getAnnouncementsListThunk} from \"../../redux/thunks/thunks\";\nimport Announcement from \"../../components/announcement/announcement\";\nimport useInfinityScroll from \"../../hooks/useInfinityScroll\";\nimport {\n    getAnnouncementsListSelector,\n    getCurrentPageAnnouncementsListReducerSelector,\n    getTotalNumOfPagesAnnouncementsListReducerSelector\n} from \"../../redux/reducers/announcementsListState/announcementsListStateSelectors\";\nimport {\n    getCategoriesDataSelector, getIsEmptyResponseMainStateSelector,\n    getIsFetchingMainStateSelector\n} from \"../../redux/reducers/mainState/mainStateSelectors\";\nimport {\n    resetToInitialStateAnnouncementsListReducerAC,\n    setCurrentPageAnnouncementsListReducerAC\n} from \"../../redux/reducers/announcementsListState/announcementsListStateActionCreators\";\nimport {useHistory} from 'react-router-dom';\nimport {\n    getCurrentPageSearchReducerSelector,\n    getIsFetchingSearchReducerSelector,\n    getSearchConfigCategorySelector,\n    getSearchConfigSubwayStationsSelector,\n    getSearchedDataSelector,\n    getTotalNumOfPageSearchReducerSelector\n} from \"../../redux/reducers/searchBoxState/searchBoxStateSelectors\";\nimport SearchBox from \"../../components/searchBox/searchBox\";\nimport {\n    resetToInitialStateSearchReducerAC,\n    setCurrentPageSearchReducerAC\n} from '../../redux/reducers/searchBoxState/searchBoxStateActionCreators';\nimport Preloader from \"../../components/preloader/preloader\";\nimport ButtonUp from \"../../components/buttonUp/buttonUp\";\nimport CategoryNavigationButton from \"../../components/categoryNavButton/categoryNavigationButton\";\nimport AlertEmptyResponse from \"../../components/alertEmptyResponse/alertEmptyResponse\";\nimport WithBadFetchingCasesWrapper from \"../../components/withBadFetchingCasesWrapper/withBadFetchingCasesWrapper\";\nimport Button from \"../../components/button/button\";\nimport CategoryNavigation from '../../components/categoryNavigation/categoryNavigation';\n\n\nconst AnnouncementsListPage = (props: any) => {\n\n    //------USE-HISTORY-----//\n    const {location: {pathname}} = useHistory()\n    const category = pathname.substr(1)\n\n    //------MAP-STATE-TO-PROPS-----//\n    const categoriesData = useSelector((state) => getCategoriesDataSelector(state))\n    //---SEARCHED-BOX-STATE---//\n    const {label: currentCategory} = useSelector(getSearchConfigCategorySelector)\n    const {name: currentSubway}: any = useSelector(getSearchConfigSubwayStationsSelector)\n\n    const searchedData = useSelector(getSearchedDataSelector)\n    const isFetchingSearchState = useSelector(getIsFetchingSearchReducerSelector)\n    const currentPageSearch = useSelector(getCurrentPageSearchReducerSelector)\n    const totalNumOfPageSearch = useSelector(getTotalNumOfPageSearchReducerSelector)\n    const isEqualsCurrAndTotalPageSearch = currentPageSearch === totalNumOfPageSearch\n    //----------------------//\n    const isSearchState = searchedData.length || isFetchingSearchState\n    //---ANNOUNCEMENTS-LIST-STATE---//\n    const announcementsList = useSelector(getAnnouncementsListSelector)\n    const currentPage = useSelector(getCurrentPageAnnouncementsListReducerSelector)\n    const totalNumOfPages = useSelector(getTotalNumOfPagesAnnouncementsListReducerSelector)\n    const isEqualsCurrAndTotalPage = currentPage === totalNumOfPages\n    //---MAIN-STATE---//\n    const isFetchingMainState = useSelector(getIsFetchingMainStateSelector)\n\n    //-----MAP-DISPATCH-TO-PROPS----//\n    const dispatch = useDispatch()\n    const getAnnouncements = useCallback((category, withConcat = false) => dispatch(getAnnouncementsListThunk(category, withConcat)), [dispatch])\n    const getAnnouncementsByFilters = useCallback(() => dispatch(getAnnouncementsByFiltersThunk(true)), [dispatch])\n    const setCurrentPage = useCallback(() => dispatch(setCurrentPageAnnouncementsListReducerAC()), [dispatch])\n    const setCurrentPageSearchBox = useCallback(() => dispatch(setCurrentPageSearchReducerAC()), [dispatch])\n    const resetToInitialStateAnnouncementsList = useCallback(() => dispatch(resetToInitialStateAnnouncementsListReducerAC()), [dispatch])\n    const resetToInitialStateSearchReducer = useCallback(() => dispatch(resetToInitialStateSearchReducerAC()), [dispatch])\n\n    //---GET-ACTIONS---//\n    const getDataAction: () => Function = () => isSearchState ? getAnnouncementsByFilters : getAnnouncements\n    const getDataState: () => Array<any> = () => isSearchState ? searchedData : announcementsList\n    const getSetCurrentPageAction: () => Function = () => isSearchState ? setCurrentPageSearchBox : setCurrentPage\n    const getIsEqualsCurrAndTotalPage: () => boolean = () => isSearchState ? isEqualsCurrAndTotalPageSearch : isEqualsCurrAndTotalPage\n\n    //---LOCAL-STATE---//\n    const [state, setState] = useState(() => ({currentCategory, currentSubway}))\n\n    //----COMPONENT-DID-MOUNT/UNMOUNT-LIFECYCLE----//\n    useEffect(() => {\n        window.scrollTo(0,0)\n        getAnnouncements(category)\n        return () => {\n            resetToInitialStateAnnouncementsList()\n            resetToInitialStateSearchReducer()\n        }\n    }, [])\n\n    //----COMPONENT-DID-UPDATE-LIFECYCLE----//\n    useEffect(() => {\n        resetToInitialStateAnnouncementsList()\n        getAnnouncements(category)\n        setState({currentCategory, currentSubway})\n    }, [category])\n\n    //------INFINITY-SCROLL------//\n    const infinityScrollHandler = (event?: any) => {\n        if (!getIsEqualsCurrAndTotalPage()) {\n            getSetCurrentPageAction()()\n            getDataAction()(category, true)\n        }\n    }\n    useInfinityScroll(infinityScrollHandler)\n\n    return (\n        <div className={\"announcementsList fullHeightContent\"}>\n            <Header/>\n            <SearchBox className={\"mt-4\"} placeHolder={\"Поиск по объявлениям\"}/>\n            <div className=\"announcementsList__slider-container container-fluid d-lg-flex\">\n                <CategoryNavigation/>\n                <div className=\"slider-container__content col-lg-8\">\n                    <h3 className={\"alert alert-success mb-4 d-flex flex-column\"}>\n                        <span className={\"font-weight-bold\"}>Поиск по : </span>\n                        {state.currentSubway}> {state.currentCategory}\n                    </h3>\n                    <WithBadFetchingCasesWrapper isFetching={isFetchingMainState || isFetchingSearchState}>\n                        {getDataState().map(({id, ...restMyAnnouncement}: any) =>\n                            <Announcement className={\"horizontalCard\"} id={id} {...restMyAnnouncement}/>)}\n                    </WithBadFetchingCasesWrapper>\n                    <ButtonUp/>\n                </div>\n                {!getIsEqualsCurrAndTotalPage() && <Button className={\"btn-success w-100 my-4 mobile\"} onClickHandler={infinityScrollHandler}\n                         label={\"Загрузить еще объявления\"}/>}\n            </div>\n            <Footer/>\n        </div>\n    );\n}\n\nexport default AnnouncementsListPage;\n","import React, {useCallback, useEffect} from 'react';\r\nimport \"./appStyles.css\"\r\nimport {Switch, Route, Redirect, NavLink} from 'react-router-dom';\r\nimport FeedPage from \"../pages/feedPage/feedPage\";\r\nimport ContactsPage from \"../pages/contactsPage/contactsPage\";\r\nimport SettingsPage from \"../pages/settingsPage/settingsPage\";\r\nimport AnnouncementPage from '../pages/announcementPage/announcementPage';\r\nimport MyAnnouncementsPage from \"../pages/myAnnouncementsPage/myAnnouncementsPage\";\r\nimport CreateAnnouncement from \"../pages/createAnnouncement/createAnnouncement\";\r\n\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {getSubwayStationsThunk, getUserInfoThunk} from \"../redux/thunks/thunks\";\r\nimport AnnouncementsListPage from \"../pages/announcementsListPage/announcementsListPage\";\r\nimport {getCategoriesDataSelector, getTheSubCategoriesSelector} from \"../redux/reducers/mainState/mainStateSelectors\";\r\nimport {getIsAuthSelector} from \"../redux/reducers/authorizationState/authorizationStateSelectors\";\r\n\r\nexport const PATH_FEED = \"/feed\"\r\nexport const PATH_MY_ANNOUNCEMENTS = \"/myAnnouncements\"\r\nexport const PATH_CREATE_ANNOUNCEMENT = \"/createAnnouncement\"\r\nexport const PATH_SETTINGS = \"/settings\"\r\nexport const PATH_SEARCH = \"/search\"\r\nexport const GET_PATH_SEARCH = (category: string) =>  `${PATH_SEARCH}/${category}`\r\nexport const PATH_CONTACTS = \"/contacts\"\r\n\r\nexport const linkToCreateAnnouncement = (className:string) => <>\r\n    <NavLink activeClassName={\"active\"} className={`header__btn-link btn btn-outline-light flex-grow-1 flex-shrink-03 flex-md-grow-0 my-3 my-lg-0 ${className}`} to={PATH_CREATE_ANNOUNCEMENT}>\r\n        Разместить объявление\r\n    </NavLink>\r\n</>\r\n\r\n\r\nconst App = () => {\r\n\r\n    //------MAP-STATE-TO-PROPS-----//\r\n    const categoriesData = useSelector( (state) =>\r\n        getTheSubCategoriesSelector(getCategoriesDataSelector(state)))\r\n    const isAuth = useSelector(getIsAuthSelector)\r\n\r\n    //-----MAP-DISPATCH-TO-PROPS----//\r\n    const dispatch = useDispatch()\r\n    const getSubwayStations = useCallback(() => dispatch(getSubwayStationsThunk()), [dispatch])\r\n    const getUserData = useCallback(() => dispatch(getUserInfoThunk()), [dispatch])\r\n\r\n    useEffect(() => {\r\n        getSubwayStations()\r\n        isAuth && getUserData()\r\n    }, [])\r\n\r\n    return (\r\n    <div className=\"App bg-light\">\r\n        <Switch>\r\n            <Route exact path={PATH_CREATE_ANNOUNCEMENT} component={CreateAnnouncement}/>\r\n            <Route exact path={PATH_FEED} component={FeedPage}/>\r\n            <Route exact path={PATH_MY_ANNOUNCEMENTS} component={MyAnnouncementsPage}/>\r\n            <Route exact path={PATH_SETTINGS} component={SettingsPage}/>\r\n            <Route exact path={PATH_CONTACTS} component={ContactsPage}/>\r\n            {categoriesData.map( ({category}:any) => <Route exact path={GET_PATH_SEARCH(category)} component={AnnouncementsListPage}/> )}\r\n            {categoriesData.map( ({category}:any) =>  <Route exact path={`${GET_PATH_SEARCH(category)}/:id`} component={AnnouncementPage}/> )}\r\n            <Redirect to={PATH_FEED}/>\r\n        </Switch>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\n\r\nimport thunkMiddleWare from \"redux-thunk\";\r\n\r\nimport { connectRouter, routerMiddleware } from 'connected-react-router'\r\nimport { createBrowserHistory } from 'history'\r\nimport {mainStateReducer} from \"./reducers/mainState/mainState\";\r\nimport { authorizationStateReducer } from \"./reducers/authorizationState/authorizationState\";\r\nimport {searchBoxStateReducer} from \"./reducers/searchBoxState/searchBoxState\";\r\nimport {feedStateReducer} from \"./reducers/feedState/feedState\";\r\nimport { settingsStateReducer } from \"./reducers/settingsState/settingsState\";\r\nimport {announcementStateReducer} from \"./reducers/announcementState/announcementState\";\r\nimport {myAnnouncementsStateReducer} from \"./reducers/myAnnouncementState/myAnnouncementState\";\r\nimport {announcementsListStateReducer} from \"./reducers/announcementsListState/announcementsListState\";\r\nimport formStateReducer from \"./reducers/formState/formState\";\r\n\r\nexport const history = createBrowserHistory()\r\n\r\nconst reducers = () => combineReducers({\r\n    router: connectRouter(history),\r\n    mainState: mainStateReducer,\r\n    announcementsListState: announcementsListStateReducer,\r\n    formState: formStateReducer,\r\n    feedState: feedStateReducer,\r\n    searchBoxState: searchBoxStateReducer,\r\n    announcementState: announcementStateReducer,\r\n    myAnnouncementsState: myAnnouncementsStateReducer,\r\n    settingsState: settingsStateReducer,\r\n    authorizationState: authorizationStateReducer\r\n})\r\n\r\ntype rootReducerType = typeof reducers\r\nexport type AppStateType = ReturnType<rootReducerType>\r\n\r\nconst store = createStore(reducers(), applyMiddleware(routerMiddleware(history), thunkMiddleWare))\r\n\r\nexport default store","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./app/App\";\n\nimport { ConnectedRouter } from \"connected-react-router\"\nimport { Provider } from \"react-redux\"\n\nimport store, {history} from \"./redux/store\"\n\n(window as any).store = store\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <ConnectedRouter history={history}>\n                <App/>\n            </ConnectedRouter>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n)"],"sourceRoot":""}
{"version":3,"sources":["pictures/defaultAvatar.jpg","components/logo/logo.tsx","hooks/useOutsideClick.tsx","components/modalWindow/modalWindow.tsx","components/textInput/textInput.tsx","api/testAPI.ts","redux/reducers/mainState/mainState.tsx","redux/reducers/authorizationState/authorizationState.tsx","redux/reducers/authorizationState/authorizationStateActionCreators.tsx","components/searchBox/select/selectItem/selectItem.tsx","components/searchBox/select/select.tsx","redux/reducers/searchBoxState/searchBoxState.tsx","redux/reducers/searchBoxState/searchBoxStateActionCreators.tsx","redux/reducers/feedState/feedState.tsx","redux/reducers/feedState/feedStateActionCreators.tsx","redux/reducers/settingsState/settingsState.tsx","redux/reducers/settingsState/settingsStateActionCreators.tsx","redux/reducers/announcementState/announcementState.tsx","redux/reducers/announcementState/announcementStateActionCreators.tsx","redux/reducers/myAnnouncementState/myAnnouncementState.tsx","redux/reducers/myAnnouncementState/myAnnouncementStateActionCreators.tsx","redux/reducers/announcementsListState/announcementsListState.tsx","redux/reducers/announcementsListState/announcementsListStateActionCreators.tsx","redux/reducers/mainState/mainStateActionCreators.tsx","redux/thunks/thunks.tsx","redux/reducers/authorizationState/authorizationStateSelectors.tsx","redux/reducers/mainState/mainStateSelectors.tsx","components/button/button.tsx","redux/reducers/formState/formState.ts","redux/reducers/formState/formStateActionCreators.tsx","redux/reducers/formState/formStateSelectors.tsx","components/modalWindow/authorizationModalWindow/authorizationPopupBox.tsx","components/modalWindow/authorizationModalWindow/authorizationModalWindow.tsx","components/modalWindow/alertModalWindow/alertPopupBox.tsx","components/modalWindow/alertModalWindow/alertModalWindow.tsx","redux/reducers/settingsState/settingsStateSelectors.tsx","components/header/header.tsx","redux/reducers/searchBoxState/searchBoxStateSelectors.tsx","components/searchBox/searchBox.tsx","redux/reducers/feedState/feedStateSelectors.tsx","components/image/image.tsx","components/announcement/announcement.tsx","components/footer/footer.tsx","components/buttonUp/buttonUp.tsx","components/preloader/preloader.tsx","pages/feedPage/feedPage.tsx","pages/contactsPage/contactsPage.tsx","hocs/withAuthRedirectHoc.tsx","components/imagePicker/imagePicker.tsx","pages/settingsPage/settingsPage.tsx","redux/reducers/announcementState/announcementStateSelectors.tsx","components/slider/slider.tsx","pages/announcementPage/announcementPage.tsx","redux/reducers/myAnnouncementState/myAnnouncementStateSelectors.tsx","hooks/useInfinityScroll.tsx","pages/myAnnouncementsPage/myAnnouncementsPage.tsx","pages/createAnnouncement/createAnnouncement.tsx","redux/reducers/announcementsListState/announcementsListStateSelectors.tsx","components/navCategoryButton/navCategoryButton.tsx","pages/announcementsListPage/announcementsListPage.tsx","app/App.tsx","redux/store.tsx","index.tsx"],"names":["module","exports","Logo","props","to","className","useOutsideClick","ref","handler","listener","event","popupBox","current","path","composed","composedPath","includes","useEffect","document","addEventListener","removeEventListener","ModalWindow","isActiveFromProps","modal","withOpenBtn","children","alertCloseHandler","useRef","useState","isActive","setIsActive","closeModalWindow","withAlertClose","React","cloneElement","onClick","TextInput","placeholder","value","key","onBlurHandler","onChangeHandler","inputType","label","isValid","style","resize","rows","onChange","onBlur","type","testAPI","baseUrl","postAuthorizationData","data","console","log","fetch","postRegistrationData","getLastAnnouncements","page","getUserInfo","getSubwayStations","getAnnouncementsByFilters","name","category","subway","getAnnouncementsList","getAnnouncementByIdThunk","id","getMyAnnouncements","postDeleteAnnouncement","postSettingsByField","field","postSettingsAvatar","postSettingsName","postSettingsPhone","postSettingsLogin","postLogout","postDelete","postNewAnnouncement","getItemFromLocalStorage","feild","localStorage","getItem","setItemToLocalStorage","setItem","clearLocalStorage","clear","initialState","isFetching","subwayStationsData","categoriesData","subCategories","mainStateReducer","state","action","payload","isRegistration","isCorrectAuthData","isAuth","authorizationStateReducer","setIsCorrectAuthDataAC","SelectItem","initialStateSubway","initialStateCategory","Select","selectItems","placeHolder","onChangeHandlerSelectItem","toggleIsActive","boolean","prevIsActive","readOnly","map","selectItem","searchedData","currentPage","totalNumOfPages","searchConfig","categoryId","subwayStations","searchValue","searchBoxStateReducer","withConcat","location","pathname","initialStateSearchConfig","LOCATION_CHANGE","PATH_SEARCH","newSearchedData","concat","newCurrentPage","setSearchedDataAC","setIsFetchingSearchReducerAC","setTotalNumOfPageSearchReducerAC","setSearchConfigCategoryAC","lastAnnouncements","descriptionSalamRu","feedStateReducer","newLastAnnouncements","setLastAnnouncementsAC","avatar","defaultAvatar","phone","login","password","settingsStateReducer","setSettingsInLocalStorageByFieldAC","announcement","announcementStateReducer","settIsFetchingAnnouncementReducerAC","myAnnouncements","myAnnouncementsStateReducer","newMyAnnouncementsSet","newMyAnnouncementsDel","filter","setMyAnnouncementsAC","settIsFetchingMyAnnouncementsReducerAC","setTotalNumOfPageMyAnnouncementReducerAC","announcementsList","announcementsListStateReducer","setAnnouncementsListAC","setTotalNumOfPageAnnouncementsListReducerAC","setIsFetchingMainStateAC","getAnnouncementsByFiltersThunk","dispatch","getState","searchBoxState","then","response","status","json","pages","announcements","catch","err","error","getLastAnnouncementsThunk","postLogoutOrDeleteUser","logoutOrDelete","result","push","PATH_FEED","getMyAnnouncementsThunk","myAnnouncementsState","getAnnouncementsListThunk","announcementsListState","getUserInfoThunk","restUserData","Object","entries","forEach","getIsRegistrationSelector","authorizationState","getIsAuthSelector","getIsCorrectAuthDataSelector","getIsFetchingMainStateSelector","mainState","getSubwayStationsDataSelector","getCategoriesDataSelector","getTheSubCategoriesSelector","activeClassName","isIncludesSubCategory","categoryData","reduce","newCategoriesData","baseCategory","prepareCategoryToPush","Button","isDisabled","onClickHandler","defaultInitialStateForFormField","authorization","isReadyToSend","registration","phoneNumber","createAnnouncement","photoList","price","description","sellerPhone","stationId","settings","checkIsValid","length","JSON","stringify","prepareFormStateByPageForSend","restFormState","stateEntries","defaultCondition","postData","condition","formStateReducer","stateByPage","stateByField","stateKeys","keys","newState","seValueFormReducerAC","setIsValidFormReducerAC","checkIsReadyToSendByPageFormReducerAC","resetToInitialByPageFormReducerAC","getFieldsByPageFormReducerSelector","formState","AuthorizationPopupBox","useSelector","authFormState","regFormState","currentFormState","useDispatch","sendAuthorizationOrRegistration","useCallback","sendAuthorizationOrRegistrationThunk","setIsRegistration","seValueFormReducer","setIsCorrectAuthData","setIsValidFormReducer","resetToInitialByPageFormReducer","checkIsReadyToSend","getInputsConfig","currentTarget","AuthorizationModalWindow","openModalWindow","AlertPopupBox","alertText","btnOneLabel","btnOneConfiguration","btnTwoConfiguration","btnTwoHandler","btnTwoLabel","AlertModalWindow","openBtnElement","btnOneHandler","getSettingsFieldValueByFieldSelector","settingsState","Header","logoutUser","isActiveAuthModal","setIsActiveAuthModal","isActiveAuthMenu","setIsActiveAuthMenu","isActiveLogoutAlert","setIsActiveLogoutAlert","toggleIsActiveAuthMenu","prevState","alertCreateAnnouncement","alertLogout","linkToCreateAnnouncement","PATH_CREATE_ANNOUNCEMENT","authMenu","PATH_MY_ANNOUNCEMENTS","PATH_SETTINGS","getSearchedDataSelector","getSearchConfigCategorySelector","getSearchConfigSubwayStationsSelector","getSearchConfigSearchValueSelector","getIsFetchingSearchReducerSelector","getCurrentPageSearchReducerSelector","getTotalNumOfPageSearchReducerSelector","SearchBox","history","useHistory","searchConfigCategory","searchConfigSubwayStation","searchConfigSearchValue","resetToInitialStateSearchReducer","setSearchConfigCategory","setSearchConfigSubwayStation","station","setSearchConfigSearchValue","setSearchConfigSearchValueAC","setSearchValue","selectItemOnChangeHandler","setIsActiveSelect","target","GET_PATH_SEARCH","getLastAnnouncementsSelector","feedState","getDescriptionSalamRuSelector","Image","photo","backgroundImage","Announcement","creationDate","subwayStation","Footer","linkConfigs","PATH_CONTACTS","ButtonUp","isView","setIsView","onScrollHandler","currentHeight","Math","ceil","window","innerHeight","scrollY","scrollTo","memo","FeedPage","lastAnnouncement","ContactsPage","withAuthRedirectHoc","Component","ImagePicker","onLoadHandler","file","files","Date","now","reader","FileReader","onload","readAsDataURL","settingsStateEntries","postSettingByField","values","postSettingByFieldThunk","deleteUser","image","imageName","restConfig","valueFromSettingsState","getAnnouncementSelector","announcementState","getIsFetchingAnnouncementReducerSelector","currentSlide","setCurrentSlide","changeSlide","nextOrPrev","transformStyle","transform","child","AnnouncementPage","photos","contactName","contactPhone","getAnnouncementById","useParams","goBack","getMyAnnouncementsSelector","getIsFetchingMyAnnouncementsReducerSelector","getCurrentPageMyAnnouncementsReducerSelector","getTotalNumOfPagesMyAnnouncementsReducerSelector","useInfinityScroll","scrollHandler","max","body","scrollHeight","documentElement","offsetHeight","clientHeight","setCurrentPage","delMyAnnouncementByIdAC","postDeleteAnnouncementThunk","restMyAnnouncement","phoneRedux","postNewAnnouncementThunk","setValueFormReducer","getErrorClassName","height","newPhotosValue","deleteLoadedImage","getAnnouncementsListSelector","getCurrentPageAnnouncementsListReducerSelector","getTotalNumOfPagesAnnouncementsListReducerSelector","NavCategoryButton","configCategory","AnnouncementsListPage","substr","currentCategory","currentSubway","isFetchingSearchState","isEqualsCurrAndTotalPageSearch","isSearchState","isFetchingMainState","isEqualsCurrAndTotalPage","getAnnouncements","setCurrentPageSearchBox","resetToInitialStateAnnouncementsList","setState","subCategoryData","App","getUserData","exact","component","CreateAnnouncement","MyAnnouncementsPage","SettingsPage","createBrowserHistory","store","createStore","combineReducers","router","connectRouter","applyMiddleware","routerMiddleware","thunkMiddleWare","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.f2f63d00.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/defaultAvatar.d73128e4.jpg\";","import React from 'react';\nimport \"./logoStyles.css\"\nimport { NavLink } from 'react-router-dom';\n\nconst Logo = (props: any) => {\n\n  return (\n      <NavLink to={\"/feed\"}>\n          <div className=\"logo navbar-brand mb-0 h1 d-flex\">\n              <span className={\"border rounded d-flex align-items-center p-0 pl-2 pr-2 mr-2 font-weight-bold bg-warning text-dark border-dark\"}>S</span>\n              <span className={\"font-weight-bold\"}>salam.ru</span>\n          </div>\n      </NavLink>\n\n  );\n}\n\nexport default Logo;\n","import React, {useEffect} from 'react';\n\nconst useOutsideClick = (ref: any, handler: any) => {\n\n    const listener = (event: any) => {\n        const popupBox = ref.current\n        const target = event.path || ( event.composed && event.composedPath() )\n        !target.includes(popupBox) && handler(event);\n    }\n\n  useEffect(() => {\n        document.addEventListener('click', listener)\n        return () => document.removeEventListener('click', listener)\n      }, [ref, handler]\n  );\n}\n\nexport default useOutsideClick;\n","import React, {ReactElement, Ref, useEffect, useRef, useState} from 'react';\nimport \"./modalWindowStyles.css\"\nimport useOutsideClick from '../../hooks/useOutsideClick';\n\ntype propsTypes = {\n    alertCloseHandler?: Function\n    isActiveFromProps?: boolean\n    children?: any\n    withOpenBtn?: boolean\n    modal: ReactElement\n}\n\nconst ModalWindow = (props: propsTypes) => {\n\n    const {isActiveFromProps, modal, withOpenBtn = false, children, alertCloseHandler = () => null} = props\n    const ref: Ref<any> = useRef(null)\n\n    const [isActive, setIsActive] = useState(false)\n\n    useEffect(() => {\n      isActiveFromProps && setIsActive(true)\n    }, [isActiveFromProps])\n\n    const outsideClickHandler = () => {\n      isActive && closeModalWindow()\n    }\n    const closeModalWindow = (withAlertClose = true) => {\n        setIsActive(false)\n        withAlertClose && alertCloseHandler()\n    }\n\n    useOutsideClick(ref, outsideClickHandler)\n\n    return (\n\n        <>\n            <div className={`modalWindow ${isActive && \"modalWindow__active\"} `}>\n                <div ref={ref} className=\"modalWindow__popupBox\">\n                    {React.cloneElement(modal, {closeModalWindow})}\n                    <span onClick={() => closeModalWindow()} className={\"popup__close\"}>&times;</span>\n                </div>\n            </div>\n            { withOpenBtn && children(() => setIsActive(true)) }\n        </>\n    );\n}\n\nexport default ModalWindow;\n","import React from 'react';\r\nimport \"./textInputStyles.css\"\r\n\r\ntype propsTypes = {\r\n  placeholder?:string\r\n  inputType?: string\r\n  value: string\r\n  key?: number | string\r\n  onBlurHandler: Function\r\n  onChangeHandler: Function\r\n  isValid?: boolean\r\n  className?: string\r\n  label?: string\r\n}\r\n\r\nconst TextInput = (props: propsTypes) => {\r\n\r\n  const {\r\n    className,\r\n    placeholder,\r\n    value, key,\r\n    onBlurHandler,\r\n    onChangeHandler,\r\n    inputType = \"text\",\r\n    label = \"\",\r\n    isValid = true} = props\r\n\r\n  return (\r\n        <div className={`textInput ${!isValid ? \"textInput__alert\" : null} ${className}`}>\r\n          <label>{label}</label>\r\n          {inputType === \"textArea\" ?\r\n              <textarea style={{resize: \"none\"}} rows={6} className={\"form-control\"} onChange={(event) => onChangeHandler(event)} placeholder={placeholder}\r\n                        onBlur={(event) => onBlurHandler(event)} value={value}/> :\r\n              <input className={\"form-control\"} key={key} onBlur={(event) => onBlurHandler(event)} value={value} type={inputType} placeholder={placeholder}\r\n                     onChange={(event) => onChangeHandler(event)} />}\r\n        </div>\r\n  );\r\n}\r\n\r\nexport default TextInput;\r\n","// ------AUTHORIZATION-TYPES-----//\r\nimport {SettingsFieldType} from \"../redux/reducers/settingsState/settingsState\";\r\n\r\nexport type AuthorizationData = { login: string,  password: string }\r\nexport type RegistrationData = { name: string,  login: string, password: string }\r\n\r\n// ------CREATE-ANNOUNCEMENT-PAGE---//?\r\nexport type NewAnnouncementData = {\r\n    category: number,\r\n    name: string,\r\n    description: string\r\n    photos?: Array<string>,\r\n    price: number,\r\n    subway: string,\r\n    phone: string\r\n}\r\n\r\n// ------SEARCH-BOX-TYPES-----//\r\nexport type GetAnnouncementsCategoryType = \"announcements\" |  \"housing\" | \"apartment\" | \"bunk\" | \"room\" | \"job\" | \"vacancies\" | string\r\n\r\n// ------SETTINGS-TYPES---//\r\nexport type PostSettingsAvatarData = { avatar: string }\r\nexport type PostSettingsNameData = { name: string }\r\nexport type PostSettingsEmailData = { email: string }\r\nexport type PostSettingsPhoneData = { phone: string }\r\n\r\nexport class testAPI {\r\n\r\n    static baseUrl = './json/'\r\n\r\n    // ------AUTHORIZATION-----//\r\n    static postAuthorizationData = (data: AuthorizationData): Promise<Response> => {\r\n        console.log(data, \"postAuthorizationData\")\r\n         return fetch(`https://5faa7de0b5c645001602aa4e.mockapi.io/responseForPost`)\r\n    }\r\n\r\n    static postRegistrationData = (data: RegistrationData): Promise<Response> => {\r\n        console.log(data, \"postRegistrationData\")\r\n        return fetch(`https://5faa7de0b5c645001602aa4e.mockapi.io/responseForPost`)\r\n    }\r\n\r\n    // ------FEED-PAGE-----//\r\n    //@response  20 последних объявлений\r\n    static getLastAnnouncements = (page: number): Promise<Response> => {\r\n        console.log(\"getLastAnnouncements\")\r\n        const path = `getLastAnnouncements`\r\n        return fetch(`https://5faa8c4eb5c645001602abd5.mockapi.io/getAnnouncementsList`)\r\n    }\r\n\r\n    // ------GET-USER-INFO-----//\r\n    static getUserInfo = (): Promise<Response> => {\r\n        console.log(\"getUserInfo\")\r\n        return fetch(`https://5faa8c4eb5c645001602abd5.mockapi.io/getUserData`)\r\n    }\r\n\r\n    // ------SEARCH-BOX-----//\r\n    static getSubwayStations = (): Promise<Response> => {\r\n        console.log(\"getSubwayStations\")\r\n        return fetch(`https://5faa7de0b5c645001602aa4e.mockapi.io/getSubwayStations`)\r\n    }\r\n\r\n    static getAnnouncementsByFilters = (page: number, name?: string, category?: string| number, subway?: string | number): Promise<Response> => {\r\n        const path = `getAnnouncementsByFilters?page=${page}&category=${category}&name=${name}&subway=${subway}`\r\n        console.log(page, category, name, subway, \"getAnnouncementsByFilters\", path)\r\n        return fetch(`https://5faa8c4eb5c645001602abd5.mockapi.io/getAnnouncementsByFilters`)\r\n    }\r\n\r\n    //---REQUEST-FOR-SEARCH-BOX/FEED-PAGE/HOUSING/JOB/TRADING---//\r\n    static getAnnouncementsList = (page: number, category: GetAnnouncementsCategoryType): Promise<Response> => {\r\n        const path = `getAnnouncementsByCategoryAndName?page=${page}&category=${category}`\r\n        console.log(page, category, \"getAnnouncementsByCategoryAndName\", path)\r\n        return fetch(`https://5faa8c4eb5c645001602abd5.mockapi.io/getAnnouncementsList`)\r\n    }\r\n\r\n    // ------GET-ANNOUNCEMENT-BY-CATEGORY-AND-ID----//\r\n    static getAnnouncementByIdThunk = (category: GetAnnouncementsCategoryType, id: number): Promise<Response> => {\r\n        console.log(\"getAnnouncementByIdThunk\", category, id)\r\n        const path = `getAnnouncementByIdThunk/${category}/${id}`\r\n        return fetch(`https://5faa7de0b5c645001602aa4e.mockapi.io/getAnnouncement`)\r\n    }\r\n\r\n    // ------MY-ANNOUNCEMENTS-PAGE---//\r\n    static getMyAnnouncements = (page: number): Promise<Response> => {\r\n        console.log(\"getMyAnnouncements\")\r\n        const path = `getMyAnnouncements?page=${page}`\r\n        return fetch(`https://5faa7de0b5c645001602aa4e.mockapi.io/getMyAnnouncements`)\r\n    }\r\n\r\n    static postDeleteAnnouncement = (id:number): Promise<Response> => {\r\n        console.log(id, \"postDeleteAnnouncement\")\r\n        return fetch(`https://5faa7de0b5c645001602aa4e.mockapi.io/responseForPost`)\r\n    }\r\n\r\n\r\n    // ------SETTINGS-PAGE---//\r\n\r\n    static postSettingsByField = (data: any, field: SettingsFieldType): Promise<Response> => {\r\n        console.log(data, \"postSettingsByField\")\r\n        switch (field) {\r\n            case \"avatar\": return testAPI.postSettingsAvatar(data)\r\n            case \"name\": return testAPI.postSettingsName(data)\r\n            case \"phone\": return testAPI.postSettingsPhone(data)\r\n            case \"login\": return testAPI.postSettingsLogin(data)\r\n            default: return testAPI.postSettingsAvatar(data)\r\n        }\r\n    }\r\n    static postSettingsAvatar = (data: PostSettingsAvatarData): Promise<Response> => {\r\n        console.log(data, \"postSettingsAvatar\")\r\n        return fetch(`https://5faa7de0b5c645001602aa4e.mockapi.io/responseForPost`)\r\n    }\r\n\r\n    static postSettingsName = (data: PostSettingsNameData): Promise<Response> => {\r\n        console.log(data, \"postSettingsName\")\r\n        return fetch(`https://5faa7de0b5c645001602aa4e.mockapi.io/responseForPost`)\r\n    }\r\n\r\n    static postSettingsLogin = (data: PostSettingsEmailData): Promise<Response> => {\r\n        console.log(data, \"postSettingsLogin\")\r\n        return fetch(`https://5faa7de0b5c645001602aa4e.mockapi.io/responseForPost`)\r\n    }\r\n\r\n    static postSettingsPhone = (data: PostSettingsPhoneData): Promise<Response> => {\r\n        console.log(data, \"postSettingsPhone\")\r\n        return fetch(`https://5faa7de0b5c645001602aa4e.mockapi.io/responseForPost`)\r\n    }\r\n\r\n    static postLogout = (): Promise<Response> => {\r\n        console.log(\"postLogout\")\r\n        return fetch(`https://5faa7de0b5c645001602aa4e.mockapi.io/responseForPost`)\r\n    }\r\n\r\n    static postDelete = (): Promise<Response> => {\r\n        console.log(\"postDelete\")\r\n        return fetch(`https://5faa7de0b5c645001602aa4e.mockapi.io/responseForPost`)\r\n    }\r\n\r\n    // ------CREATE-ANNOUNCEMENT-PAGE---//\r\n    static postNewAnnouncement = (data: NewAnnouncementData): Promise<Response> => {\r\n        console.log(data, \"postNewAnnouncement\")\r\n        return fetch(`https://5faa7de0b5c645001602aa4e.mockapi.io/responseForPost`)\r\n    }\r\n}","\r\nexport const getItemFromLocalStorage = (feild:string) => localStorage.getItem(feild)\r\nexport const setItemToLocalStorage = (feild:string, value:any) => localStorage.setItem(feild, value)\r\nexport const clearLocalStorage = () => localStorage.clear()\r\n\r\nexport const SET_IS_FETCHING_MAIN_STATE = \"SET_IS_FETCHING_MAIN_STATE\"\r\nexport const SET_SUBWAY_STATIONS_DATA = \"SET_SUBWAY_STATIONS_DATA\"\r\n\r\ntype initialStateType = typeof initialState\r\nconst initialState = {\r\n    isFetching: false,\r\n    subwayStationsData: [],\r\n    categoriesData : [\r\n        { id: 0, label: \"Любая категория\", category: \"all\"},\r\n        {\r\n            id: 1,\r\n            label: \"Недвижимость\",\r\n            category: \"housing\",\r\n            subCategories : [\r\n                {id: 2, label: \"Квартиры\", category: \"apartments\"},\r\n                {id: 3, label: \"Комната\", category: \"bunk\"},\r\n                {id: 4, label: \"Койко-место\", category: \"room\"}\r\n            ]\r\n        },\r\n        {\r\n            id: 5,\r\n            label: \"Работа\",\r\n            category: \"job\",\r\n            subCategories : [\r\n                {id: 6, label: \"Вакансии\", category: \"vacancies\"}\r\n            ]\r\n        }\r\n    ]\r\n}\r\n\r\nexport const mainStateReducer = (state = initialState, action : any): initialStateType => {\r\n    const {type, payload } = action\r\n    const { value } = payload || {}\r\n\r\n    switch (type) {\r\n        case SET_IS_FETCHING_MAIN_STATE :\r\n            console.log(\"SET_IS_FETCHING_MAIN_STATE\", value)\r\n            return {...state, isFetching: value}\r\n        case SET_SUBWAY_STATIONS_DATA :\r\n            console.log(\"SET_SUBWAY_STATIONS_DATA\", value)\r\n            return {...state, subwayStationsData: value}\r\n        default: return state\r\n    }\r\n}","import {AuthorizationStateActionTypes} from \"./authorizationStateActionCreators\";\r\nimport {getItemFromLocalStorage, setItemToLocalStorage, clearLocalStorage} from \"../mainState/mainState\";\r\nimport {SET_IS_FETCHING_SETTINGS_REDUCER} from \"../settingsState/settingsState\";\r\n\r\nexport const SET_IS_REGISTRATION = \"SET_IS_REGISTRATION\"\r\nexport const SET_IS_CORRECT_AUTH_DATA = \"SET_IS_CORRECT_AUTH_DATA\"\r\nexport const SET_IS_AUTH = \"SET_IS_AUTH\"\r\nexport const LOGOUT_OR_DELETE_USER = \"LOGOUT_OR_DELETE_USER\"\r\n\r\ntype initialStateType = typeof initialState\r\nconst initialState = {\r\n    isRegistration: false,\r\n    isCorrectAuthData: true,\r\n    isAuth: () => getItemFromLocalStorage(\"isAuth\") !== null\r\n}\r\n\r\nexport const authorizationStateReducer = (state = initialState, action : AuthorizationStateActionTypes): initialStateType => {\r\n    const {type, payload } = action\r\n    const { value } = payload || {}\r\n\r\n    switch (type) {\r\n        case SET_IS_REGISTRATION :\r\n            console.log(\"SET_IS_REGISTRATION\", value)\r\n            return {...state, isRegistration: value}\r\n        case SET_IS_CORRECT_AUTH_DATA :\r\n            console.log(\"SET_IS_CORRECT_AUTH_DATA\", value)\r\n            return {...state, isCorrectAuthData: value}\r\n        case SET_IS_AUTH :\r\n            console.log(\"SET_IS_AUTH\", value)\r\n            setItemToLocalStorage(\"isAuth\", value)\r\n            return {...state, isAuth: () => getItemFromLocalStorage(\"isAuth\") !== null}\r\n        case LOGOUT_OR_DELETE_USER:\r\n            console.log(\"LOGOUT_OR_DELETE_USER\")\r\n            clearLocalStorage()\r\n            return state\r\n        default: return state\r\n    }\r\n}","import {LOGOUT_OR_DELETE_USER, SET_IS_AUTH, SET_IS_CORRECT_AUTH_DATA, SET_IS_REGISTRATION} from \"./authorizationState\";\r\n\r\nexport type AuthorizationStateActionTypes  = SetIsRegistrationACType | SetIsAuthACType | SetIsCorrectAuthDataACType\r\n\r\nexport type SetIsRegistrationACType = {\r\n    type: typeof SET_IS_REGISTRATION\r\n    payload : { value: boolean }\r\n}\r\nexport type SetIsAuthACType = {\r\n    type: typeof SET_IS_AUTH | string\r\n    payload : { value: boolean }\r\n}\r\nexport type SetIsCorrectAuthDataACType = {\r\n    type: typeof SET_IS_CORRECT_AUTH_DATA | string\r\n    payload : { value: boolean }\r\n}\r\n\r\nexport type LogoutOrDeleteUserACType = { type: typeof LOGOUT_OR_DELETE_USER | string }\r\n\r\nexport const setIsRegistrationAC = (value:boolean):SetIsRegistrationACType => ({ type: SET_IS_REGISTRATION, payload: {value} })\r\nexport const setIsCorrectAuthDataAC = (value:boolean):SetIsCorrectAuthDataACType => ({ type: SET_IS_CORRECT_AUTH_DATA, payload: {value} })\r\nexport const setIsAuthAC = (value:boolean): SetIsAuthACType => ({ type: SET_IS_AUTH, payload: {value} })\r\nexport const logoutOrDeleteUseAC = (): LogoutOrDeleteUserACType => ({ type: LOGOUT_OR_DELETE_USER })","import React from 'react';\nimport \"./selectItem.css\"\n\ntype PropsType = {\n    label?: string\n    name?: string\n    isActive: any\n    onChangeHandler: any\n    className?: string\n}\n\nconst SelectItem = (props: PropsType) => {\n\n    const {label = \"\", name = \"\", isActive, onChangeHandler, className} = props\n\n    return (\n        <div onClick={onChangeHandler} className={`selectItem dropdown-item ${className}`}>\n            {label || name}\n            {/*<input checked={isActive} type=\"radio\" className=\"selectItem__checkBox\"/>*/}\n        </div>\n    );\n}\n\nexport default SelectItem;\n","import React, {useRef, useState} from 'react';\nimport \"./selectStyles.css\"\nimport SelectItem from \"./selectItem/selectItem\";\nimport useOutsideClick from \"../../../hooks/useOutsideClick\";\n\n//TODO Перенести в mainState\nexport const initialStateSubway = {id: 0, name: \"Все станции метро\"}\nexport const initialStateCategory = { id: 0, label: \"Любая категория\", category: \"all\"}\n\nconst Select = (props: any) => {\n    const {\n        selectItems = [],\n        placeHolder,\n        onChangeHandler,\n        onBlurHandler = null,\n        onChangeHandlerSelectItem,\n        value,\n        className\n    } = props\n\n    const [isActive, setIsActive] = useState(false)\n    const ref = useRef(null)\n    const outsideClickHandler = () => isActive && setIsActive(false)\n    useOutsideClick(ref, outsideClickHandler)\n\n    const toggleIsActive: (boolean?: any) => void = (boolean:any = null) => {\n        console.log(\"toggleIsActive\", boolean)\n        setIsActive(prevIsActive => boolean !== null ? boolean : !prevIsActive)\n    }\n\n    return (\n        <div ref={ref} className={`select dropdown ${className} p-0`}>\n                <input onClick={() => toggleIsActive()} onBlur={onBlurHandler} readOnly={true} onChange={onChangeHandler}\n                       placeholder={placeHolder}\n                       className={\"select__current form-control dropdown-toggle w-100\"}\n                       value={value} type=\"text\"/>\n                {/*<div className={\"select__current-arrow\"}>&darr;</div>*/}\n            <div className={`select__items dropdown-menu w-100 ${isActive && \"show\"}`}>\n                {selectItems.map((selectItem: any) =>\n                    <SelectItem {...selectItem} onChangeHandler={(event:any) => onChangeHandlerSelectItem(selectItem, toggleIsActive)}/>)}\n            </div>\n        </div>\n    );\n}\n\nexport default Select;\n","import {initialStateCategory, initialStateSubway} from \"../../../components/searchBox/select/select\";\r\nimport {LOCATION_CHANGE} from \"connected-react-router\";\r\nimport {PATH_SEARCH} from \"../../../app/App\";\r\n\r\nexport const SET_SEARCHED_DATA = \"SET_SEARCHED_DATA\"\r\nexport const SET_IS_FETCHING_SEARCH_REDUCER = \"SET_IS_FETCHING_SEARCH_REDUCER\"\r\nexport const SET_CURRENT_PAGE_SEARCH_REDUCER = \"SET_CURRENT_PAGE_SEARCH_REDUCER\"\r\nexport const SET_TOTAL_NUM_OF_PAGE_SEARCH_REDUCER = \"SET_TOTAL_NUM_OF_PAGE_SEARCH_REDUCER\"\r\nexport const RESET_TO_INITIAL_SEARCH_REDUCER = \"RESET_TO_INITIAL_SEARCH_REDUCER\"\r\nexport const SET_SEARCH_CONFIG_CATEGORY_ID = \"SET_SEARCH_CONFIG_CATEGORY_ID\"\r\nexport const SET_SEARCH_CONFIG_SUBWAY_STATIONS = \"SET_SEARCH_CONFIG_SUBWAY_STATIONS\"\r\nexport const SET_SEARCH_CONFIG_SEARCH_VALUE = \"SET_SEARCH_CONFIG_SEARCH_VALUE\"\r\n\r\nexport type initialStateType = typeof initialState\r\n\r\nconst initialState = {\r\n    searchedData : [],\r\n    currentPage : 0,\r\n    totalNumOfPages: 1,\r\n    isFetching: false,\r\n    searchConfig : {\r\n        categoryId: initialStateCategory,\r\n        subwayStations: initialStateSubway,\r\n        searchValue: \"\"\r\n    }\r\n}\r\n\r\nexport const searchBoxStateReducer = (state = initialState, action: any): initialStateType => {\r\n    const { type, payload } = action\r\n    const { value, withConcat, location : {pathname = \"/\"} = {} } = payload || {}\r\n    const { searchedData, currentPage, searchConfig } = state\r\n    const {searchConfig: initialStateSearchConfig} = initialState\r\n\r\n    switch (type) {\r\n        case LOCATION_CHANGE :\r\n            console.log(\"LOCATION_CHANGE\", payload)\r\n            return !pathname.includes(PATH_SEARCH) ?\r\n                {...state, searchConfig: initialStateSearchConfig} : state\r\n        case SET_SEARCHED_DATA :\r\n            console.log(\"SET_SEARCHED_DATA\", value)\r\n            const newSearchedData = withConcat ? searchedData.concat(value) : value\r\n            return {...state, searchedData: newSearchedData}\r\n        case SET_IS_FETCHING_SEARCH_REDUCER :\r\n            console.log(\"SET_IS_FETCHING_SEARCH_REDUCER\", value)\r\n            return {...state, isFetching: value}\r\n        case SET_CURRENT_PAGE_SEARCH_REDUCER :\r\n            const newCurrentPage = currentPage + 1\r\n            console.log(\"SET_CURRENT_PAGE_SEARCH_REDUCER\", newCurrentPage)\r\n            return {...state, currentPage: newCurrentPage}\r\n        case SET_TOTAL_NUM_OF_PAGE_SEARCH_REDUCER :\r\n            console.log(\"SET_TOTAL_NUM_OF_PAGE_SEARCH_REDUCER\", value)\r\n            return {...state, totalNumOfPages: value}\r\n        case RESET_TO_INITIAL_SEARCH_REDUCER :\r\n            console.log(\"RESET_TO_INITIAL_SEARCH_REDUCER\", value)\r\n            return {...initialState, searchConfig: {...searchConfig}}\r\n        case SET_SEARCH_CONFIG_CATEGORY_ID :\r\n            console.log(\"SET_SEARCH_CONFIG_CATEGORY_ID\", value)\r\n            return {...state, searchConfig: {...searchConfig, categoryId: value}}\r\n        case SET_SEARCH_CONFIG_SUBWAY_STATIONS :\r\n            console.log(\"SET_SEARCH_CONFIG_SUBWAY_STATIONS\", value)\r\n            return {...state, searchConfig: {...searchConfig, subwayStations: value}}\r\n        case SET_SEARCH_CONFIG_SEARCH_VALUE :\r\n            console.log(\"SET_SEARCH_CONFIG_SEARCH_VALUE\", value)\r\n            return {...state, searchConfig: {...searchConfig, searchValue: value}}\r\n        default: return state\r\n    }\r\n}","import {\r\n    SET_SEARCHED_DATA,\r\n    SET_IS_FETCHING_SEARCH_REDUCER,\r\n    SET_CURRENT_PAGE_SEARCH_REDUCER,\r\n    SET_TOTAL_NUM_OF_PAGE_SEARCH_REDUCER,\r\n    RESET_TO_INITIAL_SEARCH_REDUCER,\r\n    SET_SEARCH_CONFIG_CATEGORY_ID,\r\n    SET_SEARCH_CONFIG_SUBWAY_STATIONS, SET_SEARCH_CONFIG_SEARCH_VALUE,\r\n} from \"./searchBoxState\";\r\n\r\nexport const setSearchedDataAC = (value:Array<any>, withConcat:boolean):SetSearchedDataAType => ({ type: SET_SEARCHED_DATA, payload: {value, withConcat} })\r\nexport const setIsFetchingSearchReducerAC = (value:boolean):SetIsFetchingSearchReducerACType => ({ type: SET_IS_FETCHING_SEARCH_REDUCER, payload: {value} })\r\nexport const setCurrentPageSearchReducerAC = ():SetCurrentPageSearchReducerACType => ({ type: SET_CURRENT_PAGE_SEARCH_REDUCER })\r\nexport const setTotalNumOfPageSearchReducerAC = (value:number):SetTotalNumOfPageSearchReducerACType => ({ type: SET_TOTAL_NUM_OF_PAGE_SEARCH_REDUCER, payload: {value} })\r\nexport const resetToInitialStateSearchReducerAC = ():ResetToInitialStateSearchReducerACType => ({ type: RESET_TO_INITIAL_SEARCH_REDUCER })\r\nexport const setSearchConfigCategoryAC = (value:number):SetSearchConfigCategoryACType => ({ type: SET_SEARCH_CONFIG_CATEGORY_ID, payload: {value} })\r\nexport const setSearchConfigSubwayStationsAC = (value:string):SetSearchConfigSubwayStationsACType => ({ type: SET_SEARCH_CONFIG_SUBWAY_STATIONS, payload: {value} })\r\nexport const setSearchConfigSearchValueAC = (value:string):SetSearchConfigSearchValueACType => ({ type: SET_SEARCH_CONFIG_SEARCH_VALUE, payload: {value} })\r\n\r\n\r\n\r\nexport type SetSearchedDataAType = { type: typeof SET_SEARCHED_DATA, payload: { value: Array<any>, withConcat: boolean}}\r\nexport type SetIsFetchingSearchReducerACType = { type: typeof SET_IS_FETCHING_SEARCH_REDUCER, payload: { value: boolean }}\r\nexport type SetCurrentPageSearchReducerACType = { type: typeof SET_CURRENT_PAGE_SEARCH_REDUCER }\r\nexport type SetTotalNumOfPageSearchReducerACType = { type: typeof SET_TOTAL_NUM_OF_PAGE_SEARCH_REDUCER, payload: { value: number } }\r\nexport type ResetToInitialStateSearchReducerACType = { type: typeof RESET_TO_INITIAL_SEARCH_REDUCER }\r\nexport type SetSearchConfigCategoryACType = { type: typeof SET_SEARCH_CONFIG_CATEGORY_ID, payload: { value: number } }\r\nexport type SetSearchConfigSubwayStationsACType = { type: typeof SET_SEARCH_CONFIG_SUBWAY_STATIONS, payload: { value: string }}\r\nexport type SetSearchConfigSearchValueACType = { type: typeof SET_SEARCH_CONFIG_SEARCH_VALUE, payload: { value: string }}\r\n","export const SET_IS_FETCHING_FEED_REDUCER = \"SET_IS_FETCHING_FEED_REDUCER\"\r\nexport const SET_LAST_ANNOUNCEMENTS = \"SET_LAST_ANNOUNCEMENTS\"\r\n\r\ntype initialStateType = typeof initialState\r\nconst initialState = {\r\n    lastAnnouncements: [],\r\n    isFetching: false,\r\n    descriptionSalamRu: \"\"\r\n}\r\n\r\nexport const feedStateReducer = (state = initialState, action: any): initialStateType => {\r\n    const {type, payload } = action\r\n    const { value, withConcat = false } = payload || {}\r\n    const {lastAnnouncements} = state\r\n\r\n    switch (type) {\r\n        case SET_LAST_ANNOUNCEMENTS :\r\n            console.log(\"SET_LAST_ANNOUNCEMENTS\", value)\r\n            const newLastAnnouncements = withConcat ? lastAnnouncements.concat(value) : value\r\n            return {...state, lastAnnouncements: newLastAnnouncements}\r\n        case SET_IS_FETCHING_FEED_REDUCER :\r\n            console.log(\"SET_IS_FETCHING_FEED_REDUCER\", value)\r\n            return {...state, isFetching: value}\r\n        default: return state\r\n    }\r\n}","import { SET_LAST_ANNOUNCEMENTS, SET_IS_FETCHING_FEED_REDUCER } from \"./feedState\"\r\n\r\nexport type SetLastAnnouncementsACType = { type: typeof SET_LAST_ANNOUNCEMENTS, payload: { value: Array<any> , withConcat:boolean}}\r\nexport type SetetIsFetchingFeedReducerACType = { type: typeof SET_IS_FETCHING_FEED_REDUCER, payload: { value: boolean }}\r\n\r\nexport const setLastAnnouncementsAC = (value:Array<any>, withConcat:boolean):SetLastAnnouncementsACType => ({ type: SET_LAST_ANNOUNCEMENTS, payload: {value, withConcat} })\r\nexport const setIsFetchingFeedReducerAC = (value:boolean):SetetIsFetchingFeedReducerACType => ({ type: SET_IS_FETCHING_FEED_REDUCER, payload: {value} })","import {getItemFromLocalStorage, setItemToLocalStorage} from \"../mainState/mainState\";\r\nimport defaultAvatar from \"../../../pictures/defaultAvatar.jpg\"\r\nexport const SET_SETTINGS_IN_LOCAL_STORAGE_BY_FIELD = \"SET_SETTINGS_IN_LOCAL_STORAGE_BY_FIELD\"\r\nexport const SET_IS_FETCHING_SETTINGS_REDUCER = \"SET_IS_FETCHING_SETTINGS_REDUCER\"\r\n\r\ntype initialStateType = typeof initialState\r\nconst initialState = {\r\n    avatar: () => getItemFromLocalStorage(\"avatar\") || defaultAvatar,\r\n    name: () => getItemFromLocalStorage(\"name\") || \"\",\r\n    phone: () => getItemFromLocalStorage(\"phone\") || \"\",\r\n    login: () => getItemFromLocalStorage(\"login\") || \"\",\r\n    password: () => getItemFromLocalStorage(\"password\") || \"\",\r\n    isFetching: false\r\n}\r\n\r\nexport type SettingsFieldType = \"avatar\" | \"name\" | \"phone\" | \"login\" | \"currentPassword\" | \"password\" | string\r\n\r\nexport const settingsStateReducer = (state = initialState, action : any): initialStateType => {\r\n    const {type, payload } = action\r\n    const { value, field } = payload || {}\r\n\r\n    switch (type) {\r\n        case SET_SETTINGS_IN_LOCAL_STORAGE_BY_FIELD :\r\n            console.log(\"SET_SETTINGS_IN_LOCAL_STORAGE_BY_FIELD\", value)\r\n            setItemToLocalStorage(field, value)\r\n            return state\r\n        case SET_IS_FETCHING_SETTINGS_REDUCER :\r\n            console.log(\"SET_IS_FETCHING_SETTINGS_REDUCER\", value)\r\n            return {...state, isFetching: value}\r\n        default: return state\r\n    }\r\n}","import {\r\n    SET_IS_FETCHING_SETTINGS_REDUCER,\r\n    SET_SETTINGS_IN_LOCAL_STORAGE_BY_FIELD,\r\n    SettingsFieldType\r\n} from \"./settingsState\";\r\n\r\nexport type SetSettingsInLocalStorageByFieldACType = {\r\n    type: typeof SET_SETTINGS_IN_LOCAL_STORAGE_BY_FIELD\r\n    payload : { value: any, field:  SettingsFieldType}\r\n}\r\n\r\nexport type SetIsFetchingSettingsReducerACType = {\r\n    type: typeof SET_IS_FETCHING_SETTINGS_REDUCER\r\n    payload : { value: boolean}\r\n}\r\nexport const setSettingsInLocalStorageByFieldAC = (value:any, field:SettingsFieldType):SetSettingsInLocalStorageByFieldACType =>\r\n    ({ type: SET_SETTINGS_IN_LOCAL_STORAGE_BY_FIELD, payload: {value, field} })\r\n\r\nexport const setIsFetchingSettingsReducerAC = (value:boolean):SetIsFetchingSettingsReducerACType =>\r\n    ({ type: SET_IS_FETCHING_SETTINGS_REDUCER, payload: {value} })\r\n","export const SET_IS_FETCHING_ANNOUNCEMENT_REDUCER = \"SET_IS_FETCHING_ANNOUNCEMENT_REDUCER\"\r\nexport const SET_ANNOUNCEMENT = \"SET_ANNOUNCEMENT\"\r\n\r\ntype initialStateType = typeof initialState\r\nconst initialState = {\r\n    announcement: {},\r\n    isFetching: false,\r\n}\r\n\r\nexport const announcementStateReducer = (state = initialState, action: any): initialStateType => {\r\n    const {type, payload } = action\r\n    const { value } = payload || {}\r\n\r\n    switch (type) {\r\n        case SET_ANNOUNCEMENT :\r\n            console.log(\"SET_ANNOUNCEMENT\", value)\r\n            return {...state, announcement: value}\r\n        case SET_IS_FETCHING_ANNOUNCEMENT_REDUCER :\r\n            console.log(\"SET_IS_FETCHING_FEED_REDUCER\", value)\r\n            return {...state, isFetching: value}\r\n        default: return state\r\n    }\r\n}","import { SET_ANNOUNCEMENT, SET_IS_FETCHING_ANNOUNCEMENT_REDUCER } from \"./announcementState\"\r\n\r\nexport type SetAnnouncementsACType = { type: typeof SET_ANNOUNCEMENT, payload: { value: boolean }}\r\nexport type SettIsFetchingAnnouncementReducerACType = { type: typeof SET_IS_FETCHING_ANNOUNCEMENT_REDUCER, payload: { value: boolean }}\r\n\r\nexport const setAnnouncementAC = (value:boolean):SetAnnouncementsACType => ({ type: SET_ANNOUNCEMENT, payload: {value} })\r\nexport const settIsFetchingAnnouncementReducerAC = (value:boolean):SettIsFetchingAnnouncementReducerACType => ({ type: SET_IS_FETCHING_ANNOUNCEMENT_REDUCER, payload: {value} })","import {SET_CURRENT_PAGE_SEARCH_REDUCER, SET_TOTAL_NUM_OF_PAGE_SEARCH_REDUCER} from \"../searchBoxState/searchBoxState\";\r\n\r\nexport const SET_IS_FETCHING_MY_ANNOUNCEMENTS_REDUCER = \"SET_IS_FETCHING_MY_ANNOUNCEMENTS_REDUCER\"\r\nexport const DELETE_MY_ANNOUNCEMENT_BY_ID = \"DELETE_MY_ANNOUNCEMENT_BY_ID\"\r\nexport const SET_MY_ANNOUNCEMENTS = \"SET_MY_ANNOUNCEMENTS\"\r\nexport const SET_CURRENT_PAGE_MY_ANNOUNCEMENTS_REDUCER = \"SET_CURRENT_PAGE_MY_ANNOUNCEMENTS_REDUCER\"\r\nexport const SET_TOTAL_NUM_OF_PAGE_MY_ANNOUNCEMENTS_REDUCER = \"SET_TOTAL_NUM_OF_PAGE_MY_ANNOUNCEMENTS_REDUCER\"\r\n\r\ntype initialStateType = typeof initialState\r\nconst initialState = {\r\n    myAnnouncements: [],\r\n    currentPage: 0,\r\n    totalNumOfPages: 1,\r\n    isFetching: false\r\n}\r\n\r\nexport const myAnnouncementsStateReducer = (state = initialState, action: any): initialStateType => {\r\n    const {type, payload } = action\r\n    const { value, id, withConcat = false } = payload || {}\r\n    const { myAnnouncements, currentPage } = state\r\n\r\n    switch (type) {\r\n        case SET_MY_ANNOUNCEMENTS :\r\n            console.log(\"SET_MY_ANNOUNCEMENTS\", value)\r\n            const newMyAnnouncementsSet = withConcat ? myAnnouncements.concat(value) : value\r\n            return {...state, myAnnouncements: newMyAnnouncementsSet}\r\n        case DELETE_MY_ANNOUNCEMENT_BY_ID :\r\n            console.log(\"DELETE_MY_ANNOUNCEMENT_BY_ID\", id)\r\n            const newMyAnnouncementsDel = myAnnouncements.filter( ({id: myAnnouncementId}:any) => myAnnouncementId !== id )\r\n            return {...state, myAnnouncements: newMyAnnouncementsDel}\r\n        case SET_IS_FETCHING_MY_ANNOUNCEMENTS_REDUCER :\r\n            console.log(\"SET_IS_FETCHING_MY_ANNOUNCEMENTS_REDUCER\", value)\r\n            return {...state, isFetching: value}\r\n        case SET_CURRENT_PAGE_MY_ANNOUNCEMENTS_REDUCER :\r\n            const newCurrentPage = currentPage + 1\r\n            console.log(\"SET_CURRENT_PAGE_SEARCH_REDUCER\", newCurrentPage)\r\n            return {...state, currentPage: newCurrentPage}\r\n        case SET_TOTAL_NUM_OF_PAGE_MY_ANNOUNCEMENTS_REDUCER :\r\n            console.log(\"SET_TOTAL_NUM_OF_PAGE_SEARCH_REDUCER\", value)\r\n            return {...state, totalNumOfPages: value}\r\n        default: return state\r\n    }\r\n}","import {\r\n    SET_MY_ANNOUNCEMENTS,\r\n    SET_IS_FETCHING_MY_ANNOUNCEMENTS_REDUCER,\r\n    SET_CURRENT_PAGE_MY_ANNOUNCEMENTS_REDUCER,\r\n    SET_TOTAL_NUM_OF_PAGE_MY_ANNOUNCEMENTS_REDUCER, DELETE_MY_ANNOUNCEMENT_BY_ID\r\n} from \"./myAnnouncementState\"\r\n\r\nexport type SetMyAnnouncementsACType =\r\n    { type: typeof SET_MY_ANNOUNCEMENTS, payload: { value: Array<any>, withConcat: boolean }}\r\n\r\nexport type SettIsFetchingMyAnnouncementReducerACType =\r\n    { type: typeof SET_IS_FETCHING_MY_ANNOUNCEMENTS_REDUCER, payload: { value: boolean }}\r\n\r\nexport type SetCurrentPageMyAnnouncementReducerACType = { type: typeof SET_CURRENT_PAGE_MY_ANNOUNCEMENTS_REDUCER }\r\nexport type DelMyAnnouncementByIdACType = { type: typeof DELETE_MY_ANNOUNCEMENT_BY_ID, payload: {id:number} }\r\nexport type SetTotalNumOfPageMyAnnouncementReducerACType = { type: typeof SET_TOTAL_NUM_OF_PAGE_MY_ANNOUNCEMENTS_REDUCER, payload: { value: number } }\r\n\r\n\r\nexport const setMyAnnouncementsAC = (value:Array<any>, withConcat: boolean):SetMyAnnouncementsACType =>\r\n    ({ type: SET_MY_ANNOUNCEMENTS, payload: {value, withConcat} })\r\n\r\nexport const delMyAnnouncementByIdAC = (id:number):DelMyAnnouncementByIdACType =>\r\n    ({ type: DELETE_MY_ANNOUNCEMENT_BY_ID, payload: {id} })\r\n\r\nexport const settIsFetchingMyAnnouncementsReducerAC = (value:boolean):SettIsFetchingMyAnnouncementReducerACType =>\r\n    ({ type: SET_IS_FETCHING_MY_ANNOUNCEMENTS_REDUCER, payload: {value} })\r\n\r\nexport const setCurrentPageMyAnnouncementReducerAC = ():SetCurrentPageMyAnnouncementReducerACType =>\r\n    ({ type: SET_CURRENT_PAGE_MY_ANNOUNCEMENTS_REDUCER })\r\n\r\nexport const setTotalNumOfPageMyAnnouncementReducerAC = (value:number):SetTotalNumOfPageMyAnnouncementReducerACType =>\r\n    ({ type: SET_TOTAL_NUM_OF_PAGE_MY_ANNOUNCEMENTS_REDUCER, payload: {value} })","import {RESET_TO_INITIAL_SEARCH_REDUCER} from \"../searchBoxState/searchBoxState\";\r\n\r\nexport const SET_ANNOUNCEMENTS_LIST = \"SET_ANNOUNCEMENTS_LIST\"\r\nexport const SET_CURRENT_PAGE_ANNOUNCEMENTS_LIST_REDUCER = \"SET_CURRENT_PAGE_ANNOUNCEMENTS_LIST_REDUCER\"\r\nexport const SET_TOTAL_NUM_OF_PAGE_ANNOUNCEMENTS_LIST_REDUCER = \"SET_TOTAL_NUM_OF_PAGE_ANNOUNCEMENTS_LIST_REDUCER\"\r\nexport const RESET_TO_INITIAL_ANNOUNCEMENTS_LIST_REDUCER = \"RESET_TO_INITIAL_ANNOUNCEMENTS_LIST_REDUCER\"\r\n\r\ntype initialStateType = typeof initialState\r\n\r\nconst initialState = {\r\n    announcementsList: [],\r\n    currentPage: 0,\r\n    totalNumOfPages: 1\r\n}\r\n\r\nexport const announcementsListStateReducer = (state = initialState, action: any): initialStateType => {\r\n\r\n    const {type, payload } = action\r\n    const { value, id, withConcat = false } = payload || {}\r\n    const { announcementsList, currentPage } = state\r\n\r\n    switch (type) {\r\n        case SET_ANNOUNCEMENTS_LIST:\r\n            console.log(\"SET_ANNOUNCEMENTS_LIST\", value)\r\n            const newMyAnnouncementsSet = withConcat ? announcementsList.concat(value) : value\r\n            return {...state, announcementsList: newMyAnnouncementsSet}\r\n        case SET_CURRENT_PAGE_ANNOUNCEMENTS_LIST_REDUCER:\r\n            const newCurrentPage = currentPage + 1\r\n            console.log(\"SET_CURRENT_PAGE_ANNOUNCEMENTS_LIST_REDUCER\", newCurrentPage)\r\n            return {...state, currentPage: newCurrentPage}\r\n        case SET_TOTAL_NUM_OF_PAGE_ANNOUNCEMENTS_LIST_REDUCER :\r\n            console.log(\"SET_TOTAL_NUM_OF_PAGE_ANNOUNCEMENTS_LIST_REDUCER\", value)\r\n            return {...state, totalNumOfPages: value}\r\n        case RESET_TO_INITIAL_ANNOUNCEMENTS_LIST_REDUCER :\r\n            console.log(\"RESET_TO_INITIAL_ANNOUNCEMENTS_LIST_REDUCER\")\r\n            return initialState\r\n        default: return state\r\n    }\r\n}","import {\r\n    RESET_TO_INITIAL_ANNOUNCEMENTS_LIST_REDUCER,\r\n    SET_ANNOUNCEMENTS_LIST,\r\n    SET_CURRENT_PAGE_ANNOUNCEMENTS_LIST_REDUCER,\r\n    SET_TOTAL_NUM_OF_PAGE_ANNOUNCEMENTS_LIST_REDUCER\r\n} from \"./announcementsListState\";\r\n\r\n\r\nexport type SetAnnouncementsListACType = { type: typeof SET_ANNOUNCEMENTS_LIST, payload: { value: Array<any>, withConcat: boolean }}\r\nexport type SetCurrentPageAnnouncementsListReducerACType = { type: typeof SET_CURRENT_PAGE_ANNOUNCEMENTS_LIST_REDUCER }\r\nexport type SetTotalNumOfPageAnnouncementsListReducerACType = { type: typeof SET_TOTAL_NUM_OF_PAGE_ANNOUNCEMENTS_LIST_REDUCER, payload: { value: number } }\r\nexport type ResetToInitialStateAnnouncementsListReducerACType = { type: typeof RESET_TO_INITIAL_ANNOUNCEMENTS_LIST_REDUCER }\r\n\r\nexport const setAnnouncementsListAC = (value:Array<any>, withConcat: boolean):SetAnnouncementsListACType =>\r\n    ({ type: SET_ANNOUNCEMENTS_LIST, payload: {value, withConcat} })\r\nexport const resetToInitialStateAnnouncementsListReducerAC = ():ResetToInitialStateAnnouncementsListReducerACType => ({ type: RESET_TO_INITIAL_ANNOUNCEMENTS_LIST_REDUCER })\r\nexport const setCurrentPageAnnouncementsListReducerAC = ():SetCurrentPageAnnouncementsListReducerACType =>\r\n    ({ type: SET_CURRENT_PAGE_ANNOUNCEMENTS_LIST_REDUCER })\r\n\r\nexport const setTotalNumOfPageAnnouncementsListReducerAC = (value:number):SetTotalNumOfPageAnnouncementsListReducerACType =>\r\n    ({ type: SET_TOTAL_NUM_OF_PAGE_ANNOUNCEMENTS_LIST_REDUCER, payload: {value} })","import {SET_IS_FETCHING_MAIN_STATE, SET_SUBWAY_STATIONS_DATA} from \"./mainState\";\r\n\r\nexport type MainStateActionTypes  = SetIsFetchingMainStateACType & SetSubwayStationsDataACType\r\n\r\nexport type SetIsFetchingMainStateACType = { type: typeof SET_IS_FETCHING_MAIN_STATE, payload: { value: boolean }}\r\nexport type SetSubwayStationsDataACType = { type: typeof SET_SUBWAY_STATIONS_DATA, payload: { value: Array<any> }}\r\n\r\n\r\nexport const setIsFetchingMainStateAC = (value:boolean):SetIsFetchingMainStateACType => ({ type: SET_IS_FETCHING_MAIN_STATE, payload: {value} })\r\nexport const setSubwayStationsDataAC = (value:Array<any>):SetSubwayStationsDataACType => ({ type: SET_SUBWAY_STATIONS_DATA, payload: {value} })","import {AuthorizationData, NewAnnouncementData, RegistrationData, testAPI} from \"../../api/testAPI\";\r\nimport {Dispatch} from \"redux\";\r\nimport {AppStateType} from \"../store\";\r\nimport {\r\n    logoutOrDeleteUseAC,\r\n    LogoutOrDeleteUserACType,\r\n    setIsAuthAC,\r\n    SetIsAuthACType,\r\n    setIsCorrectAuthDataAC,\r\n} from \"../reducers/authorizationState/authorizationStateActionCreators\";\r\nimport {CallHistoryMethodAction, push} from \"connected-react-router\";\r\nimport {\r\n    setIsFetchingSearchReducerAC,\r\n    SetIsFetchingSearchReducerACType,\r\n    setSearchedDataAC,\r\n    SetSearchedDataAType,\r\n    setTotalNumOfPageSearchReducerAC,\r\n    SetTotalNumOfPageSearchReducerACType\r\n} from \"../reducers/searchBoxState/searchBoxStateActionCreators\";\r\nimport {\r\n    SetetIsFetchingFeedReducerACType,\r\n    setIsFetchingFeedReducerAC,\r\n    setLastAnnouncementsAC,\r\n    SetLastAnnouncementsACType\r\n} from \"../reducers/feedState/feedStateActionCreators\";\r\nimport {SettingsFieldType} from \"../reducers/settingsState/settingsState\";\r\nimport {\r\n    setSettingsInLocalStorageByFieldAC,\r\n    SetSettingsInLocalStorageByFieldACType\r\n} from \"../reducers/settingsState/settingsStateActionCreators\";\r\nimport {\r\n    setAnnouncementAC,\r\n    SetAnnouncementsACType,\r\n    settIsFetchingAnnouncementReducerAC,\r\n    SettIsFetchingAnnouncementReducerACType\r\n} from \"../reducers/announcementState/announcementStateActionCreators\";\r\nimport {\r\n    delMyAnnouncementByIdAC,\r\n    DelMyAnnouncementByIdACType,\r\n    setMyAnnouncementsAC,\r\n    SetMyAnnouncementsACType,\r\n    SettIsFetchingMyAnnouncementReducerACType,\r\n    settIsFetchingMyAnnouncementsReducerAC,\r\n    setTotalNumOfPageMyAnnouncementReducerAC,\r\n    SetTotalNumOfPageMyAnnouncementReducerACType\r\n} from \"../reducers/myAnnouncementState/myAnnouncementStateActionCreators\";\r\nimport {PATH_FEED, PATH_MY_ANNOUNCEMENTS} from \"../../app/App\";\r\nimport {\r\n    setAnnouncementsListAC,\r\n    SetAnnouncementsListACType,\r\n    SetCurrentPageAnnouncementsListReducerACType,\r\n    setTotalNumOfPageAnnouncementsListReducerAC,\r\n    SetTotalNumOfPageAnnouncementsListReducerACType\r\n} from \"../reducers/announcementsListState/announcementsListStateActionCreators\";\r\nimport {\r\n    setIsFetchingMainStateAC,\r\n    SetIsFetchingMainStateACType,\r\n    setSubwayStationsDataAC,\r\n    SetSubwayStationsDataACType\r\n} from \"../reducers/mainState/mainStateActionCreators\";\r\nimport {\r\n    resetToInitialByPageFormReducerAC,\r\n    ResetToInitialByPageFormReducerACType\r\n} from \"../reducers/formState/formStateActionCreators\";\r\nimport defaultAvatar from \"../../pictures/defaultAvatar.jpg\"\r\n\r\ntype GetStateType = () => AppStateType\r\n\r\n\r\n//--------------------AUTHORIZATION---------------------//\r\ntype SendAuthDispatchType = Dispatch<SetIsAuthACType | SetIsFetchingMainStateACType | any | SetSettingsInLocalStorageByFieldACType | CallHistoryMethodAction | ResetToInitialByPageFormReducerACType>\r\nexport const sendAuthorizationOrRegistrationThunk = (data: AuthorizationData & RegistrationData) => (dispatch: SendAuthDispatchType, getState: any) => {\r\n    const {authorizationState: {isRegistration}} = getState()\r\n    dispatch(setIsFetchingMainStateAC(true))\r\n    console.log(\"sendAuthorizationOrRegistrationThunk\", data)\r\n\r\n    const getRequestMethod = () => isRegistration ? \"postRegistrationData\" : \"postAuthorizationData\"\r\n    testAPI[getRequestMethod()](data)\r\n        .then(response => {\r\n            if (response.status !== 200)\r\n                throw `AUTHORIZATION DATA IS NOT POSTED STATUS ${response.status}`\r\n            return response.json()\r\n        })\r\n        .then(({result = true}) => {\r\n            dispatch(setIsFetchingMainStateAC(false))\r\n            if (result) {\r\n                dispatch(getUserInfoThunk())\r\n                dispatch(setSettingsInLocalStorageByFieldAC(data.login,\"login\"))\r\n                dispatch(setSettingsInLocalStorageByFieldAC(data.password,\"password\"))\r\n                dispatch(setIsAuthAC(true))\r\n            } else dispatch(setIsCorrectAuthDataAC(false))\r\n        })\r\n        .catch(err => console.error(err))\r\n}\r\n\r\n//--------------------SEARCH-BOX---------------------//\r\ntype GetSubwayStationsDispatchType = Dispatch<SetSubwayStationsDataACType>\r\nexport const getSubwayStationsThunk = () => (dispatch: GetSubwayStationsDispatchType) => {\r\n    console.log(\"getSubwayStationsThunk\")\r\n\r\n    testAPI[\"getSubwayStations\"]()\r\n        .then(response => {\r\n            if (response.status !== 200)\r\n                throw `CANNOT FETCH GET REQUEST ${response.status}`\r\n            return response.json()\r\n        })\r\n        .then(data => {\r\n            dispatch(setSubwayStationsDataAC(data))\r\n        })\r\n        .catch(err => console.error(err))\r\n}\r\n\r\ntype GetAnnouncementsByFiltersDispatchType = Dispatch<SetSearchedDataAType | SetTotalNumOfPageSearchReducerACType | SetIsFetchingSearchReducerACType>\r\nexport const getAnnouncementsByFiltersThunk = (withConcat: boolean = false) => (dispatch: GetAnnouncementsByFiltersDispatchType, getState: any) => {\r\n    dispatch(setIsFetchingSearchReducerAC(true))\r\n    console.log(\"getAnnouncementsByFiltersThunk\")\r\n    const {currentPage, searchConfig: {categoryId, subwayStations, searchValue}} = getState().searchBoxState\r\n    testAPI[\"getAnnouncementsByFilters\"](currentPage, searchValue, categoryId, subwayStations)\r\n        .then(response => {\r\n            if (response.status !== 200)\r\n                throw `CANNOT FETCH GET REQUEST ${response.status}`\r\n            return response.json()\r\n        })\r\n        .then(({pages, announcements}) => {\r\n            dispatch(setTotalNumOfPageSearchReducerAC(pages))\r\n            dispatch(setSearchedDataAC(announcements, withConcat))\r\n            dispatch(setIsFetchingSearchReducerAC(false))\r\n        })\r\n        .catch(err => console.error(err))\r\n}\r\n\r\n//--------------------FEED-PAGE--------------------//\r\ntype getLastAnnouncementsDispatchType = Dispatch<SetIsFetchingMainStateACType | SetLastAnnouncementsACType>\r\nexport const getLastAnnouncementsThunk = (page: number, withConcat = false) => (dispatch: getLastAnnouncementsDispatchType) => {\r\n    dispatch(setIsFetchingMainStateAC(true))\r\n    console.log(\"getLastAnnouncementsThunk\")\r\n\r\n    testAPI[\"getLastAnnouncements\"](page)\r\n        .then(response => {\r\n            if (response.status !== 200)\r\n                throw `CANNOT FETCH GET REQUEST ${response.status}`\r\n            return response.json()\r\n        })\r\n        .then(({announcements})  => {\r\n            dispatch(setLastAnnouncementsAC(announcements, withConcat))\r\n            dispatch(setIsFetchingMainStateAC(false))\r\n        })\r\n        .catch(err => console.error(err))\r\n}\r\n//--------------------SETTINGS-PAGE--------------------//\r\ntype PostSettingByFieldDispatchType = Dispatch<SetSettingsInLocalStorageByFieldACType>\r\nexport const postSettingByFieldThunk = (data: any, field: SettingsFieldType) => (dispatch: PostSettingByFieldDispatchType) => {\r\n    console.log(\"postSettingByFieldThunk\")\r\n    const [value] = Object.values(data)\r\n\r\n    testAPI[\"postSettingsByField\"](data, field)\r\n        .then(response => {\r\n            if (response.status !== 200)\r\n                throw `CANNOT FETCH POST REQUEST ${response.status}`\r\n            return response.json()\r\n        })\r\n        .then(({result = false}) => {\r\n            result && dispatch(setSettingsInLocalStorageByFieldAC(value, field))\r\n        })\r\n        .catch(err => console.error(err))\r\n}\r\n\r\ntype PostLogoutOrDeleteUserType = Dispatch<LogoutOrDeleteUserACType | CallHistoryMethodAction>\r\ntype LogoutOrDeleteType = \"logout\" | \"delete\"\r\nexport const postLogoutOrDeleteUser = (logoutOrDelete: LogoutOrDeleteType) => (dispatch: PostLogoutOrDeleteUserType) => {\r\n    console.log(\"postLogoutOrDeleteUser\")\r\n\r\n    const getRequestByLogoutOrDelete = () => {\r\n        if (logoutOrDelete === \"logout\") return \"postLogout\"\r\n        if (logoutOrDelete === \"delete\") return \"postDelete\"\r\n        return \"postLogout\"\r\n    }\r\n\r\n    testAPI[getRequestByLogoutOrDelete()]()\r\n        .then(response => {\r\n            if (response.status !== 200)\r\n                throw `CANNOT FETCH POST REQUEST ${response.status}`\r\n            return response.json()\r\n        })\r\n        .then(({result = false}) => {\r\n            if (result) {\r\n                dispatch(logoutOrDeleteUseAC())\r\n                dispatch(push(PATH_FEED))\r\n            }\r\n        })\r\n        .catch(err => console.error(err))\r\n}\r\n\r\n//--------------------ANNOUNCEMENT-PAGE--------------------//\r\ntype GetAnnouncementByIdDispatchType = Dispatch<SettIsFetchingAnnouncementReducerACType | SetAnnouncementsACType>\r\nexport const getAnnouncementByIdThunk = (category: string, id: number) => (dispatch: GetAnnouncementByIdDispatchType) => {\r\n    dispatch(settIsFetchingAnnouncementReducerAC(true))\r\n    console.log(\"getAnnouncementByIdThunk\")\r\n\r\n    testAPI[\"getAnnouncementByIdThunk\"](category, id)\r\n        .then(response => {\r\n            if (response.status !== 200)\r\n                throw `CANNOT FETCH GET REQUEST ${response.status}`\r\n            return response.json()\r\n        })\r\n        .then((data) => {\r\n            dispatch(setAnnouncementAC(data))\r\n            dispatch(settIsFetchingAnnouncementReducerAC(false))\r\n        })\r\n        .catch(err => console.error(err))\r\n}\r\n\r\n//--------------------MY-ANNOUNCEMENT-PAGE--------------------//\r\ntype GetMyAnnouncementsDispatchType = Dispatch<SetMyAnnouncementsACType | SettIsFetchingMyAnnouncementReducerACType | SetTotalNumOfPageMyAnnouncementReducerACType>\r\nexport const getMyAnnouncementsThunk = (withConcat = false) => (dispatch: GetMyAnnouncementsDispatchType, getState: any) => {\r\n    dispatch(settIsFetchingMyAnnouncementsReducerAC(true))\r\n    console.log(\"getMyAnnouncementsThunk\")\r\n\r\n    const {myAnnouncementsState: {currentPage}} = getState()\r\n\r\n    testAPI[\"getMyAnnouncements\"](currentPage)\r\n        .then(response => {\r\n            if (response.status !== 200)\r\n                throw `CANNOT FETCH GET REQUEST ${response.status}`\r\n            return response.json()\r\n        })\r\n        .then(({pages, announcements}) => {\r\n            dispatch(setTotalNumOfPageMyAnnouncementReducerAC(pages))\r\n            dispatch(setMyAnnouncementsAC(announcements, withConcat))\r\n            dispatch(settIsFetchingMyAnnouncementsReducerAC(false))\r\n        })\r\n        .catch(err => console.error(err))\r\n}\r\n\r\ntype PostDeleteAnnouncementDispatchType = Dispatch<SettIsFetchingMyAnnouncementReducerACType | DelMyAnnouncementByIdACType>\r\nexport const postDeleteAnnouncementThunk = (id: number) => (dispatch: PostDeleteAnnouncementDispatchType) => {\r\n    dispatch(settIsFetchingMyAnnouncementsReducerAC(true))\r\n    console.log(\"postDeleteAnnouncementThunk\")\r\n\r\n    testAPI[\"postDeleteAnnouncement\"](id)\r\n        .then(response => {\r\n            if (response.status !== 200)\r\n                throw `CANNOT FETCH POST REQUEST ${response.status}`\r\n            return response.json()\r\n        })\r\n        .then(({result = false}) => {\r\n            result && dispatch(delMyAnnouncementByIdAC(id))\r\n            dispatch(settIsFetchingMyAnnouncementsReducerAC(false))\r\n        })\r\n        .catch(err => console.error(err))\r\n}\r\n\r\n//--------------------CREATE-ANNOUNCEMENT--------------------//\r\ntype PostNewAnnouncementDispatchType = Dispatch<SetIsFetchingMainStateACType | CallHistoryMethodAction>\r\nexport const postNewAnnouncementThunk = (data: NewAnnouncementData) => (dispatch: PostNewAnnouncementDispatchType) => {\r\n    dispatch(setIsFetchingMainStateAC(true))\r\n    console.log(\"postNewAnnouncement\")\r\n\r\n    testAPI[\"postNewAnnouncement\"](data)\r\n        .then(response => {\r\n            if (response.status !== 200) throw `CANNOT FETCH POST REQUEST ${response.status}`\r\n            else {\r\n                dispatch(setIsFetchingMainStateAC(true))\r\n                dispatch(push(PATH_MY_ANNOUNCEMENTS))\r\n            }\r\n        })\r\n        .catch(err => console.error(err))\r\n}\r\n\r\n//--------------------ANNOUNCEMENTS-LIST-PAGE--------------------//\r\ntype GetAnnouncementsListDispatchType = Dispatch<SetTotalNumOfPageAnnouncementsListReducerACType | SetIsFetchingMainStateACType | SetAnnouncementsListACType | SetCurrentPageAnnouncementsListReducerACType>\r\nexport const getAnnouncementsListThunk = (category: string, withConcat = false) => (dispatch: GetAnnouncementsListDispatchType, getState: any) => {\r\n    dispatch(setIsFetchingMainStateAC(true))\r\n    console.log(\"getAnnouncementsListThunk\")\r\n\r\n    const {announcementsListState: {currentPage}} = getState()\r\n\r\n    testAPI[\"getAnnouncementsList\"](currentPage, category)\r\n        .then(response => {\r\n            if (response.status !== 200)\r\n                throw `CANNOT FETCH GET REQUEST ${response.status}`\r\n            return response.json()\r\n        })\r\n        .then(({pages, announcements}) => {\r\n            dispatch(setTotalNumOfPageAnnouncementsListReducerAC(pages))\r\n            dispatch(setAnnouncementsListAC(announcements, withConcat))\r\n            dispatch(setIsFetchingMainStateAC(false))\r\n        })\r\n        .catch(err => console.error(err))\r\n}\r\n//--------------------GET-USER-INFO--------------------//\r\ntype GetUserInfoDispatchType = Dispatch<SetSettingsInLocalStorageByFieldACType>\r\ntype GetUserInfoThunkType = typeof getUserInfoThunk\r\nexport const getUserInfoThunk = () => (dispatch:GetUserInfoDispatchType) => {\r\n    console.log(\"getUserInfoThunk\")\r\n    testAPI.getUserInfo()\r\n        .then(response => {\r\n            if (response.status !== 200)\r\n                throw `CANNOT FETCH GET REQUEST ${response.status}`\r\n            return response.json()\r\n        })\r\n        .then( ({avatar = defaultAvatar, ...restUserData}) => {\r\n            console.log(\"RESPONSE\", restUserData)\r\n            dispatch(setSettingsInLocalStorageByFieldAC(avatar, \"avatar\"))\r\n            const userDataEntries = Object.entries(restUserData)\r\n            userDataEntries.forEach( ([field, value]) => {\r\n                console.log(field, value)\r\n                dispatch(setSettingsInLocalStorageByFieldAC(value, field))\r\n            })\r\n        })\r\n}","\r\nexport const getIsRegistrationSelector = (state: any) => state.authorizationState.isRegistration\r\nexport const getIsAuthSelector = (state: any) => state.authorizationState.isAuth()\r\nexport const getIsCorrectAuthDataSelector = (state: any) => state.authorizationState.isCorrectAuthData","\r\nexport const getIsFetchingMainStateSelector = (state: any) => state.mainState.isFetching\r\nexport const getSubwayStationsDataSelector = (state: any) => state.mainState.subwayStationsData\r\nexport const getCategoriesDataSelector = (state: any) => state.mainState.categoriesData\r\n\r\nexport const getTheSubCategoriesSelector = (categoriesData: Array<any>, activeClassName?: string) => {\r\n    //Проверка содержит ли объект с категорией подкатегории\r\n    const isIncludesSubCategory = (categoryData: Object) => \"subCategories\" in categoryData\r\n    //Возвращает подготовленный объект категории\r\n    const prepareCategoryToPush = (categoryData: any) => {\r\n        const {id, label, category} = categoryData\r\n        const baseCategory = {id, label, category}\r\n        return isIncludesSubCategory(categoryData) ?\r\n            {...baseCategory, className: activeClassName} : baseCategory\r\n    }\r\n    //В процессе итерации достаём подкатегории из объекта категории\r\n    return categoriesData.reduce( (newCategoriesData: any, category: any) => {\r\n        const {subCategories} = category\r\n        newCategoriesData.push(prepareCategoryToPush(category))\r\n        isIncludesSubCategory(category) && newCategoriesData.push(...subCategories)\r\n        return newCategoriesData\r\n    }, [] )\r\n}","import React from 'react';\r\nimport \"./buttonStyles.css\"\r\n\r\ntype ButtonPropsType = {\r\n    onClickHandler?: ((event: React.MouseEvent<HTMLDivElement, MouseEvent>) => void)\r\n    label: string\r\n    isDisabled?: boolean\r\n    className?: string\r\n}\r\n\r\nconst Button = (props: ButtonPropsType) => {\r\n\r\n    const {className, isDisabled = false, label, onClickHandler} = props\r\n\r\n  return isDisabled ?\r\n       <div className={`btn ${className}`}>Отправка...</div> :\r\n      <div onClick={onClickHandler} className={`btn ${className}`}>{label}</div>\r\n\r\n}\r\n\r\nexport default Button;\r\n","import {initialStateCategory, initialStateSubway} from \"../../../components/searchBox/select/select\";\r\nimport {getItemFromLocalStorage} from \"../mainState/mainState\";\r\n\r\nexport const SET_VALUE_BY_PAGE_AND_FIELD_FORM_REDUCER = \"SET_VALUE_BY_PAGE_AND_FIELD_FORM_REDUCER\"\r\nexport const RESET_TO_INITIAL_BY_PAGE_FORM_REDUCER = \"RESET_TO_INITIAL_BY_PAGE_FORM_REDUCER\"\r\nexport const SET_IS_VALID_BY_PAGE_AND_FIELD_FORM_REDUCER = \"SET_IS_VALID_BY_PAGE_AND_FIELD_FORM_REDUCER\"\r\nexport const CHECK_IS_READY_TO_SEND_BY_PAGE_FORM_REDUCER = \"CHECK_IS_READY_TO_SEND_BY_PAGE_FORM_REDUCER\"\r\n\r\nexport type FormReducerPagesType = \"authorization\" | \"registration\" | \"createAnnouncement\" | \"settings\"\r\nexport type FormReducerFieldsType = FormReducerAuthorizationFieldsType | FormReducerRegistrationFieldsType\r\nexport type FormReducerAuthorizationFieldsType = \"login\" | \"password\"\r\nexport type FormReducerRegistrationFieldsType = \"name\" | \"login\" | \"phoneNumber\" | \"password\"\r\n\r\n\r\nexport const defaultInitialStateForFormField = {value: \"\", isValid: true}\r\n\r\nconst initialState = {\r\n    authorization : {\r\n        login: defaultInitialStateForFormField,\r\n        password: defaultInitialStateForFormField,\r\n        isReadyToSend: false\r\n    },\r\n    registration : {\r\n        name: defaultInitialStateForFormField,\r\n        login: defaultInitialStateForFormField,\r\n        phoneNumber: defaultInitialStateForFormField,\r\n        password: defaultInitialStateForFormField,\r\n        isReadyToSend: false\r\n    },\r\n    createAnnouncement : {\r\n        photoList: {value: [], isValid: true},\r\n        name: defaultInitialStateForFormField,\r\n        price: defaultInitialStateForFormField,\r\n        categoryId: {value: initialStateCategory, isValid: true},\r\n        description: defaultInitialStateForFormField,\r\n        sellerPhone: defaultInitialStateForFormField,\r\n        stationId: {value: initialStateSubway, isValid: true},\r\n        isReadyToSend: false\r\n    },\r\n    settings : {\r\n        avatar: defaultInitialStateForFormField,\r\n        name: defaultInitialStateForFormField,\r\n        phone: defaultInitialStateForFormField,\r\n        login: defaultInitialStateForFormField,\r\n        isReadyToSend: false\r\n    }\r\n}\r\n\r\nconst checkIsValid = (field: string, value: any) => {\r\n    console.log(\"checkIsValid\", field, value)\r\n    switch (field) {\r\n        case \"name\" :\r\n            return !!value.length\r\n        case \"password\" :\r\n            return value.length <= 24 && value.length > 6\r\n        case \"phoneNumber\" :\r\n            return !!value.length\r\n        case \"login\" :\r\n            return !!value.length\r\n        case \"stationId\":\r\n            return JSON.stringify(value) !== JSON.stringify(initialStateSubway)\r\n        case \"price\":\r\n            return !!value.length\r\n        case \"phone\":\r\n            return !!value.length\r\n        case \"categoryId\":\r\n            console.log(JSON.stringify(value), JSON.stringify(initialStateCategory))\r\n            return JSON.stringify(value) !== JSON.stringify(initialStateCategory)\r\n        case \"description\":\r\n            return !!value.length\r\n        default : return true\r\n    }\r\n}\r\n\r\nexport const prepareFormStateByPageForSend = ({isReadyToSend, ...restFormState}: any) => {\r\n    const stateEntries = Object.entries(restFormState)\r\n    const defaultCondition = (postData: any, key: any, value: any) => {\r\n        postData[key] = value\r\n        return postData\r\n    }\r\n    return (condition: Function = defaultCondition) => stateEntries.reduce( (postData: any, [key, {value}]: any) => {\r\n        return condition(postData, key, value)\r\n    }, {})\r\n}\r\n\r\nconst formStateReducer = (state = initialState, action: any) => {\r\n    const {type, payload} = action\r\n    const {field = \"\", value = \"\", page = \"\" } = payload || {}\r\n    // @ts-ignore\r\n    const stateByPage = state[page] || {}\r\n    const stateByField = stateByPage[field]\r\n\r\n    switch (type) {\r\n        case SET_VALUE_BY_PAGE_AND_FIELD_FORM_REDUCER :\r\n            console.log(\"SET_VALUE_BY_PAGE_AND_FIELD_FORM_REDUCER\", page, value)\r\n            return {...state, [page] : {...stateByPage, [field] : {...stateByField, value, isValid: true}} }\r\n        case SET_IS_VALID_BY_PAGE_AND_FIELD_FORM_REDUCER :\r\n            const isValid = checkIsValid(field, stateByField.value)\r\n            console.log(\"SET_IS_VALID_BY_PAGE_AND_FIELD_FORM_REDUCER\", field, page)\r\n            return {...state, [page] : {...stateByPage, [field] : {...stateByField, isValid}} }\r\n        case CHECK_IS_READY_TO_SEND_BY_PAGE_FORM_REDUCER :\r\n            console.log(\"SET_IS_VALID_BY_PAGE_AND_FIELD_FORM_REDUCER\", page)\r\n            const stateKeys = Object.keys(stateByPage)\r\n            const newState = stateKeys.reduce( (newState: any, field: any) => {\r\n                const {value} = stateByPage[field]\r\n                const isValid = checkIsValid(field, value)\r\n                if(!isValid) {\r\n                    console.log(\"ISVALID FALSE\")\r\n                    newState.isReadyToSend = false\r\n                    newState[field].isValid = false\r\n                }\r\n                return newState\r\n            }, {...stateByPage, isReadyToSend: true} )\r\n            return {...state, [page] : newState }\r\n        case RESET_TO_INITIAL_BY_PAGE_FORM_REDUCER :\r\n            // @ts-ignore\r\n            return {...state, [page] : initialState[page] }\r\n        default: return state\r\n    }\r\n}\r\n\r\nexport default formStateReducer","import {\r\n    FormReducerFieldsType,\r\n    SET_VALUE_BY_PAGE_AND_FIELD_FORM_REDUCER,\r\n    SET_IS_VALID_BY_PAGE_AND_FIELD_FORM_REDUCER,\r\n    CHECK_IS_READY_TO_SEND_BY_PAGE_FORM_REDUCER, RESET_TO_INITIAL_BY_PAGE_FORM_REDUCER, FormReducerPagesType,\r\n\r\n} from \"./formState\"\r\nimport {SET_LAST_ANNOUNCEMENTS} from \"../feedState/feedState\";\r\n\r\nexport type ResetToInitialByPageFormReducerACType = { type: typeof RESET_TO_INITIAL_BY_PAGE_FORM_REDUCER, payload: { page: FormReducerPagesType }}\r\n\r\n\r\nexport const seValueFormReducerAC = ( value: string | number, field: FormReducerFieldsType, page: FormReducerPagesType,) =>\r\n    ({ type: SET_VALUE_BY_PAGE_AND_FIELD_FORM_REDUCER, payload: {value, field, page} })\r\n\r\nexport const setIsValidFormReducerAC = (field: FormReducerFieldsType, page: FormReducerPagesType ) =>\r\n    ({ type: SET_IS_VALID_BY_PAGE_AND_FIELD_FORM_REDUCER, payload: {field, page} })\r\n\r\nexport const checkIsReadyToSendByPageFormReducerAC = (page: FormReducerPagesType ) =>\r\n    ({ type: CHECK_IS_READY_TO_SEND_BY_PAGE_FORM_REDUCER, payload: {page} })\r\n\r\nexport const resetToInitialByPageFormReducerAC = (page: FormReducerPagesType): ResetToInitialByPageFormReducerACType =>\r\n    ({ type: RESET_TO_INITIAL_BY_PAGE_FORM_REDUCER, payload: {page} })\r\n","import { FormReducerFieldsType, FormReducerPagesType } from \"./formState\"\r\n\r\nexport const getFieldsByPageFormReducerSelector = (state: any, page: FormReducerPagesType) => state.formState[page]\r\n// export const getIsValidByFieldFormReducerSelector = (state: any, field: FormReducerFieldsType) => state.formState[field].isValid\r\n","import React, {ChangeEvent, useCallback, useEffect} from 'react';\nimport \"./authorizationPopupBoxStyles.css\"\nimport TextInput from \"../../textInput/textInput\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {sendAuthorizationOrRegistrationThunk} from \"../../../redux/thunks/thunks\";\nimport {\n    setIsCorrectAuthDataAC,\n    setIsRegistrationAC,\n} from \"../../../redux/reducers/authorizationState/authorizationStateActionCreators\";\nimport {\n    getIsCorrectAuthDataSelector,\n    getIsRegistrationSelector\n} from \"../../../redux/reducers/authorizationState/authorizationStateSelectors\";\nimport {getIsFetchingMainStateSelector} from \"../../../redux/reducers/mainState/mainStateSelectors\";\nimport Button from \"../../button/button\";\nimport {\n    checkIsReadyToSendByPageFormReducerAC, resetToInitialByPageFormReducerAC,\n    setIsValidFormReducerAC,\n    seValueFormReducerAC\n} from \"../../../redux/reducers/formState/formStateActionCreators\";\nimport {getFieldsByPageFormReducerSelector} from \"../../../redux/reducers/formState/formStateSelectors\";\nimport {prepareFormStateByPageForSend} from \"../../../redux/reducers/formState/formState\";\n\n\ntype fieldTypes = \"password\" | \"login\" | \"name\" | string\n\ntype PropsType = {\n    closeModalWindow?: Function\n}\n\nconst AuthorizationPopupBox = (props: PropsType) => {\n\n    //------MAP-STATE-TO-PROPS-----//\n    const isRegistration = useSelector(getIsRegistrationSelector)\n    const isCorrectAuthData = useSelector(getIsCorrectAuthDataSelector)\n    const isFetching = useSelector(getIsFetchingMainStateSelector)\n    const authFormState: any = useSelector((state) => getFieldsByPageFormReducerSelector(state, \"authorization\"))\n    const regFormState: any = useSelector((state) => getFieldsByPageFormReducerSelector(state, \"registration\"))\n    const currentFormState = (isRegistration ? regFormState : authFormState) || {}\n    const currentPage = isRegistration ? \"registration\" : \"authorization\"\n    const {isReadyToSend} = currentFormState\n\n    //-----MAP-DISPATCH-TO-PROPS----//\n    const dispatch = useDispatch()\n    const sendAuthorizationOrRegistration = useCallback((data) => dispatch(sendAuthorizationOrRegistrationThunk(data)), [dispatch])\n    const setIsRegistration = useCallback((boolean) => dispatch(setIsRegistrationAC(boolean)), [dispatch])\n    const seValueFormReducer = useCallback((value, field) => dispatch(seValueFormReducerAC(value, field, currentPage)), [dispatch, isRegistration])\n    const setIsCorrectAuthData = useCallback(() => dispatch(setIsCorrectAuthDataAC(true)), [dispatch])\n    const setIsValidFormReducer = useCallback((field) => dispatch(setIsValidFormReducerAC(field, currentPage)), [dispatch, isRegistration])\n    const resetToInitialByPageFormReducer = useCallback((page) => dispatch(resetToInitialByPageFormReducerAC(page)), [dispatch, isRegistration])\n    const checkIsReadyToSend = useCallback(() => dispatch(checkIsReadyToSendByPageFormReducerAC(currentPage)), [dispatch, isRegistration])\n\n    //------WILL-UNMOUNT-LIFE-CYCLE-----//\n    useEffect(() => {\n        return () => {\n            resetToInitialByPageFormReducer(\"authorization\")\n            resetToInitialByPageFormReducer(\"registration\")\n        }\n    }, [])\n\n    //------DID-UPDATE-LIFE-CYCLE-----//\n    useEffect(() => {\n        if(isReadyToSend) {\n            const postData = prepareFormStateByPageForSend(currentFormState)()\n            sendAuthorizationOrRegistration(postData)\n        }\n    }, [isReadyToSend])\n\n    //Функция - обработчик события изменеия в инпуте. Проверка на валидность значения в инпуте.\n    const onChangeHandler = (event: React.ChangeEvent<HTMLInputElement>, field: fieldTypes) => {\n        const {currentTarget: {value}} = event\n        console.log(\"onChangeHandler\", field, value)\n        seValueFormReducer(value, field)\n        !isCorrectAuthData && setIsCorrectAuthData()\n    }\n\n    //Функция возращает массив с конфигурацией для полей ввода\n    const getInputsConfig = () => {\n        const {name = {}, login = {}, password = {}, phoneNumber = {}} = currentFormState\n        return [\n            {\n                field: \"name\",\n                label: \"Имя\",\n                inputType: \"text\",\n                placeholder: \"Введите ваше имя\",\n                value: name.value,\n                isValid: name.isValid\n            },\n            {\n                field: \"phoneNumber\",\n                label: \"Номер телефона\",\n                inputType: \"number\",\n                placeholder: \"Введите ваш телефон\",\n                value: phoneNumber.value,\n                isValid: phoneNumber.isValid\n            },\n            {\n                field: \"login\",\n                label: \"E-mail\",\n                inputType: \"text\",\n                placeholder: \"Введите ваш E-mail\",\n                value: login.value,\n                isValid: login.isValid\n            },\n            {\n                field: \"password\",\n                label: \"Пароль\",\n                inputType: \"password\",\n                placeholder: \"Введите ваш пароль\",\n                value: password.value,\n                isValid: password.isValid\n            },\n        ]\n    }\n\n    //Функция возращает кнопку для отображения в зависимости от условия\n    const getBtnByIsExistUserForSwitch = () => {\n        return <span onClick={() => setIsRegistration(!isRegistration)} className={\"authorization-popupBox__reg-btn\"}>\n            {isRegistration ? \"Войти\" : \"Зарегестрироваться\" }\n        </span>\n    }\n\n    return (\n        <div className=\"authorization-popupBox position-relative\">\n            <h1 className={\"authorization-popupBox__title\"}>{!isRegistration ? \"Вход\" : \"Регистрация\"}</h1>\n            <hr className={\"my-3\"}/>\n            <div className=\"authorization-popupBox__inputs-wrapper mb-2\">\n                { getInputsConfig().map( ({field, inputType, placeholder, value, label, isValid}) => {\n                    if(!isRegistration && field == \"name\") return null\n                    if(!isRegistration && field == \"phoneNumber\") return null\n                    return <TextInput className={\"mb-4\"} key={field} label={label}\n                                      isValid={isValid} placeholder={placeholder}\n                                      inputType={inputType} value={value}\n                                      onBlurHandler={() => setIsValidFormReducer(field)}\n                                      onChangeHandler={(event: ChangeEvent<HTMLInputElement>) => onChangeHandler(event, field)}/>\n                }) }\n            </div>\n            {!isCorrectAuthData && !isRegistration && <h4>Введённые данные не верны</h4>}\n            <Button onClickHandler={checkIsReadyToSend} label={!isRegistration ? \"Войти\" : \"Зарегестрироваться\"}\n                    isDisabled={isFetching} className={\"authorization-popupBox__btn btn-success\"}/>\n            {getBtnByIsExistUserForSwitch()}\n        </div>\n    );\n}\n\nexport default AuthorizationPopupBox;\n","import React from 'react';\nimport ModalWindow from \"../modalWindow\";\nimport AuthorizationPopupBox from \"./authorizationPopupBox\";\nimport Button from \"../../button/button\";\n\ntype AuthorizationModalWindowType = {\n  isActiveFromProps?: boolean\n  alertCloseHandler?:Function\n}\nconst AuthorizationModalWindow = (props: AuthorizationModalWindowType) => {\n\n  const {isActiveFromProps = false, alertCloseHandler} = props\n\n  return (\n      <ModalWindow alertCloseHandler={alertCloseHandler} isActiveFromProps={isActiveFromProps} withOpenBtn={true} modal={<AuthorizationPopupBox/>}>{\n          (openModalWindow:any) =>\n              <Button label=\"Вход и регистрация\" onClickHandler={openModalWindow} className=\"btn-outline-light\"/>\n      }</ModalWindow>\n  );\n}\n\nexport default AuthorizationModalWindow;\n","import React from 'react';\nimport \"./alertPopupBoxStyles.css\"\nimport Button from \"../../button/button\";\n\nexport type AlertPopupBoxType = {\n    closeModalWindow?: (boolean:boolean | any) => void\n    btnOneConfiguration : {\n        btnOneClassName? : string\n        btnOneLabel : string\n    }\n    btnTwoConfiguration : {\n        btnTwoHandler?: Function\n        btnTwoLabel : string\n        btnTwoClassName? : string\n    }\n    className?:string\n    alertText: string\n}\n\nconst AlertPopupBox = (props: AlertPopupBoxType) => {\n\n    const {\n        closeModalWindow = () => null,\n        alertText,\n        btnOneConfiguration : {btnOneLabel},\n        btnTwoConfiguration : {btnTwoHandler = () => null, btnTwoLabel}\n    } = props\n\n    const onClickBtnTwoHandler = () => {\n        btnTwoHandler()\n        closeModalWindow(false)\n    }\n\n    return (\n        <div className=\"alertPopupBox\">\n            <h2 className={\"alertPopupBox__title\"}>{alertText}</h2>\n            <hr className={\"my-4\"}/>\n            <div className=\"d-flex justify-content-between\">\n                <Button className={\"btn-success col-lg-5\"} onClickHandler={closeModalWindow} label={btnOneLabel}/>\n                <Button className={\"btn-danger col-lg-5\"} onClickHandler={onClickBtnTwoHandler} label={btnTwoLabel}/>\n            </div>\n        </div>\n    );\n}\n\nexport default AlertPopupBox;\n","import React from 'react';\nimport ModalWindow from \"../modalWindow\";\nimport AlertPopupBox from \"./alertPopupBox\";\n\nexport type AlertModalType = {\n  btnOneConfiguration : {\n    btnOneHandler?: Function\n    btnOneClassName? : string\n    btnOneLabel : string\n  }\n  btnTwoConfiguration : {\n    btnTwoHandler?: Function\n    btnTwoLabel : string\n    btnTwoClassName? : string\n  }\n  className?:string\n  alertText: string\n  openBtnElement?: any\n  isActiveFromProps?: boolean\n}\n\nconst AlertModalWindow = (props: AlertModalType) => {\n  const {openBtnElement, btnOneConfiguration: {btnOneHandler}, isActiveFromProps} = props\n  return (\n      <ModalWindow isActiveFromProps={isActiveFromProps} alertCloseHandler={btnOneHandler} withOpenBtn={true} modal={<AlertPopupBox {...props}/>}>{ (openModalWindow:any) =>\n          openBtnElement && React.cloneElement(openBtnElement, {onClickHandler: openModalWindow})\n      }</ModalWindow>\n  );\n}\n\nexport default AlertModalWindow;\n","\r\nexport const getSettingsFieldValueByFieldSelector = (state: any, field: string) => state.settingsState[field]()","import React, {useCallback, useRef, useState} from 'react';\r\nimport \"./headerStyles.css\"\r\nimport {Link, NavLink} from 'react-router-dom';\r\nimport Logo from \"../logo/logo\";\r\nimport AuthorizationModalWindow from \"../modalWindow/authorizationModalWindow/authorizationModalWindow\";\r\nimport {PATH_CREATE_ANNOUNCEMENT, PATH_MY_ANNOUNCEMENTS, PATH_SETTINGS} from \"../../app/App\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {getIsAuthSelector,} from \"../../redux/reducers/authorizationState/authorizationStateSelectors\";\r\nimport AlertModalWindow from \"../modalWindow/alertModalWindow/alertModalWindow\";\r\nimport Button from \"../button/button\";\r\nimport {postLogoutOrDeleteUser} from \"../../redux/thunks/thunks\";\r\nimport useOutsideClick from \"../../hooks/useOutsideClick\";\r\nimport {getSettingsFieldValueByFieldSelector} from \"../../redux/reducers/settingsState/settingsStateSelectors\";\r\nimport {\r\n    getCategoriesDataSelector,\r\n    getTheSubCategoriesSelector\r\n} from \"../../redux/reducers/mainState/mainStateSelectors\";\r\nimport NavCategoryButton from \"../navCategoryButton/navCategoryButton\";\r\n\r\nconst Header = (props: any) => {\r\n\r\n    //------USE-REF-----//\r\n    const ref = useRef(null)\r\n\r\n    //------MAP-STATE-TO-PROPS-----//\r\n    const isAuth = useSelector(getIsAuthSelector)\r\n    const name = useSelector((state) => getSettingsFieldValueByFieldSelector(state, \"name\"))\r\n\r\n    //-----MAP-DISPATCH-TO-PROPS----//\r\n    const dispatch = useDispatch()\r\n    const logoutUser = useCallback(() => dispatch(postLogoutOrDeleteUser(\"logout\")), [dispatch])\r\n\r\n    //------LOCAL-STATE-----//\r\n    const [isActiveAuthModal, setIsActiveAuthModal] = useState(false)\r\n    const [isActiveAuthMenu, setIsActiveAuthMenu] = useState(false)\r\n    const [isActiveLogoutAlert, setIsActiveLogoutAlert] = useState(false)\r\n\r\n    const outsideClickHandler = () => {\r\n        isActiveAuthMenu && toggleIsActiveAuthMenu()\r\n    }\r\n\r\n    useOutsideClick(ref, outsideClickHandler)\r\n\r\n    const toggleIsActiveAuthMenu = () => {\r\n        console.log(\"toggleIsActiveAuthMenu\")\r\n        setIsActiveAuthMenu(prevState => !prevState)\r\n    }\r\n\r\n    // const linkConfigs = [\r\n    //     {path: PATH_HOUSING, label: \"Недвижимость\"},\r\n    //     {path: PATH_JOB, label: \"Работа\"}\r\n    // ]\r\n\r\n    const alertCreateAnnouncement = useCallback(() =>\r\n        <AlertModalWindow openBtnElement={<Button className={\"header__btn-link btn-outline-light\"} label={\"Разместить объявление\"}/>}\r\n                          btnOneConfiguration={{btnOneLabel: \"Позже\", btnOneHandler:() => setIsActiveAuthModal(false) }}\r\n                          btnTwoConfiguration={{btnTwoLabel: \"Авторизироваться\", btnTwoHandler:() => setIsActiveAuthModal(true) }}\r\n                          alertText={\"Для размещения объявления, необходимо авторизироваться!\"}/>, [])\r\n\r\n    const alertLogout = useCallback(() =>\r\n        <AlertModalWindow isActiveFromProps={true} alertText={\"Выйти из аккаунта?\"}\r\n                          btnOneConfiguration={{btnOneLabel: \"Нет\", btnOneHandler:() => setIsActiveLogoutAlert(false)}}\r\n                          btnTwoConfiguration={{btnTwoLabel: \"Да\", btnTwoHandler:logoutUser }}/>, [])\r\n\r\n\r\n    const linkToCreateAnnouncement = <>\r\n        <NavLink activeClassName={\"active\"} className=\"header__btn-link btn btn-outline-light\" to={PATH_CREATE_ANNOUNCEMENT}>\r\n            Разместить объявление\r\n        </NavLink>\r\n    </>\r\n\r\n    const authMenu = <>\r\n        <div ref={ref} onClick={toggleIsActiveAuthMenu} className=\"dropdown\">\r\n            <Button className={\"btn-warning dropdown-toggle\"} label={name}/>\r\n            <div className={`dropdown-menu ${isActiveAuthMenu && \"show\"}`}>\r\n                <Link to={PATH_MY_ANNOUNCEMENTS} className=\"dropdown-item\">\r\n                    Мои объявления\r\n                </Link>\r\n                <Link to={PATH_SETTINGS} className=\"dropdown-item\">\r\n                    Настройки\r\n                </Link>\r\n                <div className=\"dropdown-divider\"/>\r\n                <div onClick={() => setIsActiveLogoutAlert(true)} className=\"dropdown-item\">Выход</div>\r\n            </div>\r\n        </div>\r\n    </>\r\n\r\n    return (\r\n        <div className=\"navbar navbar-dark bg-info pl-5 pr-5\">\r\n            <div className=\"d-flex\">\r\n                <Logo/>\r\n                {/*<div className=\"header__navigation-wrapper navbar-nav flex-row ml-5\">*/}\r\n                {/*    {categoriesData.map((categoryData: any, index:number) => {*/}\r\n                {/*        const {category, label, id} = categoryData*/}\r\n                {/*        return index !== 0 &&*/}\r\n                {/*            <NavCategoryButton className={\"nav-link ml-3\"} key={id} category={category} configCategory={categoryData}>*/}\r\n                {/*            {label}*/}\r\n                {/*        </NavCategoryButton> })}*/}\r\n                {/*</div>*/}\r\n            </div>\r\n            <div className=\"header__inner-wrapper\">\r\n                {isAuth ? authMenu : <AuthorizationModalWindow alertCloseHandler={() => setIsActiveAuthModal(false)} isActiveFromProps={isActiveAuthModal}/>}\r\n                {isAuth ? linkToCreateAnnouncement : alertCreateAnnouncement()}\r\n            </div>\r\n            {isActiveLogoutAlert && alertLogout()}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Header;\r\n","export const getSearchedDataSelector = (state: any) => state.searchBoxState.searchedData\r\nexport const getSearchConfigCategorySelector = (state: any) => state.searchBoxState.searchConfig.categoryId\r\nexport const getSearchConfigSubwayStationsSelector = (state: any) => state.searchBoxState.searchConfig.subwayStations\r\nexport const getSearchConfigSearchValueSelector = (state: any) => state.searchBoxState.searchConfig.searchValue\r\nexport const getIsFetchingSearchReducerSelector = (state: any) => state.searchBoxState.isFetching\r\nexport const getCurrentPageSearchReducerSelector = (state: any) => state.searchBoxState.currentPage\r\nexport const getTotalNumOfPageSearchReducerSelector = (state: any) => state.searchBoxState.totalNumOfPages","import React, {useCallback, useState} from 'react';\nimport \"./searchBoxStyles.css\";\nimport Select from \"./select/select\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {getAnnouncementsByFiltersThunk} from \"../../redux/thunks/thunks\";\nimport Button from \"../button/button\";\nimport {\n    getCategoriesDataSelector,\n    getSubwayStationsDataSelector, getTheSubCategoriesSelector\n} from \"../../redux/reducers/mainState/mainStateSelectors\";\nimport {\n    getIsFetchingSearchReducerSelector,\n    getSearchConfigCategorySelector,\n    getSearchConfigSearchValueSelector,\n    getSearchConfigSubwayStationsSelector\n} from \"../../redux/reducers/searchBoxState/searchBoxStateSelectors\";\nimport {useHistory} from 'react-router-dom';\nimport {\n    resetToInitialStateSearchReducerAC,\n    setSearchConfigCategoryAC,\n    setSearchConfigSearchValueAC,\n    setSearchConfigSubwayStationsAC\n} from '../../redux/reducers/searchBoxState/searchBoxStateActionCreators';\nimport {GET_PATH_SEARCH} from \"../../app/App\";\n\nconst SearchBox = (props: any) => {\n\n    const {placeHolder, className} = props\n\n    //------USE-HISTORY-----//\n    const history = useHistory()\n\n    //------MAP-STATE-TO-PROPS-----//\n    const subwayStationsData = useSelector(getSubwayStationsDataSelector)\n    const categoriesData = useSelector( (state) =>\n        getTheSubCategoriesSelector(getCategoriesDataSelector(state), \"active\"))\n    const isFetching = useSelector(getIsFetchingSearchReducerSelector)\n    const searchConfigCategory = useSelector(getSearchConfigCategorySelector)\n    const searchConfigSubwayStation = useSelector(getSearchConfigSubwayStationsSelector)\n    const searchConfigSearchValue = useSelector(getSearchConfigSearchValueSelector)\n\n    //-----MAP-DISPATCH-TO-PROPS----//\n    const dispatch = useDispatch()\n    const getAnnouncementsByFilters = useCallback(() => dispatch(getAnnouncementsByFiltersThunk()), [dispatch])\n    const resetToInitialStateSearchReducer = useCallback(() => dispatch(resetToInitialStateSearchReducerAC()), [dispatch])\n    const setSearchConfigCategory = useCallback((category) => dispatch(setSearchConfigCategoryAC(category)), [dispatch])\n    const setSearchConfigSubwayStation = useCallback((station) => dispatch(setSearchConfigSubwayStationsAC(station)), [dispatch])\n    const setSearchConfigSearchValue = useCallback((value) => dispatch(setSearchConfigSearchValueAC(value)), [dispatch])\n\n    //-----LOCAL-STATE-----//\n    const [searchValue, setSearchValue] = useState(searchConfigSearchValue)\n\n\n    const selectItemOnChangeHandler = (field: \"category\" | \"subway\", selectItem: any, setIsActiveSelect:Function) => {\n        field === \"category\" && setSearchConfigCategory(selectItem)\n        field === \"subway\" && setSearchConfigSubwayStation(selectItem)\n        setIsActiveSelect(false)\n    }\n\n    const searchOnChangeHandler = (event?: any) => {\n        const { target : {value = \"\"} = {} } = event || {}\n        setSearchValue(value)\n    }\n\n    const onClickFindBtnHandler = () => {\n        getAnnouncementsByFilters()\n        resetToInitialStateSearchReducer()\n        history.push(GET_PATH_SEARCH(searchConfigCategory.category))\n    }\n\n  return (\n      <div className={`searchBox d-flex col-lg-12 input-group justify-content-center ${className}`}>\n          <Select className={\"col-lg-2 p-0 input-group-prepend\"} onChangeHandlerSelectItem={(selectItem: any, handler: any) => selectItemOnChangeHandler(\"subway\", selectItem, handler)} value={searchConfigSubwayStation.name} selectItems={subwayStationsData} placeHolder={\"Выбор категории\"}/>\n          <div className=\"searchBox__search col-lg-5 p-0 d-flex\">\n              <input onBlur={({target: {value}}) => setSearchConfigSearchValue(value)} onChange={searchOnChangeHandler}\n                     className={\"searchBox__search-input w-100 form-control\"}\n                     value={searchValue} type=\"text\"\n                     placeholder={placeHolder}/>\n              <div onClick={() => setSearchValue(\"\")} className={\"searchBox__search-clear\"}>&#10006;</div>\n          </div>\n          <Select className={\"col-lg-2 p-0 input-group-append\"} onChangeHandlerSelectItem={(selectItem: any, handler: any) => selectItemOnChangeHandler(\"category\", selectItem, handler)} value={searchConfigCategory.label} selectItems={categoriesData} placeHolder={\"Метро\"}/>\n          <div className=\"input-group-append\">\n              <Button className={\"btn-success\"} onClickHandler={onClickFindBtnHandler} label={\"Найти\"} isDisabled={isFetching}/>\n          </div>\n\n      </div>\n  );\n}\n\nexport default SearchBox;\n","export const getLastAnnouncementsSelector = (state: any) => state.feedState.lastAnnouncements\r\nexport const getIsFetchingFeedReducerSelector = (state: any) => state.feedState.isFetching\r\nexport const getDescriptionSalamRuSelector = (state: any) => state.feedState.descriptionSalamRu\r\n","import React from 'react';\nimport \"./imageStyles.css\"\n\ntype ImagePropsType = {\n    photo: string\n    className?: string\n    onClickHandler?: any\n}\n\nconst Image = (props: ImagePropsType) => {\n\n    const {photo, className, onClickHandler = null} = props\n\n  return <div onClick={onClickHandler} style={{backgroundImage: `url(${photo})`}} className={`image ${className}`}/>\n}\n\nexport default Image;\n","import React from 'react';\nimport \"./announcementStyles.css\"\nimport {NavLink} from \"react-router-dom\";\nimport Image from \"../image/image\";\nimport {GET_PATH_SEARCH} from \"../../app/App\";\n\ntype AnnouncementPropsType = {\n    photo: string\n    id: number\n    name: string\n    category: string\n    price: number\n    creationDate: string\n    subwayStation: string\n    hasLike: boolean\n    className?: string\n}\n\nconst Announcement = (props: AnnouncementPropsType) => {\n\n    const {photo, name, creationDate, category, className, price, subwayStation, id} = props\n\n\n  return (\n      <div className={`border text-center text-white border-dark mb-3 mr-3 p-0 ${className}`}>\n              <NavLink to={`${GET_PATH_SEARCH(category)}/${id}`}>\n          <div className=\"card-header p-0\">\n                  <Image photo={photo}/>\n          </div>\n              </NavLink>\n              <div className={\"card-inner-wrapper d-flex flex-column justify-content-between\"}>\n                  <div className=\"card-body d-flex flex-column justify-content-between\">\n                      <h5 className=\"card-title text-primary\">{name}</h5>\n                      <h6 className=\"card-text text-dark\">{`Цена: ${price} руб.`}</h6>\n                      <h6 className=\"card-text text-dark\">{`Метро: ${subwayStation}`}</h6>\n                  </div>\n                  <div className=\"card-footer\">\n                      <small className=\"text-muted\">{`Дата создания: ${creationDate}`}</small>\n                  </div>\n              </div>\n      </div>\n  )\n}\n\nexport default Announcement;\n","import React from 'react';\nimport \"./footerStyles.css\"\nimport {NavLink} from 'react-router-dom';\nimport Logo from \"../logo/logo\";\nimport {PATH_CONTACTS, PATH_CREATE_ANNOUNCEMENT} from \"../../app/App\";\n\nconst Footer = (props: any) => {\n\n    const linkConfigs = [\n        {path: PATH_CONTACTS, label: \"Контакты\"},\n        {path: PATH_CONTACTS, label: \"Реклама\"},\n        {path: PATH_CONTACTS, label: \"Поддержка\"}\n    ]\n\n\n    //TODO Вынести в компонент navigation\n  return (\n      <div className=\"navbar navbar-dark bg-info pl-5 pr-5\">\n          <Logo/>\n          <div className=\"navbar-nav flex-row\">\n            {linkConfigs.map( ({path, label}) =>\n              <NavLink className=\"nav-link ml-3\" to={path}>\n                {label}\n              </NavLink> )}\n          </div>\n          <NavLink className=\"btn btn-outline-light\" to={PATH_CREATE_ANNOUNCEMENT}>\n              Разместить объявление\n          </NavLink>\n      </div>\n  );\n}\n\nexport default Footer;\n","import React, {useEffect, useState} from 'react';\nimport \"./buttonUpStyles.css\"\nimport Button from '../button/button';\n\n\nconst ButtonUp = (props: any) => {\n\n    const [isView, setIsView] = useState(false)\n\n    useEffect(() => {\n        document.addEventListener(\"scroll\", onScrollHandler)\n        return () => document.removeEventListener(\"scroll\", onScrollHandler)\n    }, [])\n\n    const onScrollHandler = (event: Event) => {\n        const currentHeight = Math.ceil(window.innerHeight + window.scrollY)\n        const innerHeight = window.innerHeight\n        currentHeight < innerHeight + 300 ? setIsView(false) : setIsView(true)\n    }\n\n  return isView ?\n      <Button className={\"btn-up btn-primary\"} label={\"Наверх\"}\n              onClickHandler={() => window.scrollTo(0,0)} /> : null\n}\n\nexport default ButtonUp;","import React from \"react\";\r\nimport \"./preloaderStyle.css\";\r\n\r\nconst Preloader = (props: any) => {\r\n    const {className} = props\r\n\r\n    return (\r\n    <span className={`cssload-loader ${className}`}>\r\n        <span className=\"cssload-loader-inner\"/>\r\n    </span>\r\n    )\r\n}\r\n\r\nexport default React.memo(Preloader)","import React, {useCallback, useEffect} from 'react';\nimport \"./feedPageStyles.css\"\nimport Header from \"../../components/header/header\";\nimport SearchBox from \"../../components/searchBox/searchBox\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {getLastAnnouncementsThunk} from \"../../redux/thunks/thunks\";\nimport {\n    getDescriptionSalamRuSelector,\n    getIsFetchingFeedReducerSelector,\n    getLastAnnouncementsSelector\n} from \"../../redux/reducers/feedState/feedStateSelectors\";\nimport Announcement from \"../../components/announcement/announcement\";\nimport Footer from \"../../components/footer/footer\";\nimport ButtonUp from \"../../components/buttonUp/buttonUp\";\nimport Button from \"../../components/button/button\";\nimport {GET_PATH_SEARCH} from \"../../app/App\";\nimport {NavLink} from \"react-router-dom\";\nimport {getIsFetchingMainStateSelector} from \"../../redux/reducers/mainState/mainStateSelectors\";\nimport Preloader from \"../../components/preloader/preloader\";\n\n\nconst FeedPage = (props: any) => {\n\n    //------MAP-STATE-TO-PROPS-----//\n    const lastAnnouncements = useSelector(getLastAnnouncementsSelector)\n    const isFetching = useSelector(getIsFetchingMainStateSelector)\n    const descriptionSalamRu = useSelector(getDescriptionSalamRuSelector)\n    // const {lastAnnouncements, isFetching, descriptionSalamRu} = useSelector((state) => ({\n    //     lastAnnouncements: getLastAnnouncementsSelector(state),\n    //     isFetching: getIsFetchingFeedReducerSelector(state),\n    //     descriptionSalamRu: getDescriptionSalamRuSelector(state)\n    // }))\n\n    //-----MAP-DISPATCH-TO-PROPS----//\n    const dispatch = useDispatch()\n    const getLastAnnouncements = useCallback((page, withConcat = false) => dispatch(getLastAnnouncementsThunk(page, withConcat)), [dispatch])\n\n    //----COMPONENT-DID-MOUNT-LIFECYCLE----//\n    useEffect(() => {\n        getLastAnnouncements(0)\n        getLastAnnouncements(1, true)\n    }, [])\n\n    return (\n        <div className={\"feedPage\"}>\n            <Header/>\n            <div className=\"feedPage__container container-lg\">\n                <div className=\"feedPage__searchBox\">\n                    <SearchBox placeHolder={\"Поиск по объявлениям\"}/>\n                </div>\n                <div className=\"feedPage__lastAnnouncements mb-5\">\n                    <h2 className=\"display-5 jumbotron p-2\">Последние объявления</h2>\n                    <div className=\"row flex-column align-items-center\">\n                        {isFetching && <Preloader/>}\n                        {lastAnnouncements.map((lastAnnouncement: any) =>\n                            <Announcement className={\"horizontalCard col-lg-7\"} {...lastAnnouncement}/>)}\n                    </div>\n                    <NavLink to={GET_PATH_SEARCH(\"all\")}>\n                        <Button className={\"btn-success\"} label={\"Посмотерть все объявления\"}/>\n                    </NavLink>\n\n                </div>\n                <div className=\"jumbotron p-4\">\n                    <h1 className=\"display-5\">О проекте</h1>\n                    <hr className=\"my-4\"/>\n                        <p className=\"lead\">{descriptionSalamRu}</p>\n                </div>\n                <ButtonUp/>\n            </div>\n            <Footer/>\n        </div>\n    );\n}\n\nexport default FeedPage;\n","import React from 'react';\nimport \"./contactsPageStyles.css\"\nimport Header from \"../../components/header/header\";\nimport Footer from \"../../components/footer/footer\";\n\n\nconst ContactsPage = (props: any) => {\n\n    return (\n        <div className={\"contactsPage fullHeightContent\"}>\n            <Header/>\n\n            <div className=\"contactsPage__container container-lg pb-5 pt-5 text-center\">\n                <div className=\"jumbotron p-4\">\n                    <h1 className=\"display-5\">Уважаемые пользователи!</h1>\n                    <hr className=\"my-4\"/>\n                    <p className=\"lead\">Lorem ipsum dolor sit amet,\n                        consectetur adipisicing elit.\n                        Impedit minima perferendis tenetur?\n                        Delectus dolores eaque est, explicabo laboriosam minus quia ut vel veniam.\n                        Dignissimos fuga, quas quasi quisquam saepe sint.\n                    </p>\n                </div>\n            </div>\n            <Footer/>\n        </div>\n    );\n}\n\nexport default ContactsPage;\n","import React from 'react';\nimport {useSelector} from \"react-redux\";\nimport {getIsAuthSelector} from \"../redux/reducers/authorizationState/authorizationStateSelectors\";\nimport {Redirect} from 'react-router-dom';\nimport {PATH_FEED} from \"../app/App\";\n\nconst withAuthRedirectHoc = (Component: any) => {\n    return (props: any) => {\n        const isAuth = useSelector(getIsAuthSelector)\n        return !isAuth ? <Redirect to={PATH_FEED}/> : <Component {...props}/>\n    }\n}\n\nexport default withAuthRedirectHoc;\n","import React from 'react';\nimport \"./imagePickerStyles.css\"\n\ntype ImagePickerPropsType = {\n    onLoadHandler: Function\n    className?: string\n}\n\nconst ImagePicker = (props: ImagePickerPropsType) => {\n\n    const {onLoadHandler, className} = props\n\n    const onChangeFileHandler = (event: any) => {\n        const file = event.target.files[0]\n        const {name = `uploadUserImg${Date.now()}`} = file || {}\n        const reader = new FileReader();\n\n        reader.onload = () => {\n            const {result} = reader\n            onLoadHandler(result, name)\n        }\n\n        file && reader.readAsDataURL(file)\n    }\n\n  return <div className={`h-100 w-100 ${className}`}>\n      <input onChange={onChangeFileHandler} type=\"file\" className={`imagePicker`}/>\n      <div className=\"h-100 w-100 d-flex justify-content-center align-items-center border border-dark alert-dark\">\n         <h2 className={\"display-4\"}>+</h2>\n      </div>\n  </div>\n}\n\nexport default ImagePicker;\n","import React, {ChangeEvent, useCallback, useEffect} from 'react';\nimport \"./settingsPageStyles.css\"\nimport Header from \"../../components/header/header\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {postLogoutOrDeleteUser, postSettingByFieldThunk} from \"../../redux/thunks/thunks\";\nimport Footer from \"../../components/footer/footer\";\nimport {SettingsFieldType} from '../../redux/reducers/settingsState/settingsState';\nimport TextInput from \"../../components/textInput/textInput\";\nimport Button from \"../../components/button/button\";\nimport Image from \"../../components/image/image\";\nimport {getSettingsFieldValueByFieldSelector} from '../../redux/reducers/settingsState/settingsStateSelectors';\nimport AlertModalWindow from \"../../components/modalWindow/alertModalWindow/alertModalWindow\";\nimport {setIsValidFormReducerAC, seValueFormReducerAC} from \"../../redux/reducers/formState/formStateActionCreators\";\nimport {getFieldsByPageFormReducerSelector} from \"../../redux/reducers/formState/formStateSelectors\";\nimport withAuthRedirectHoc from '../../hocs/withAuthRedirectHoc';\nimport ImagePicker from \"../../components/imagePicker/imagePicker\";\n\nconst SettingsPage = (props: any) => {\n\n    //------MAP-STATE-TO-PROPS-----//\n    const formState = useSelector((state) => getFieldsByPageFormReducerSelector(state, \"settings\"))\n    const {avatar, name, phone, login,} = formState\n\n    const settingsState = useSelector( (state) => ({\n        avatar: getSettingsFieldValueByFieldSelector(state, \"avatar\"),\n        name: getSettingsFieldValueByFieldSelector(state, \"name\"),\n        phone: getSettingsFieldValueByFieldSelector(state, \"phone\"),\n        login: getSettingsFieldValueByFieldSelector(state, \"login\")\n    }) )\n    const settingsStateEntries = Object.entries(settingsState)\n\n    //-----MAP-DISPATCH-TO-PROPS----//\n    const dispatch = useDispatch()\n    const postSettingByField = useCallback((data, field) => dispatch(postSettingByFieldThunk(data, field)), [dispatch])\n    const logoutUser = useCallback(() => dispatch(postLogoutOrDeleteUser(\"logout\")), [dispatch])\n    const deleteUser = useCallback(() => dispatch(postLogoutOrDeleteUser(\"delete\")), [dispatch])\n    const seValueFormReducer = useCallback((value, field) => dispatch(seValueFormReducerAC(value, field, \"settings\")), [dispatch])\n    const setIsValidFormReducer = useCallback((field) => dispatch(setIsValidFormReducerAC(field, \"settings\")), [dispatch])\n\n    //------DID-MOUNT-LIFE-CYCLE-----//\n    useEffect(() => {\n        settingsStateEntries.forEach( ([key, value]) => seValueFormReducer(value, key) )\n    }, [])\n\n    const onLoadImageHandler = (image: any, imageName: string) => {\n        const postData = {photo: image, name: imageName}\n        seValueFormReducer(image, \"avatar\")\n        postSettingByField(postData, \"avatar\")\n    }\n\n    //Функция - обработчик события изменеия в инпуте. Проверка на валидность значения в инпуте.\n    const onChangeHandler = (event: React.ChangeEvent<HTMLInputElement>, field: SettingsFieldType) => {\n        console.log(\"onChangeHandler\", field)\n        const {currentTarget: {value}} = event\n        seValueFormReducer(value, field)\n    }\n\n    //Функция - обработчик события клик по кнопке отправить или зарегестрироваться\n    const onClickHandler = (field: SettingsFieldType) => {\n        // @ts-ignore\n        const {isValid, value} = formState[field]\n        // @ts-ignore\n        const valueFromSettingsState = settingsState[field]\n        console.log(\"onClickHandler\", isValid)\n        const postData = {[field] : value}\n        isValid && value !== valueFromSettingsState && postSettingByField(postData, field)\n    }\n\n    //TODO Вынести конфиги для всех инпутов в formState!!\n    //Функция возращает массив с конфигурацией для полей ввода\n    const getInputsConfig = () => {\n        return [\n            {\n                field: \"name\",\n                label: \"Имя\",\n                inputType: \"text\",\n                value: name.value,\n                isValid: name.isValid\n            },\n            {\n                field: \"login\",\n                label: \"Логин\",\n                inputType: \"text\",\n                value: login.value,\n                isValid: login.isValid\n            },\n            {\n                field: \"phone\",\n                label: \"Номер телефона\",\n                inputType: \"tel\",\n                value: phone.value,\n                isValid: phone.isValid\n            },\n        ]\n    }\n\n    return (\n        <div className={\"settingsPage fullHeightContent\"}>\n            <Header/>\n            <div className=\"container-lg pb-5 pt-5\">\n                <h2 className=\"display-5 jumbotron p-2 mb-5\">Настройки профиля</h2>\n                <div className=\"d-flex justify-content-around\">\n                    <div className=\"settingsPage__settings-wrapper\">\n\n                        <div className=\"settingsPage__setting-avatar w-100\">\n                            <Image photo={avatar.value}/>\n                            <ImagePicker className={\"position-absolute fixed-top opacity-0\"} onLoadHandler={onLoadImageHandler}/>\n                        </div>\n\n                        <div className=\"settingsPage__logouOrDel-wrapper\">\n                            <AlertModalWindow openBtnElement={<Button className={\"btn-warning w-100 mb-4\"} label={\"Выйти из аккаунта\"}/>}\n                                              btnOneConfiguration={{btnOneLabel: \"Нет\"}}\n                                              btnTwoConfiguration={{btnTwoLabel: \"Да\", btnTwoHandler:logoutUser }}\n                                              alertText={\"Выйти из аккаунта?\"}/>\n\n                            <AlertModalWindow openBtnElement={<Button className={\"btn-danger w-100\"} label={\"Удалить аккаунт\"}/>}\n                                              btnOneConfiguration={{btnOneLabel: \"Нет\"}}\n                                              btnTwoConfiguration={{btnTwoLabel: \"Да\", btnTwoHandler:deleteUser }}\n                                              alertText={\"Удалить аккаунт?\"}/>\n                        </div>\n\n                    </div>\n                    <div className=\"settingsPage__settings-wrapper col-lg-5\">\n                        { getInputsConfig().map( ({field, ...restConfig}) => <>\n                            <div className=\"settingsPage__setting input-group w-100\">\n                                <TextInput className={\"w-75\"} key={field} {...restConfig}\n                                           onBlurHandler={() => setIsValidFormReducer(field)}\n                                           onChangeHandler={(event: ChangeEvent<HTMLInputElement>) => onChangeHandler(event, field)}/>\n                                <Button className={\"input-group-append btn-success align-self-end\"} onClickHandler={() => onClickHandler(field)} label={\"Сохранить\"}/>\n                            </div>\n                            <hr className=\"my-4\"/> </>) }\n                    </div>\n                </div>\n            </div>\n            <Footer/>\n        </div>\n    );\n}\n\nexport default withAuthRedirectHoc(SettingsPage);\n","export const getAnnouncementSelector = (state: any) => state.announcementState.announcement\r\nexport const getIsFetchingAnnouncementReducerSelector = (state: any) => state.announcementState.isFetching\r\n","import * as React from \"react\"\r\nimport \"./sliderStyle.css\"\r\nimport {useState} from \"react\";\r\n\r\n\r\ntype NextOrPrevArgType = \"next\" | \"prev\" | string\r\ntype SliderPropsTypes = {\r\n    children : any\r\n    className?: string\r\n}\r\n\r\nfunction Slider(props: SliderPropsTypes) {\r\n\r\n    const {children, className} = props\r\n\r\n    //-------------LOCAL-STATE--------------//\r\n    const [currentSlide, setCurrentSlide] = useState(0)\r\n\r\n    const isLastSlide = () => currentSlide === children[\"length\"] - 1\r\n    const isFirstSlide = () => currentSlide === 0\r\n\r\n    const changeSlide: any = (nextOrPrev: NextOrPrevArgType) => {\r\n        console.log(\"changeSlide\", nextOrPrev)\r\n        if(nextOrPrev === \"next\") setCurrentSlide(currentSlide + 1)\r\n        if(nextOrPrev === \"prev\") setCurrentSlide(currentSlide - 1)\r\n    }\r\n\r\n    const transformStyle = {\r\n        transform: `translateX( ${currentSlide * -100}% )`\r\n    }\r\n\r\n    return (\r\n        <div className={`slider ${className}`}>\r\n                {React.Children.map(children, child =>\r\n                    <div style={transformStyle} className={`slider__page`}>\r\n                        { React.cloneElement(child) }\r\n                    </div>)}\r\n            {!isFirstSlide() && <div onClick={() => changeSlide(\"prev\")} className=\"carousel-control carousel-control-prev\">\r\n                <span className=\"carousel-control-prev-icon\"/>\r\n            </div>}\r\n            {!isLastSlide() && <div onClick={() => changeSlide(\"next\")} className=\"carousel-control carousel-control-next\">\r\n                <span className=\"carousel-control-next-icon\"/>\r\n            </div>}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default React.forwardRef(Slider)","import React, {useCallback, useEffect} from 'react';\nimport \"./announcementPageStyles.css\"\nimport Header from \"../../components/header/header\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {getAnnouncementByIdThunk} from \"../../redux/thunks/thunks\";\nimport Footer from \"../../components/footer/footer\";\nimport {useHistory, useParams} from 'react-router-dom';\nimport {\n    getAnnouncementSelector,\n    getIsFetchingAnnouncementReducerSelector\n} from '../../redux/reducers/announcementState/announcementStateSelectors';\nimport Button from \"../../components/button/button\";\nimport Slider from \"../../components/slider/slider\";\nimport Image from \"../../components/image/image\";\n\nconst AnnouncementPage = (props: any) => {\n\n    //------MAP-STATE-TO-PROPS-----//\n    const isFetching = useSelector(getIsFetchingAnnouncementReducerSelector)\n    const {\n        photos = [],\n        name = \"\",\n        price = 0,\n        description = \"\",\n        station = \"\",\n        contactName = \"\",\n        contactPhone = \"\",\n        creationDate = \"\"\n    } = useSelector(getAnnouncementSelector)\n\n    //-----MAP-DISPATCH-TO-PROPS----//\n    const dispatch = useDispatch()\n    const getAnnouncementById = useCallback(() => dispatch(getAnnouncementByIdThunk(category, id)), [dispatch])\n\n    //------CATCH-PARAMS-FROM-URL-----//\n    const {category, id} = useParams()\n\n    const {goBack} = useHistory()\n\n    //----COMPONENT-DID-MOUNT-LIFECYCLE----//\n    useEffect(() => {\n        getAnnouncementById()\n    }, [])\n\n    return (\n        <div className={\"announcementPage fullHeightContent\"}>\n            <Header/>\n            <Button className={\"arrowBack\"} onClickHandler={goBack} label={\"Назад\"}/>\n            <div className=\"announcementPage__container container-lg pt-5 pb-5\">\n                <h2 className=\"announcementPage__name text-left m-0\">{name}</h2>\n                <hr className=\"my-4\"/>\n            <div className=\"announcementPage__photoAndInfo-wrapper mb-5\">\n                <div className=\"announcementPage__photo-slider float-left\">\n                    <Slider>\n                        {photos.map( (photo:string) => <Image photo={photo}/> ) }\n                    </Slider>\n                </div>\n\n                <div className=\"announcementPage__info-wrapper ml-5 col-lg-5 p-0\">\n                    <h3 className=\"announcementPage__info-price bg-warning p-2 m-0 text-left\">{`Цена: ${price} руб.`}</h3>\n                    <hr className=\"my-4\"/>\n                    <h5 className=\"announcementPage__info-location text-left alert alert-warning\">{`Метро: ${station}`}</h5>\n                    <hr className=\"my-4\"/>\n                    <div className=\"announcementPage__info-inner-wrapper alert alert-success\">\n                        <h5 className=\"announcementPage__info-name text-left\">Продавец: {contactName}</h5>\n                        <h5 className=\"announcementPage__info-name text-left\">Телефон: {contactPhone}</h5>\n                    </div>\n                    <hr className=\"my-4\"/>\n                    <h5 className=\"announcementPage__creationDate alert alert-dark\">Дата создания объявления: {creationDate}</h5>\n                </div>\n            </div>\n                <div className=\"announcementPage__description alert alert-primary\">\n                    <h5 className={\"text-left\"}>Описание:</h5>\n                    <p>{description}</p>\n                </div>\n\n            </div>\n            <Footer/>\n        </div>\n    );\n}\n\nexport default AnnouncementPage;\n","export const getMyAnnouncementsSelector = (state: any) => state.myAnnouncementsState.myAnnouncements\r\nexport const getIsFetchingMyAnnouncementsReducerSelector = (state: any) => state.myAnnouncementsState.isFetching\r\nexport const getCurrentPageMyAnnouncementsReducerSelector = (state: any) => state.myAnnouncementsState.currentPage\r\nexport const getTotalNumOfPagesMyAnnouncementsReducerSelector = (state: any) => state.myAnnouncementsState.totalNumOfPages\r\n","import React, {useEffect} from 'react';\n\nconst useInfinityScroll = (handler: Function) => {\n\n    const scrollHandler = (event: any) => {\n\n        const currentHeight = Math.ceil(window.innerHeight + window.scrollY)\n        const allHeight = Math.max(\n            document.body.scrollHeight, document.documentElement.scrollHeight,\n            document.body.offsetHeight, document.documentElement.offsetHeight,\n            document.body.clientHeight, document.documentElement.clientHeight\n        )\n\n        if(currentHeight >= allHeight) {\n            handler(event)\n        }\n    }\n\n  useEffect(() => {\n        document.addEventListener('scroll', scrollHandler)\n        return () => document.removeEventListener('scroll', scrollHandler)\n      }, [handler]\n  );\n}\n\nexport default useInfinityScroll;\n","import React, {useCallback, useEffect} from 'react';\nimport \"./myAnnouncementsPageStyles.css\"\nimport Header from \"../../components/header/header\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport Footer from \"../../components/footer/footer\";\nimport {\n    getIsFetchingMyAnnouncementsReducerSelector,\n    getMyAnnouncementsSelector,\n    getCurrentPageMyAnnouncementsReducerSelector,\n    getTotalNumOfPagesMyAnnouncementsReducerSelector\n} from '../../redux/reducers/myAnnouncementState/myAnnouncementStateSelectors';\nimport {getMyAnnouncementsThunk, postDeleteAnnouncementThunk} from \"../../redux/thunks/thunks\";\nimport Announcement from \"../../components/announcement/announcement\";\nimport useInfinityScroll from \"../../hooks/useInfinityScroll\";\nimport {setCurrentPageMyAnnouncementReducerAC} from \"../../redux/reducers/myAnnouncementState/myAnnouncementStateActionCreators\";\nimport Button from \"../../components/button/button\";\nimport withAuthRedirectHoc from \"../../hocs/withAuthRedirectHoc\";\nimport ButtonUp from \"../../components/buttonUp/buttonUp\";\nimport Preloader from \"../../components/preloader/preloader\";\n\nconst MyAnnouncementsPage = (props: any) => {\n\n    //------MAP-STATE-TO-PROPS-----//\n    const myAnnouncements = useSelector(getMyAnnouncementsSelector)\n    const isFetching = useSelector(getIsFetchingMyAnnouncementsReducerSelector)\n    const currentPage = useSelector(getCurrentPageMyAnnouncementsReducerSelector)\n    const totalNumOfPages = useSelector(getTotalNumOfPagesMyAnnouncementsReducerSelector)\n\n    //-----MAP-DISPATCH-TO-PROPS----//\n    const dispatch = useDispatch()\n    const getMyAnnouncements = useCallback((withConcat = false) => dispatch(getMyAnnouncementsThunk(withConcat)), [dispatch])\n    const setCurrentPage = useCallback(() => dispatch(setCurrentPageMyAnnouncementReducerAC()), [dispatch])\n    const postDeleteAnnouncement = useCallback((id) => dispatch(postDeleteAnnouncementThunk(id)), [dispatch])\n\n    //----COMPONENT-DID-MOUNT-LIFECYCLE----//\n    useEffect(() => {\n        getMyAnnouncements()\n    }, [])\n\n    //------INFINITY-SCROLL------//\n    const infinityScrollHandler = (event: any) => {\n        if(currentPage !== totalNumOfPages) {\n            setCurrentPage()\n            getMyAnnouncements(true)\n        }\n    }\n    useInfinityScroll(infinityScrollHandler)\n\n\n    const onClickBtnUpHandler = () => window.scrollTo(0, 0)\n\n    return (\n        <div className={\"myAnnouncements fullHeightContent\"}>\n            <Header/>\n            <div className=\"myAnnouncements__container container-lg pt-5 pb-5\">\n                <h2 className=\"display-5 jumbotron p-2\">Мои объявления</h2>\n                {isFetching && <Preloader/>}\n                {myAnnouncements.map( ({id, ...restMyAnnouncement}: any) =>\n                    <div key={id} className=\"d-flex mb-3\">\n                        <Announcement className={\"horizontalCard\"} id={id} {...restMyAnnouncement}/>\n                        <Button className={\"btn-danger align-self-stretch mb-3 align-items-center d-flex font-weight-bold\"} isDisabled={isFetching} onClickHandler={() => postDeleteAnnouncement(id)}\n                                label={\"Удалить объявление\"}/>\n                    </div>) }\n                <ButtonUp/>\n            </div>\n            <Footer/>\n        </div>\n    );\n}\n\nexport default withAuthRedirectHoc(MyAnnouncementsPage);\n","import React, {ChangeEvent, useCallback, useEffect} from 'react';\nimport \"./createAnnouncementStyles.css\"\nimport Header from \"../../components/header/header\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {postNewAnnouncementThunk} from \"../../redux/thunks/thunks\";\nimport Footer from \"../../components/footer/footer\";\nimport TextInput from \"../../components/textInput/textInput\";\nimport Select from \"../../components/searchBox/select/select\";\nimport Button from \"../../components/button/button\";\nimport Image from \"../../components/image/image\";\nimport {\n    getCategoriesDataSelector,\n    getIsFetchingMainStateSelector,\n    getSubwayStationsDataSelector, getTheSubCategoriesSelector\n} from \"../../redux/reducers/mainState/mainStateSelectors\";\nimport {\n    checkIsReadyToSendByPageFormReducerAC, resetToInitialByPageFormReducerAC,\n    setIsValidFormReducerAC,\n    seValueFormReducerAC\n} from \"../../redux/reducers/formState/formStateActionCreators\";\nimport {getFieldsByPageFormReducerSelector} from \"../../redux/reducers/formState/formStateSelectors\";\nimport {prepareFormStateByPageForSend} from \"../../redux/reducers/formState/formState\";\nimport {getSettingsFieldValueByFieldSelector} from \"../../redux/reducers/settingsState/settingsStateSelectors\";\nimport withAuthRedirectHoc from \"../../hocs/withAuthRedirectHoc\";\nimport ImagePicker from \"../../components/imagePicker/imagePicker\";\n\ntype CreateAnnouncementFieldsType =\n    \"photos\"\n    | \"name\"\n    | \"price\"\n    | \"category\"\n    | \"description\"\n    | \"subway\"\n    | \"phone\"\n    | string\n\nconst CreateAnnouncement = (props: any) => {\n\n    //------MAP-STATE-TO-PROPS-----//\n    const subwayStationsData = useSelector(getSubwayStationsDataSelector)\n    const [defaultCategory, ...categoriesData] = useSelector( (state) =>\n        getTheSubCategoriesSelector(getCategoriesDataSelector(state), \"active\"))\n    const phoneRedux = useSelector( (state) => getSettingsFieldValueByFieldSelector(state, \"phone\"))\n    const formState = useSelector((state) => getFieldsByPageFormReducerSelector(state, \"createAnnouncement\"))\n    const {\n        photoList, name,\n        price, categoryId,\n        description,\n        sellerPhone, stationId,\n        isReadyToSend\n    } = formState\n    const isFetching = useSelector(getIsFetchingMainStateSelector)\n\n    //-----MAP-DISPATCH-TO-PROPS----//\n    const dispatch = useDispatch()\n    const postNewAnnouncement = useCallback((data) => dispatch(postNewAnnouncementThunk(data)), [dispatch])\n    const setValueFormReducer = useCallback((value, field) => dispatch(seValueFormReducerAC(value, field, \"createAnnouncement\")), [dispatch])\n    const setIsValidFormReducer = useCallback((field) => dispatch(setIsValidFormReducerAC(field, \"createAnnouncement\")), [dispatch])\n    const checkIsReadyToSend = useCallback(() => dispatch(checkIsReadyToSendByPageFormReducerAC(\"createAnnouncement\")), [dispatch])\n    const resetToInitialByPageFormReducer = useCallback(() => dispatch(resetToInitialByPageFormReducerAC(\"createAnnouncement\")), [dispatch])\n\n    //------DID-MOUNT-LIFE-CYCLE-----//\n    useEffect(() => {\n        setValueFormReducer(phoneRedux, \"sellerPhone\")\n    }, [])\n\n    //------DID-UPDATE-LIFE-CYCLE-----//\n    useEffect(() => {\n        if(isReadyToSend) {\n            const condition = (postData: any, key: any, value: any) => {\n                key === \"categoryId\" || key === \"stationId\" ? postData[key] = value.id : postData[key] = value\n                return postData\n            }\n            const postData = prepareFormStateByPageForSend(formState)(condition)\n            postNewAnnouncement(postData)\n        }\n    }, [isReadyToSend])\n\n    const selectItemOnChangeHandler = (field: \"categoryId\" | \"stationId\", selectItem: any, setIsActiveSelect: Function) => {\n        if(\"className\" in selectItem) return false\n        setValueFormReducer(selectItem, field)\n        setIsActiveSelect(false)\n    }\n\n    const onLoadImageHandler = (image: any, imageName: string) => {\n        const value = photoList.value.concat({photo: image, name: imageName})\n        setValueFormReducer(value, \"photoList\")\n    }\n\n    //Функция - обработчик события изменеия в инпуте. Проверка на валидность значения в инпуте.\n    const onChangeHandler = (event: React.ChangeEvent<HTMLInputElement>, field: CreateAnnouncementFieldsType) => {\n        console.log(\"onChangeHandler\", field)\n        const {currentTarget: {value}} = event\n        setValueFormReducer(value, field)\n    }\n\n    const deleteLoadedImage = (imageName: string) => {\n        const newPhotosValue = photoList.value.filter( ({photo, name}: any) => name !== imageName)\n        setValueFormReducer(newPhotosValue, \"photoList\")\n    }\n\n    //Функция возращает массив с конфигурацией для полей ввода\n    const getInputsParamsConfig = () => {\n        return [\n            {\n                field: \"name\",\n                label: \"Имя\",\n                inputType: \"text\",\n                value: name.value,\n                isValid: name.isValid\n            },\n            {\n                field: \"price\",\n                label: \"Цена\",\n                inputType: \"number\",\n                value: price.value,\n                isValid: price.isValid\n            },\n            {\n                field: \"description\",\n                label: \"Описание\",\n                inputType: \"textArea\",\n                value: description.value,\n                isValid: description.isValid\n            },\n        ]\n    }\n\n    // const {name, subway, photos, description, phone, category, price} = state\n\n    const getErrorClassName = (field: \"categoryId\" | \"stationId\") =>\n        !formState[field].isValid && \"createAnnouncement__title-error\"\n\n    return (\n        <div className={\"createAnnouncement fullHeightContent\"}>\n            <Header/>\n            <div className=\"createAnnouncement__container container-lg pt-5\">\n                <h1 className=\"display-5 jumbotron p-2 mb-5\">Создание объявления</h1>\n                <div className=\"createAnnouncement__category d-flex\">\n                    <h4 className={`createAnnouncement__category-title col-lg-3 text-left p-0 ${getErrorClassName(\"categoryId\")}`}>\n                        Категория\n                    </h4>\n                    <Select className={\"col-lg-4\"} onBlurHandler={() => setIsValidFormReducer(\"categoryId\")}\n                        onChangeHandlerSelectItem={(selectItem: any, handler: any) => selectItemOnChangeHandler(\"categoryId\", selectItem, handler)}\n                        value={categoryId.value.label} selectItems={categoriesData} placeHolder={\"Выбор категории\"}/>\n                </div>\n                <hr className=\"my-4\"/>\n                <div className=\"createAnnouncement__params d-flex\">\n                    <h4 className=\"createAnnouncement__params-title col-lg-3 text-left p-0\">Параметры</h4>\n                    <div className=\"col-lg-4 p-0\">\n                        {getInputsParamsConfig().map(({field, ...restConfig}) =>\n                            <TextInput className={\"mb-3\"} key={field} {...restConfig}\n                                       onBlurHandler={() => setIsValidFormReducer(field)}\n                                       onChangeHandler={(event: ChangeEvent<HTMLInputElement>) => onChangeHandler(event, field)}/>)}\n\n                        <div className=\"createAnnouncement__params-photos position-relative\">\n                            <div className=\"createAnnouncement__params-photos-label mb-3\">\n                                <span>{`Фотографии ${photoList.value.length} из 5`}</span>\n                            </div>\n                            <div style={{height: \"73px\"}} className=\"createAnnouncement__params-photos-files d-flex\">\n                                {photoList.value.map( ({photo, name}: any) => <Image onClickHandler={() => deleteLoadedImage(name)} className={\"createAnnouncement__params-photos-files-file col-lg-4 mr-2\"} photo={photo}/> )}\n                                {photoList.value.length < 5 &&\n                                <ImagePicker className={\"col-lg-4 p-0\"} onLoadHandler={onLoadImageHandler}/>}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <hr className=\"my-4\"/>\n                <div className=\"createAnnouncement__location d-flex\">\n                    <h4 className={`createAnnouncement__location-title col-lg-3 text-left p-0 ${getErrorClassName(\"stationId\")}`}>Место сделки</h4>\n                    <Select className={\"col-lg-4 p-0\"} onBlurHandler={() => setIsValidFormReducer(\"stationId\")}\n                        onChangeHandlerSelectItem={(selectItem: any, handler: any) => selectItemOnChangeHandler(\"stationId\", selectItem, handler)}\n                        value={stationId.value.name} selectItems={subwayStationsData} placeHolder={\"Выбор метро\"}/>\n                </div>\n                <hr className=\"my-4\"/>\n\n                <div className=\"createAnnouncement__contacts d-flex\">\n                    <h4 className=\"createAnnouncement__contacts-title col-lg-3 text-left p-0\">Контакты</h4>\n                    <TextInput className={\"col-lg-3 p-0\"} isValid={sellerPhone.isValid} value={sellerPhone.value}\n                               placeholder={\"Номер телефона\"} label={\"Телефон\"} inputType={\"number\"}\n                               onBlurHandler={() => setIsValidFormReducer(\"sellerPhone\")}\n                               onChangeHandler={(event: ChangeEvent<HTMLInputElement>) => onChangeHandler(event, \"sellerPhone\")}/>\n                </div>\n                <hr className=\"my-4\"/>\n                <div className={\"d-flex justify-content-around mb-5 col-lg-7 p-0\"}>\n                    <Button className={\"btn-success col-lg-7\"} label={\"Создать объявление\"} isDisabled={isFetching} onClickHandler={checkIsReadyToSend}/>\n                    <Button className={\"btn-danger col-lg-4\"} label={\"Очистить поля\"} isDisabled={isFetching} onClickHandler={resetToInitialByPageFormReducer}/>\n                </div>\n            </div>\n            <Footer/>\n        </div>\n    );\n}\n\nexport default withAuthRedirectHoc(CreateAnnouncement);\n","export const getAnnouncementsListSelector = (state: any) => state.announcementsListState.announcementsList\r\nexport const getCurrentPageAnnouncementsListReducerSelector = (state: any) => state.announcementsListState.currentPage\r\nexport const getTotalNumOfPagesAnnouncementsListReducerSelector = (state: any) => state.announcementsListState.totalNumOfPages\r\n","import React, {useCallback} from 'react';\nimport Button from \"../button/button\";\nimport {GET_PATH_SEARCH} from \"../../app/App\";\nimport { NavLink } from 'react-router-dom';\nimport {useDispatch} from \"react-redux\";\nimport {setSearchConfigCategoryAC} from \"../../redux/reducers/searchBoxState/searchBoxStateActionCreators\";\n\ntype navCategoryButtonPropsType = {\n    category: string\n    activeClassName?: string\n    configCategory: string\n    children: any\n    key?: any\n    className?: string\n}\n\nconst NavCategoryButton = (props: navCategoryButtonPropsType) => {\n\n    //-----MAP-DISPATCH-TO-PROPS----//\n    const dispatch = useDispatch()\n    const setSearchConfigCategory = useCallback((category) => dispatch(setSearchConfigCategoryAC(category)), [dispatch])\n\n    const {activeClassName = \"active\", key, category, configCategory, className, children} = props\n\n    return <NavLink className={className} key={key} onClick={() => setSearchConfigCategory(configCategory)} to={GET_PATH_SEARCH(category)} activeClassName={activeClassName}>\n        {children}\n    </NavLink>\n\n}\n\nexport default NavCategoryButton;\n","import React, {useCallback, useEffect, useState} from 'react';\nimport \"./announcementsListPageStyles.css\"\nimport Header from \"../../components/header/header\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport Footer from \"../../components/footer/footer\";\nimport {getAnnouncementsByFiltersThunk, getAnnouncementsListThunk} from \"../../redux/thunks/thunks\";\nimport Announcement from \"../../components/announcement/announcement\";\nimport useInfinityScroll from \"../../hooks/useInfinityScroll\";\nimport {\n    getAnnouncementsListSelector,\n    getCurrentPageAnnouncementsListReducerSelector,\n    getTotalNumOfPagesAnnouncementsListReducerSelector\n} from \"../../redux/reducers/announcementsListState/announcementsListStateSelectors\";\nimport {\n    getCategoriesDataSelector,\n    getIsFetchingMainStateSelector\n} from \"../../redux/reducers/mainState/mainStateSelectors\";\nimport {\n    resetToInitialStateAnnouncementsListReducerAC,\n    setCurrentPageAnnouncementsListReducerAC\n} from \"../../redux/reducers/announcementsListState/announcementsListStateActionCreators\";\nimport {useHistory} from 'react-router-dom';\nimport {\n    getCurrentPageSearchReducerSelector,\n    getIsFetchingSearchReducerSelector,\n    getSearchConfigCategorySelector,\n    getSearchConfigSubwayStationsSelector,\n    getSearchedDataSelector,\n    getTotalNumOfPageSearchReducerSelector\n} from \"../../redux/reducers/searchBoxState/searchBoxStateSelectors\";\nimport SearchBox from \"../../components/searchBox/searchBox\";\nimport {\n    resetToInitialStateSearchReducerAC,\n    setCurrentPageSearchReducerAC\n} from '../../redux/reducers/searchBoxState/searchBoxStateActionCreators';\nimport Preloader from \"../../components/preloader/preloader\";\nimport ButtonUp from \"../../components/buttonUp/buttonUp\";\nimport NavCategoryButton from \"../../components/navCategoryButton/navCategoryButton\";\n\n\nconst AnnouncementsListPage = (props: any) => {\n\n    //------USE-HISTORY-----//\n    const {location : {pathname}} = useHistory()\n    const category = pathname.substr(1)\n\n    //------MAP-STATE-TO-PROPS-----//\n    const categoriesData = useSelector( (state) => getCategoriesDataSelector(state))\n        //---SEARCHED-BOX-STATE---//\n    const {label:currentCategory} = useSelector(getSearchConfigCategorySelector)\n    const {name:currentSubway}: any = useSelector(getSearchConfigSubwayStationsSelector)\n\n    const searchedData = useSelector(getSearchedDataSelector)\n    const isFetchingSearchState = useSelector(getIsFetchingSearchReducerSelector)\n    const currentPageSearch = useSelector(getCurrentPageSearchReducerSelector)\n    const totalNumOfPageSearch = useSelector(getTotalNumOfPageSearchReducerSelector)\n    const isEqualsCurrAndTotalPageSearch = currentPageSearch === totalNumOfPageSearch\n        //----------------------//\n    const isSearchState = searchedData.length || isFetchingSearchState\n    //---ANNOUNCEMENTS-LIST-STATE---//\n    const announcementsList = useSelector(getAnnouncementsListSelector)\n    const isFetchingMainState = useSelector(getIsFetchingMainStateSelector)\n    const currentPage = useSelector(getCurrentPageAnnouncementsListReducerSelector)\n    const totalNumOfPages = useSelector(getTotalNumOfPagesAnnouncementsListReducerSelector)\n    const isEqualsCurrAndTotalPage = currentPage === totalNumOfPages\n\n    //-----MAP-DISPATCH-TO-PROPS----//\n    const dispatch = useDispatch()\n    const getAnnouncements = useCallback((category, withConcat = false) => dispatch(getAnnouncementsListThunk(category, withConcat)), [dispatch])\n    const getAnnouncementsByFilters = useCallback(() => dispatch(getAnnouncementsByFiltersThunk(true)), [dispatch])\n    const setCurrentPage = useCallback(() => dispatch(setCurrentPageAnnouncementsListReducerAC()), [dispatch])\n    const setCurrentPageSearchBox = useCallback(() => dispatch(setCurrentPageSearchReducerAC()), [dispatch])\n    const resetToInitialStateAnnouncementsList = useCallback(() => dispatch(resetToInitialStateAnnouncementsListReducerAC()), [dispatch])\n    const resetToInitialStateSearchReducer = useCallback(() => dispatch(resetToInitialStateSearchReducerAC()), [dispatch])\n\n    //---GET-ACTIONS---//\n    const getDataAction: () => Function = () => isSearchState ? getAnnouncementsByFilters : getAnnouncements\n    const getDataState: () => Array<any> = () => isSearchState ? searchedData : announcementsList\n    const getSetCurrentPageAction: () => Function = () => isSearchState ? setCurrentPageSearchBox : setCurrentPage\n    const getIsEqualsCurrAndTotalPage: () => boolean = () => isSearchState ? isEqualsCurrAndTotalPageSearch : isEqualsCurrAndTotalPage\n\n    //---LOCAL-STATE---//\n    const [state, setState] = useState(() => ( {currentCategory, currentSubway} ) )\n\n    //----COMPONENT-DID-MOUNT/UNMOUNT-LIFECYCLE----//\n    useEffect(() => {\n        getAnnouncements(category)\n        return () => {\n            resetToInitialStateAnnouncementsList()\n            resetToInitialStateSearchReducer()\n        }\n    }, [])\n\n    //----COMPONENT-DID-UPDATE-LIFECYCLE----//\n    useEffect(() => {\n        resetToInitialStateAnnouncementsList()\n        getAnnouncements(category)\n        setState({currentCategory, currentSubway})\n    }, [category])\n\n    //------INFINITY-SCROLL------//\n    const infinityScrollHandler = () => (event: any) => {\n        if(!getIsEqualsCurrAndTotalPage()) {\n            getSetCurrentPageAction()()\n            getDataAction()(category, true)\n        }\n    }\n    useInfinityScroll(infinityScrollHandler())\n\n    return (\n        <div className={\"announcementsList fullHeightContent\"}>\n            <Header/>\n            <SearchBox className={\"mt-4\"} placeHolder={\"Поиск по объявлениям\"}/>\n            <hr className={\"my-4\"}/>\n            <div className=\"row d-flex justify-content-center col-lg-12\">\n                <h5 className={\"alert alert-success\"}>\n                    <span className={\"font-weight-bold\"}>Поиск по : </span>\n                    {state.currentSubway}> {state.currentCategory}\n                </h5>\n            </div>\n            <hr className={\"my-4\"}/>\n            <div className=\"announcementsList__slider-container d-flex container-fluid pt-2 pb-5\">\n                <div className=\"slider-container__slider col-lg-2 p-0 \">\n                    {categoriesData.map( (categoryData: any) => {\n                        const {id, label, category, subCategories = []} = categoryData\n                        return <>\n                            <NavCategoryButton key={id} category={category} activeClassName={\"text-warning\"} configCategory={categoryData}>\n                            <h5>{label}</h5>\n                        </NavCategoryButton>\n                            {subCategories.map( (subCategoryData: any) => {\n                                const {id, label, category} = subCategoryData\n                                return <NavCategoryButton key={id} activeClassName={\"text-warning\"} category={category} configCategory={subCategoryData}>\n                                    <h6>- {label}</h6>\n                                </NavCategoryButton> } )}\n                        </> } ) }\n                    <hr className={\"my-0 mt-4\"}/>\n                </div>\n                <div className=\"slider-container__content col-lg-8\">\n                    {getDataState().map( ({id, ...restMyAnnouncement}: any) =>\n                            <Announcement className={\"horizontalCard\"} id={id} {...restMyAnnouncement}/> ) }\n                    <ButtonUp/>\n                    {isFetchingSearchState || isFetchingMainState && <Preloader/>}\n                </div>\n            </div>\n            <Footer/>\n        </div>\n    );\n}\n\nexport default AnnouncementsListPage;\n","import React, {useCallback, useEffect} from 'react';\r\nimport \"./appStyles.css\"\r\nimport { Switch, Route, Redirect } from 'react-router-dom';\r\nimport FeedPage from \"../pages/feedPage/feedPage\";\r\nimport ContactsPage from \"../pages/contactsPage/contactsPage\";\r\nimport SettingsPage from \"../pages/settingsPage/settingsPage\";\r\nimport AnnouncementPage from '../pages/announcementPage/announcementPage';\r\nimport MyAnnouncementsPage from \"../pages/myAnnouncementsPage/myAnnouncementsPage\";\r\nimport CreateAnnouncement from \"../pages/createAnnouncement/createAnnouncement\";\r\n\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {getSubwayStationsThunk, getUserInfoThunk} from \"../redux/thunks/thunks\";\r\nimport AnnouncementsListPage from \"../pages/announcementsListPage/announcementsListPage\";\r\nimport {getCategoriesDataSelector, getTheSubCategoriesSelector} from \"../redux/reducers/mainState/mainStateSelectors\";\r\n\r\nexport const PATH_FEED = \"/feed\"\r\nexport const PATH_MY_ANNOUNCEMENTS = \"/myAnnouncements\"\r\nexport const PATH_CREATE_ANNOUNCEMENT = \"/createAnnouncement\"\r\nexport const PATH_SETTINGS = \"/settings\"\r\nexport const PATH_SEARCH = \"/search\"\r\nexport const GET_PATH_SEARCH = (category: string) =>  `${PATH_SEARCH}/${category}`\r\nexport const PATH_CONTACTS = \"/contacts\"\r\n\r\nconst App = () => {\r\n\r\n    //------MAP-STATE-TO-PROPS-----//\r\n    const categoriesData = useSelector( (state) =>\r\n        getTheSubCategoriesSelector(getCategoriesDataSelector(state)))\r\n\r\n    //-----MAP-DISPATCH-TO-PROPS----//\r\n    const dispatch = useDispatch()\r\n    const getSubwayStations = useCallback(() => dispatch(getSubwayStationsThunk()), [dispatch])\r\n    const getUserData = useCallback(() => dispatch(getUserInfoThunk()), [dispatch])\r\n\r\n    useEffect(() => {\r\n        getSubwayStations()\r\n        getUserData()\r\n    }, [])\r\n\r\n    return (\r\n    <div className=\"App bg-light\">\r\n        <Switch>\r\n            <Route exact path={PATH_CREATE_ANNOUNCEMENT} component={CreateAnnouncement}/>\r\n            <Route exact path={PATH_FEED} component={FeedPage}/>\r\n            <Route exact path={PATH_MY_ANNOUNCEMENTS} component={MyAnnouncementsPage}/>\r\n            <Route exact path={PATH_SETTINGS} component={SettingsPage}/>\r\n            <Route exact path={PATH_CONTACTS} component={ContactsPage}/>\r\n            {categoriesData.map( ({category}:any) => <Route exact path={GET_PATH_SEARCH(category)} component={AnnouncementsListPage}/> )}\r\n            {categoriesData.map( ({category}:any) =>  <Route exact path={`${GET_PATH_SEARCH(category)}/:id`} component={AnnouncementPage}/> )}\r\n            <Redirect to={PATH_FEED}/>\r\n        </Switch>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\n\r\nimport thunkMiddleWare from \"redux-thunk\";\r\n\r\nimport { connectRouter, routerMiddleware } from 'connected-react-router'\r\nimport { createBrowserHistory } from 'history'\r\nimport {mainStateReducer} from \"./reducers/mainState/mainState\";\r\nimport { authorizationStateReducer } from \"./reducers/authorizationState/authorizationState\";\r\nimport {searchBoxStateReducer} from \"./reducers/searchBoxState/searchBoxState\";\r\nimport {feedStateReducer} from \"./reducers/feedState/feedState\";\r\nimport { settingsStateReducer } from \"./reducers/settingsState/settingsState\";\r\nimport {announcementStateReducer} from \"./reducers/announcementState/announcementState\";\r\nimport {myAnnouncementsStateReducer} from \"./reducers/myAnnouncementState/myAnnouncementState\";\r\nimport {announcementsListStateReducer} from \"./reducers/announcementsListState/announcementsListState\";\r\nimport formStateReducer from \"./reducers/formState/formState\";\r\n\r\nexport const history = createBrowserHistory()\r\n\r\nconst reducers = () => combineReducers({\r\n    router: connectRouter(history),\r\n    mainState: mainStateReducer,\r\n    announcementsListState: announcementsListStateReducer,\r\n    formState: formStateReducer,\r\n    feedState: feedStateReducer,\r\n    searchBoxState: searchBoxStateReducer,\r\n    announcementState: announcementStateReducer,\r\n    myAnnouncementsState: myAnnouncementsStateReducer,\r\n    settingsState: settingsStateReducer,\r\n    authorizationState: authorizationStateReducer\r\n})\r\n\r\ntype rootReducerType = typeof reducers\r\nexport type AppStateType = ReturnType<rootReducerType>\r\n\r\nconst store = createStore(reducers(), applyMiddleware(routerMiddleware(history), thunkMiddleWare))\r\n\r\nexport default store","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./app/App\";\n\nimport { ConnectedRouter } from \"connected-react-router\"\nimport { Provider } from \"react-redux\"\n\nimport store, {history} from \"./redux/store\"\n\n(window as any).store = store\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <ConnectedRouter history={history}>\n                <App/>\n            </ConnectedRouter>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n)"],"sourceRoot":""}
{"version":3,"sources":["pictures/defaultAvatar.jpg","pictures/badCaseImage.png","components/searchBox/select/selectItem/selectItem.tsx","hooks/useOutsideClick.tsx","components/searchBox/select/select.tsx","api/testAPI.ts","redux/reducers/mainState/mainState.tsx","redux/reducers/authorizationState/authorizationState.tsx","redux/reducers/authorizationState/authorizationStateActionCreators.tsx","redux/reducers/searchBoxState/searchBoxState.tsx","redux/reducers/searchBoxState/searchBoxStateActionCreators.tsx","redux/reducers/feedState/feedState.tsx","redux/reducers/feedState/feedStateActionCreators.tsx","redux/reducers/settingsState/settingsState.tsx","redux/reducers/settingsState/settingsStateActionCreators.tsx","redux/reducers/announcementState/announcementState.tsx","redux/reducers/announcementState/announcementStateActionCreators.tsx","redux/reducers/myAnnouncementState/myAnnouncementState.tsx","redux/reducers/myAnnouncementState/myAnnouncementStateActionCreators.tsx","redux/reducers/announcementsListState/announcementsListState.tsx","redux/reducers/announcementsListState/announcementsListStateActionCreators.tsx","redux/reducers/mainState/mainStateActionCreators.tsx","redux/reducers/formState/formState.ts","redux/reducers/formState/formStateActionCreators.tsx","redux/thunks/thunks.tsx","components/button/button.tsx","redux/reducers/mainState/mainStateSelectors.tsx","redux/reducers/searchBoxState/searchBoxStateSelectors.tsx","components/searchBox/searchBox.tsx","redux/reducers/feedState/feedStateSelectors.tsx","api/serverAPI.ts","hooks/useBadCaseImage.tsx","components/picture/picture.tsx","components/announcement/announcement.tsx","components/buttonUp/buttonUp.tsx","components/preloader/preloader.tsx","components/alertEmptyResponse/alertEmptyResponse.tsx","components/alertErrorFetching/alertErrorFetching.tsx","components/withBadFetchingCasesWrapper/withBadFetchingCasesWrapper.tsx","components/categoryNavButton/categoryNavigationButton.tsx","components/categoryNavigation/categoryNavigation.tsx","pages/feedPage/feedPage.tsx","components/textInput/textInput.tsx","redux/reducers/settingsState/settingsStateSelectors.tsx","components/modalWindow/modalWindow.tsx","components/modalWindow/alertModalWindow/alertPopupBox.tsx","components/modalWindow/alertModalWindow/alertModalWindow.tsx","redux/reducers/formState/formStateSelectors.tsx","redux/reducers/authorizationState/authorizationStateSelectors.tsx","hocs/withAuthRedirectHoc.tsx","components/imagePicker/imagePicker.tsx","pages/settingsPage/settingsPage.tsx","redux/reducers/announcementState/announcementStateSelectors.tsx","components/slider/slider.tsx","pages/announcementPage/announcementPage.tsx","redux/reducers/myAnnouncementState/myAnnouncementStateSelectors.tsx","hooks/useInfinityScroll.tsx","pages/myAnnouncementsPage/myAnnouncementsPage.tsx","pages/createAnnouncement/createAnnouncement.tsx","redux/reducers/announcementsListState/announcementsListStateSelectors.tsx","pages/announcementsListPage/announcementsListPage.tsx","pages/cooperationPage/cooperationPage.tsx","components/logo/logo.tsx","components/modalWindow/authorizationModalWindow/authorizationPopupBox.tsx","components/modalWindow/authorizationModalWindow/authorizationModalWindow.tsx","components/navBar/navBar.tsx","components/header/header.tsx","components/footer/footer.tsx","pages/supportPage/supportPage.tsx","app/App.tsx","redux/store.tsx","index.tsx"],"names":["module","exports","SelectItem","props","name","isActive","onChangeHandler","className","onClick","useOutsideClick","ref","handler","listener","event","popupBox","current","path","composed","composedPath","includes","useEffect","document","addEventListener","removeEventListener","Select","selectItems","placeHolder","onBlurHandler","onChangeHandlerSelectItem","value","useState","setIsActive","useRef","toggleIsActive","boolean","prevIsActive","onBlur","readOnly","onChange","placeholder","type","map","selectItem","testAPI","baseUrl","getIsExistUser","login","console","log","fetch","postAuthorizationData","data","postRegistrationData","getLastAnnouncements","page","getUserInfo","getSubwayStations","getAnnouncementsByFilters","category","subway","getAnnouncementsList","getAnnouncementByIdThunk","id","getMyAnnouncements","postDeleteAnnouncement","postSettingsByField","field","postSettingsAvatar","postSettingsName","postSettingsPhone","postSettingsLogin","postLogout","postDelete","postNewAnnouncement","getItemFromLocalStorage","feild","localStorage","getItem","setItemToLocalStorage","setItem","clearLocalStorage","clear","initialStateSubway","initialStateCategory","initialState","isFetching","isEmptyResponse","isErrorFetch","subwayStationsData","categoriesData","subCategories","apiService","mainStateReducer","state","action","payload","concat","LOCATION_CHANGE","window","scrollTo","isExistUser","isRegistration","isCorrectAuthData","isAuth","authorizationStateReducer","setIsCorrectAuthDataAC","searchedData","currentPage","totalNumOfPages","searchConfig","categoryId","subwayStations","searchValue","searchBoxStateReducer","withConcat","location","pathname","initialStateSearchConfig","PATH_SEARCH","newSearchedData","newCurrentPage","setSearchedDataAC","setIsFetchingSearchReducerAC","setTotalNumOfPageSearchReducerAC","setSearchConfigCategoryAC","lastAnnouncements","descriptionSalamRu","feedStateReducer","newLastAnnouncements","setLastAnnouncementsAC","photo","defaultAvatar","phone","password","settingsStateReducer","setSettingsInLocalStorageByFieldAC","announcement","announcementStateReducer","settIsFetchingAnnouncementReducerAC","myAnnouncements","myAnnouncementsStateReducer","newMyAnnouncementsSet","newMyAnnouncementsDel","filter","setMyAnnouncementsAC","settIsFetchingMyAnnouncementsReducerAC","setTotalNumOfPageMyAnnouncementReducerAC","announcementsList","announcementsListStateReducer","setAnnouncementsListAC","setTotalNumOfPageAnnouncementsListReducerAC","setIsFetchingMainStateAC","setIsEmptyResponseMainStateAC","setIsErrorFetchMainStateAC","defaultInitialStateForFormField","isValid","authorization","isReadyToSend","registration","phoneNumber","createAnnouncement","photoList","price","description","sellerPhone","stationId","settings","checkIsValid","length","JSON","stringify","prepareFormStateByPageForSend","restFormState","stateEntries","Object","entries","defaultCondition","postData","key","condition","reduce","formStateReducer","stateByPage","stateByField","stateKeys","keys","newState","seValueFormReducerAC","setIsValidFormReducerAC","checkIsReadyToSendByPageFormReducerAC","resetToInitialByPageFormReducerAC","sendAuthorizationOrRegistrationThunk","dispatch","getState","authorizationState","mainState","then","response","ok","status","json","result","getUserInfoThunk","catch","error","getAnnouncementsByFiltersThunk","searchBoxState","pages","announcements","getLastAnnouncementsThunk","postLogoutOrDeleteUser","logoutOrDelete","push","PATH_FEED","err","getMyAnnouncementsThunk","myAnnouncementsState","getAnnouncementsListThunk","announcementsListState","restUserData","forEach","Button","isDisabled","label","onClickHandler","getIsFetchingMainStateSelector","getIsEmptyResponseMainStateSelector","getIsErrorFetchMainStateSelector","getSubwayStationsDataSelector","getCategoriesDataSelector","getTheSubCategoriesSelector","activeClassName","isIncludesSubCategory","categoryData","newCategoriesData","baseCategory","prepareCategoryToPush","getSearchedDataSelector","getSearchConfigCategorySelector","getSearchConfigSubwayStationsSelector","getSearchConfigSearchValueSelector","getIsFetchingSearchReducerSelector","getCurrentPageSearchReducerSelector","getTotalNumOfPageSearchReducerSelector","SearchBox","useHistory","useSelector","searchConfigCategory","searchConfigSubwayStation","searchConfigSearchValue","useDispatch","useCallback","resetToInitialStateSearchReducer","setSearchConfigCategory","setSearchConfigSubwayStation","station","setSearchConfigSearchValue","setSearchConfigSearchValueAC","setSearchValue","selectItemOnChangeHandler","setIsActiveSelect","target","newPathname","GET_PATH_SEARCH","getLastAnnouncementsSelector","feedState","API_URL","serverAPI","baseURL","base64token","btoa","headers","Headers","addAuthHeader","set","headerWithAuth","getConfiguration","withAuth","body","method","postConfiguration","configuredGET","configuredPOST","logoutPOST","baseUrlWithoutApi","slice","getAnnouncementById","useBadCaseImage","imageSRC","setImageSRC","image","Image","src","onerror","badCaseImage","Picture","styles","style","backgroundImage","Announcement","creationDate","subwayStation","to","ButtonUp","isView","setIsView","onScrollHandler","currentHeight","Math","ceil","innerHeight","scrollY","React","memo","AlertEmptyResponse","alertText","AlertErrorFetching","WithBadFetchingCasesWrapper","isFetchingRedux","isEmptyResponseRedux","isErrorFetchingRedux","preloader","alertEmptyResponse","alertErrorFetching","isErrorFetching","children","CategoryNavigationButton","configCategory","CategoryNavigation","subCategoryData","FeedPage","lastAnnouncement","TextInput","inputType","resize","rows","getSettingsFieldValueByFieldSelector","settingsState","ModalWindow","isActiveFromProps","modal","withOpenBtn","alertCloseHandler","closeModalWindow","withAlertClose","cloneElement","AlertPopupBox","btnOneLabel","btnOneConfiguration","btnTwoConfiguration","btnTwoHandler","btnTwoLabel","AlertModalWindow","openBtnElement","btnOneHandler","openModalWindow","getFieldsByPageFormReducerSelector","formState","getIsRegistrationSelector","getIsAuthSelector","getIsExistUserSelector","getIsCorrectAuthDataSelector","withAuthRedirectHoc","Component","ImagePicker","onLoadHandler","file","files","Date","now","reader","FileReader","onload","readAsDataURL","settingsStateEntries","postSettingByField","values","postSettingByFieldThunk","logoutUser","deleteUser","seValueFormReducer","setIsValidFormReducer","imageName","restConfig","currentTarget","valueFromSettingsState","getAnnouncementSelector","announcementState","getIsFetchingAnnouncementReducerSelector","currentSlide","setCurrentSlide","isNeedBtn","nextOrPrev","transformStyle","transform","child","el","AnnouncementPage","photos","contactName","contactPhone","useParams","goBack","getMyAnnouncementsSelector","getIsFetchingMyAnnouncementsReducerSelector","getCurrentPageMyAnnouncementsReducerSelector","getTotalNumOfPagesMyAnnouncementsReducerSelector","useInfinityScroll","scrollHandler","max","scrollHeight","documentElement","offsetHeight","clientHeight","setCurrentPage","delMyAnnouncementByIdAC","postDeleteAnnouncementThunk","infinityScrollHandler","restMyAnnouncement","phoneRedux","PATH_MY_ANNOUNCEMENTS","postNewAnnouncementThunk","setValueFormReducer","checkIsReadyToSend","resetToInitialByPageFormReducer","getErrorClassName","newPhotosValue","deleteLoadedImage","getAnnouncementsListSelector","getCurrentPageAnnouncementsListReducerSelector","getTotalNumOfPagesAnnouncementsListReducerSelector","AnnouncementsListPage","substr","currentCategory","currentSubway","isFetchingSearchState","isEqualsCurrAndTotalPageSearch","isSearchState","isEqualsCurrAndTotalPage","isFetchingMainState","getAnnouncements","setCurrentPageSearchBox","resetToInitialStateAnnouncementsList","getIsEqualsCurrAndTotalPage","setState","CooperationPage","Logo","AuthorizationPopupBox","isErrorFetchMainState","authFormState","regFormState","currentFormState","sendAuthorizationOrRegistration","setIsExistUserAuthDataAC","setIsRegistration","setIsCorrectAuthData","getInputsConfig","restInputConfig","AuthorizationModalWindow","NavBar","linkConfigs","PATH_COOPERATION","PATH_SUPPORT","Header","isActiveAuthModal","setIsActiveAuthModal","isActiveMobileMenu","setIsActiveMobileMenu","isActiveAuthMenu","setIsActiveAuthMenu","isActiveLogoutAlert","setIsActiveLogoutAlert","toggleIsActiveAuthMenu","prevState","alertCreateAnnouncement","alertLogout","authMenu","PATH_SETTINGS","linkToCreateAnnouncement","Footer","SupportPage","App","getUserData","exact","component","CreateAnnouncement","MyAnnouncementsPage","SettingsPage","history","createBrowserHistory","store","createStore","combineReducers","router","connectRouter","applyMiddleware","routerMiddleware","thunkMiddleWare","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.1317e60a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/defaultAvatar.d73128e4.jpg\";","module.exports = __webpack_public_path__ + \"static/media/badCaseImage.5f2ab25f.png\";","import React from 'react';\nimport \"./selectItem.css\"\n\ntype PropsType = {\n    name?: string\n    isActive: any\n    onChangeHandler: any\n    className?: string\n}\n\nconst SelectItem = (props: PropsType) => {\n\n    const {name = \"\", isActive, onChangeHandler, className} = props\n\n    return (\n        <div onClick={onChangeHandler} className={`selectItem dropdown-item p-3 border-bottom ${className} ${isActive && \"active\"}`}>\n            {name}\n            {/*<input checked={isActive} type=\"radio\" className=\"selectItem__checkBox\"/>*/}\n        </div>\n    );\n}\n\nexport default SelectItem;\n","import React, {useEffect} from 'react';\n\nconst useOutsideClick = (ref: any, handler: any) => {\n\n    const listener = (event: any) => {\n        const popupBox = ref.current\n        const target = event.path || ( event.composed && event.composedPath() )\n        !target.includes(popupBox) && handler(event);\n    }\n\n  useEffect(() => {\n        document.addEventListener('click', listener)\n        return () => document.removeEventListener('click', listener)\n      }, [ref, handler]\n  );\n}\n\nexport default useOutsideClick;\n","import React, {useRef, useState} from 'react';\nimport \"./selectStyles.css\"\nimport SelectItem from \"./selectItem/selectItem\";\nimport useOutsideClick from \"../../../hooks/useOutsideClick\";\n\nconst Select = (props: any) => {\n    const {\n        selectItems = [],\n        placeHolder,\n        onChangeHandler,\n        onBlurHandler = null,\n        onChangeHandlerSelectItem,\n        value,\n        className\n    } = props\n\n    const [isActive, setIsActive] = useState(false)\n    const ref = useRef(null)\n    const outsideClickHandler = () => isActive && setIsActive(false)\n    useOutsideClick(ref, outsideClickHandler)\n\n    const toggleIsActive: (boolean?: any) => void = (boolean:boolean | null = null) => {\n        setIsActive(prevIsActive => boolean !== null ? boolean : !prevIsActive)\n    }\n\n    return (\n        <div ref={ref} className={`select dropdown ${className} p-0`}>\n                <input onClick={() => toggleIsActive()} onBlur={onBlurHandler} readOnly={true} onChange={onChangeHandler}\n                       placeholder={placeHolder}\n                       className={\"select__current form-control dropdown-toggle w-100\"}\n                       value={value} type=\"text\"/>\n                {/*<div className={\"select__current-arrow\"}>&darr;</div>*/}\n            <div className={`select__items dropdown-menu w-100 ${isActive && \"show\"}`}>\n                {selectItems.map((selectItem: any) =>\n                    <SelectItem {...selectItem} isActive={selectItem[\"name\"] === value}  onChangeHandler={(event:any) => onChangeHandlerSelectItem(selectItem, toggleIsActive)}/>)}\n            </div>\n        </div>\n    );\n}\n\nexport default Select;\n","// ------AUTHORIZATION-TYPES-----//\r\nimport {SettingsFieldType} from \"../redux/reducers/settingsState/settingsState\";\r\n\r\nexport type AuthorizationData = { login: string,  password: string }\r\nexport type RegistrationData = { name: string,  login: string, password: string }\r\n\r\n// ------CREATE-ANNOUNCEMENT-PAGE---//?\r\nexport type NewAnnouncementData = {\r\n    category: number,\r\n    name: string,\r\n    description: string\r\n    photos?: Array<string>,\r\n    price: number,\r\n    subway: string,\r\n    phone: string\r\n}\r\n\r\n// ------SEARCH-BOX-TYPES-----//\r\nexport type GetAnnouncementsCategoryType = \"announcements\" |  \"housing\" | \"apartment\" | \"bunk\" | \"room\" | \"job\" | \"vacancies\" | string\r\n\r\n// ------SETTINGS-TYPES---//\r\nexport type PostSettingsAvatarData = { avatar: string }\r\nexport type PostSettingsNameData = { name: string }\r\nexport type PostSettingsEmailData = { email: string }\r\nexport type PostSettingsPhoneData = { phone: string }\r\n\r\nexport class testAPI {\r\n\r\n    static baseUrl = './json/'\r\n\r\n    // ------AUTHORIZATION-----//\r\n    static getIsExistUser = (login: string): Promise<Response> => {\r\n        console.log(login, \"getIsExistUser\")\r\n        const path = `getIsExistUser`\r\n        return fetch(`https://5faa7de0b5c645001602aa4e.mockapi.io/responseForPost`)\r\n    }\r\n\r\n    static postAuthorizationData = (data: AuthorizationData): Promise<Response> => {\r\n        console.log(data, \"postAuthorizationData\")\r\n         return fetch(`https://5faa7de0b5c645001602aa4e.mockapi.io/responseForPost`)\r\n    }\r\n\r\n    static postRegistrationData = (data: RegistrationData): Promise<Response> => {\r\n        console.log(data, \"postRegistrationData\")\r\n        return fetch(`https://5faa7de0b5c645001602aa4e.mockapi.io/responseForPost`)\r\n    }\r\n\r\n    // ------FEED-PAGE-----//\r\n    //@response  20 последних объявлений\r\n    static getLastAnnouncements = (page: number): Promise<Response> => {\r\n        console.log(\"getLastAnnouncements\")\r\n        const path = `getLastAnnouncements`\r\n        return fetch(`https://5faa8c4eb5c645001602abd5.mockapi.io/getAnnouncementsList`)\r\n    }\r\n\r\n    // ------GET-USER-INFO-----//\r\n    static getUserInfo = (): Promise<Response> => {\r\n        console.log(\"getUserInfo\")\r\n        return fetch(`https://5faa8c4eb5c645001602abd5.mockapi.io/getUserData`)\r\n    }\r\n\r\n    // ------SEARCH-BOX-----//\r\n    static getSubwayStations = (): Promise<Response> => {\r\n        console.log(\"getSubwayStations\")\r\n        return fetch(`https://5faa7de0b5c645001602aa4e.mockapi.io/getSubwayStations`)\r\n    }\r\n\r\n    static getAnnouncementsByFilters = (page: number, name?: string, category?: string| number, subway?: string | number): Promise<Response> => {\r\n        const path = `getAnnouncementsByFilters?page=${page}&category=${category}&name=${name}&subway=${subway}`\r\n        console.log(page, category, name, subway, \"getAnnouncementsByFilters\", path)\r\n        return fetch(`https://5faa8c4eb5c645001602abd5.mockapi.io/getAnnouncementsByFilters`)\r\n    }\r\n\r\n    //---REQUEST-FOR-SEARCH-BOX/FEED-PAGE/HOUSING/JOB/TRADING---//\r\n    static getAnnouncementsList = (page: number, category: GetAnnouncementsCategoryType): Promise<Response> => {\r\n        const path = `getAnnouncementsByCategoryAndName?page=${page}&category=${category}`\r\n        console.log(page, category, \"getAnnouncementsByCategoryAndName\", path)\r\n        return fetch(`https://5faa8c4eb5c645001602abd5.mockapi.io/getAnnouncementsList`)\r\n    }\r\n\r\n    // ------GET-ANNOUNCEMENT-BY-CATEGORY-AND-ID----//\r\n    static getAnnouncementByIdThunk = (category: GetAnnouncementsCategoryType, id: number): Promise<Response> => {\r\n        console.log(\"getAnnouncementByIdThunk\", category, id)\r\n        const path = `getAnnouncementByIdThunk/${category}/${id}`\r\n        return fetch(`https://5faa7de0b5c645001602aa4e.mockapi.io/getAnnouncement`)\r\n    }\r\n\r\n    // ------MY-ANNOUNCEMENTS-PAGE---//\r\n    static getMyAnnouncements = (page: number): Promise<Response> => {\r\n        console.log(\"getMyAnnouncements\")\r\n        const path = `getMyAnnouncements?page=${page}`\r\n        return fetch(`https://5faa7de0b5c645001602aa4e.mockapi.io/getMyAnnouncements`)\r\n    }\r\n\r\n    static postDeleteAnnouncement = (id:number): Promise<Response> => {\r\n        console.log(id, \"postDeleteAnnouncement\")\r\n        return fetch(`https://5faa7de0b5c645001602aa4e.mockapi.io/responseForPost`)\r\n    }\r\n\r\n\r\n    // ------SETTINGS-PAGE---//\r\n\r\n    static postSettingsByField = (data: any, field: SettingsFieldType): Promise<Response> => {\r\n        console.log(data, \"postSettingsByField\")\r\n        switch (field) {\r\n            case \"photo\": return testAPI.postSettingsAvatar(data)\r\n            case \"name\": return testAPI.postSettingsName(data)\r\n            case \"phone\": return testAPI.postSettingsPhone(data)\r\n            case \"login\": return testAPI.postSettingsLogin(data)\r\n            default: return testAPI.postSettingsAvatar(data)\r\n        }\r\n    }\r\n    static postSettingsAvatar = (data: PostSettingsAvatarData): Promise<Response> => {\r\n        console.log(data, \"postSettingsAvatar\")\r\n        return fetch(`https://5faa7de0b5c645001602aa4e.mockapi.io/responseForPost`)\r\n    }\r\n\r\n    static postSettingsName = (data: PostSettingsNameData): Promise<Response> => {\r\n        console.log(data, \"postSettingsName\")\r\n        return fetch(`https://5faa7de0b5c645001602aa4e.mockapi.io/responseForPost`)\r\n    }\r\n\r\n    static postSettingsLogin = (data: PostSettingsEmailData): Promise<Response> => {\r\n        console.log(data, \"postSettingsLogin\")\r\n        return fetch(`https://5faa7de0b5c645001602aa4e.mockapi.io/responseForPost`)\r\n    }\r\n\r\n    static postSettingsPhone = (data: PostSettingsPhoneData): Promise<Response> => {\r\n        console.log(data, \"postSettingsPhone\")\r\n        return fetch(`https://5faa7de0b5c645001602aa4e.mockapi.io/responseForPost`)\r\n    }\r\n\r\n    static postLogout = (): Promise<Response> => {\r\n        console.log(\"postLogout\")\r\n        return fetch(`https://5faa7de0b5c645001602aa4e.mockapi.io/responseForPost`)\r\n    }\r\n\r\n    static postDelete = (): Promise<Response> => {\r\n        console.log(\"postDelete\")\r\n        return fetch(`https://5faa7de0b5c645001602aa4e.mockapi.io/responseForPost`)\r\n    }\r\n\r\n    // ------CREATE-ANNOUNCEMENT-PAGE---//\r\n    static postNewAnnouncement = (data: NewAnnouncementData): Promise<Response> => {\r\n        console.log(data, \"postNewAnnouncement\")\r\n        return fetch(`https://5faa7de0b5c645001602aa4e.mockapi.io/responseForPost`)\r\n    }\r\n}","import {serverAPI} from \"../../../api/serverAPI\";\r\nimport {testAPI} from \"../../../api/testAPI\";\r\nimport {LOCATION_CHANGE} from \"connected-react-router\";\r\n\r\nexport const getItemFromLocalStorage = (feild:string) => localStorage.getItem(feild)\r\nexport const setItemToLocalStorage = (feild:string, value:any) => localStorage.setItem(feild, value)\r\nexport const clearLocalStorage = () => localStorage.clear()\r\n\r\nexport const SET_IS_FETCHING_MAIN_STATE = \"SET_IS_FETCHING_MAIN_STATE\"\r\nexport const SET_SUBWAY_STATIONS_DATA = \"SET_SUBWAY_STATIONS_DATA\"\r\nexport const SET_IS_EMPTY_RESPONSE_MAIN_STATE = \"SET_IS_EMPTY_RESPONSE_MAIN_STATE\"\r\nexport const SET_IS_ERROR_FETCH_MAIN_STATE = \"SET_IS_ERROR_FETCH_MAIN_STATE\"\r\nexport const RESET_TO_DEFAULT_STATE_ALL_REDUCERS = \"RESET_TO_DEFAULT_STATE_ALL_REDUCERS\"\r\n\r\nexport const initialStateSubway = {id: \"\", name: \"Все станции метро\"}\r\nexport const initialStateCategory = { id: \"\", name: \"Любая категория\", category: \"all\"}\r\n\r\ntype initialStateType = typeof initialState\r\nconst initialState = {\r\n    isFetching: false,\r\n    isEmptyResponse: false,\r\n    isErrorFetch: false,\r\n    subwayStationsData: [initialStateSubway],\r\n    categoriesData : [\r\n        initialStateCategory,\r\n        {\r\n            id: 1,\r\n            name: \"Недвижимость\",\r\n            category: \"housing\",\r\n            subCategories : [\r\n                {id: 2, name: \"Квартиры\", category: \"apartments\"},\r\n                {id: 3, name: \"Комната\", category: \"bunk\"},\r\n                {id: 4, name: \"Койко-место\", category: \"room\"}\r\n            ]\r\n        },\r\n        {\r\n            id: 5,\r\n            name: \"Работа\",\r\n            category: \"job\",\r\n            subCategories : [\r\n                {id: 6, name: \"Вакансии\", category: \"vacancies\"}\r\n            ]\r\n        }\r\n    ],\r\n    apiService: testAPI,\r\n    // apiService: serverAPI\r\n}\r\n\r\nexport const mainStateReducer = (state = initialState, action : any): initialStateType => {\r\n    const {type, payload } = action\r\n    const { value } = payload || {}\r\n    const { subwayStationsData } = state\r\n\r\n    switch (type) {\r\n        case SET_IS_FETCHING_MAIN_STATE :\r\n            console.log(\"SET_IS_FETCHING_MAIN_STATE\", value)\r\n            return {...state, isFetching: value}\r\n        case SET_IS_EMPTY_RESPONSE_MAIN_STATE :\r\n            console.log(\"SET_IS_EMPTY_RESPONSE_MAIN_STATE\", value)\r\n            return {...state, isEmptyResponse: value}\r\n        case SET_IS_ERROR_FETCH_MAIN_STATE :\r\n            console.log(\"SET_IS_ERROR_FETCH_MAIN_STATE\", value)\r\n            return {...state, isErrorFetch: value}\r\n        case SET_SUBWAY_STATIONS_DATA :\r\n            console.log(\"SET_SUBWAY_STATIONS_DATA\", value)\r\n            return {...state, subwayStationsData: subwayStationsData.concat(value) }\r\n        case RESET_TO_DEFAULT_STATE_ALL_REDUCERS :\r\n            console.log(\"RESET_TO_DEFAULT_STATE_ALL_REDUCERS\", value)\r\n            return initialState\r\n        case LOCATION_CHANGE :\r\n            console.log(\"LOCATION_CHANGE\")\r\n            window.scrollTo(0,0)\r\n            return state\r\n        default: return state\r\n    }\r\n}","import {AuthorizationStateActionTypes} from \"./authorizationStateActionCreators\";\r\nimport {\r\n    getItemFromLocalStorage,\r\n    setItemToLocalStorage,\r\n    clearLocalStorage,\r\n    RESET_TO_DEFAULT_STATE_ALL_REDUCERS\r\n} from \"../mainState/mainState\";\r\n\r\nexport const SET_IS_REGISTRATION = \"SET_IS_REGISTRATION\"\r\nexport const SET_IS_CORRECT_AUTH_DATA = \"SET_IS_CORRECT_AUTH_DATA\"\r\nexport const SET_IS_AUTH = \"SET_IS_AUTH\"\r\nexport const SET_IS_EXIST_USER = \"SET_IS_EXIST_USER\"\r\nexport const LOGOUT_OR_DELETE_USER = \"LOGOUT_OR_DELETE_USER\"\r\n\r\ntype initialStateType = typeof initialState\r\nconst initialState = {\r\n    isExistUser:false,\r\n    isRegistration: false,\r\n    isCorrectAuthData: true,\r\n    isAuth: () => getItemFromLocalStorage(\"isAuth\") !== null\r\n}\r\n\r\nexport const authorizationStateReducer = (state = initialState, action : AuthorizationStateActionTypes): initialStateType => {\r\n    const {type, payload } = action\r\n    const { value } = payload || {}\r\n\r\n    switch (type) {\r\n        case SET_IS_REGISTRATION :\r\n            console.log(\"SET_IS_REGISTRATION\", value)\r\n            return {...state, isRegistration: value}\r\n        case SET_IS_EXIST_USER :\r\n            console.log(\"SET_IS_EXIST_USER\", value)\r\n            return {...state, isExistUser: value}\r\n        case SET_IS_CORRECT_AUTH_DATA :\r\n            console.log(\"SET_IS_CORRECT_AUTH_DATA\", value)\r\n            return {...state, isCorrectAuthData: value}\r\n        case SET_IS_AUTH :\r\n            console.log(\"SET_IS_AUTH\", value)\r\n            setItemToLocalStorage(\"isAuth\", value)\r\n            return {...state, isAuth: () => getItemFromLocalStorage(\"isAuth\") !== null}\r\n        case LOGOUT_OR_DELETE_USER:\r\n            console.log(\"LOGOUT_OR_DELETE_USER\")\r\n            clearLocalStorage()\r\n            return state\r\n        case RESET_TO_DEFAULT_STATE_ALL_REDUCERS :\r\n            console.log(\"RESET_TO_DEFAULT_STATE_ALL_REDUCERS\", value)\r\n            return initialState\r\n        default: return state\r\n    }\r\n}","import {LOGOUT_OR_DELETE_USER, SET_IS_AUTH, SET_IS_CORRECT_AUTH_DATA, SET_IS_REGISTRATION, SET_IS_EXIST_USER} from \"./authorizationState\";\r\n\r\nexport type AuthorizationStateActionTypes  = SetIsRegistrationACType | SetIsAuthACType | SetIsCorrectAuthDataACType\r\n\r\nexport type SetIsRegistrationACType = {\r\n    type: typeof SET_IS_REGISTRATION\r\n    payload : { value: boolean }\r\n}\r\nexport type SetIsAuthACType = {\r\n    type: typeof SET_IS_AUTH | string\r\n    payload : { value: boolean }\r\n}\r\nexport type SetIsCorrectAuthDataACType = {\r\n    type: typeof SET_IS_CORRECT_AUTH_DATA | string\r\n    payload : { value: boolean }\r\n}\r\n\r\nexport type LogoutOrDeleteUserACType = { type: typeof LOGOUT_OR_DELETE_USER | string }\r\n\r\nexport const setIsRegistrationAC = (value:boolean):SetIsRegistrationACType => ({ type: SET_IS_REGISTRATION, payload: {value} })\r\nexport const setIsCorrectAuthDataAC = (value:boolean):SetIsCorrectAuthDataACType => ({ type: SET_IS_CORRECT_AUTH_DATA, payload: {value} })\r\nexport const setIsExistUserAuthDataAC = (value:boolean) => ({ type: SET_IS_EXIST_USER, payload: {value} })\r\nexport const setIsAuthAC = (value:boolean): SetIsAuthACType => ({ type: SET_IS_AUTH, payload: {value} })\r\nexport const logoutOrDeleteUseAC = (): LogoutOrDeleteUserACType => ({ type: LOGOUT_OR_DELETE_USER })","import {LOCATION_CHANGE} from \"connected-react-router\";\r\nimport {PATH_SEARCH} from \"../../../app/App\";\r\nimport {initialStateCategory, initialStateSubway, RESET_TO_DEFAULT_STATE_ALL_REDUCERS} from \"../mainState/mainState\";\r\n\r\nexport const SET_SEARCHED_DATA = \"SET_SEARCHED_DATA\"\r\nexport const SET_IS_FETCHING_SEARCH_REDUCER = \"SET_IS_FETCHING_SEARCH_REDUCER\"\r\nexport const SET_CURRENT_PAGE_SEARCH_REDUCER = \"SET_CURRENT_PAGE_SEARCH_REDUCER\"\r\nexport const SET_TOTAL_NUM_OF_PAGE_SEARCH_REDUCER = \"SET_TOTAL_NUM_OF_PAGE_SEARCH_REDUCER\"\r\nexport const RESET_TO_INITIAL_SEARCH_REDUCER = \"RESET_TO_INITIAL_SEARCH_REDUCER\"\r\nexport const SET_SEARCH_CONFIG_CATEGORY_ID = \"SET_SEARCH_CONFIG_CATEGORY_ID\"\r\nexport const SET_SEARCH_CONFIG_SUBWAY_STATIONS = \"SET_SEARCH_CONFIG_SUBWAY_STATIONS\"\r\nexport const SET_SEARCH_CONFIG_SEARCH_VALUE = \"SET_SEARCH_CONFIG_SEARCH_VALUE\"\r\n\r\nexport type initialStateType = typeof initialState\r\n\r\n// @ts-ignore\r\nconst initialState = {\r\n    searchedData : [],\r\n    currentPage : 0,\r\n    totalNumOfPages: 1,\r\n    isFetching: false,\r\n    searchConfig : {\r\n        categoryId: initialStateCategory,\r\n        subwayStations: initialStateSubway,\r\n        searchValue: \"\"\r\n    }\r\n}\r\n\r\nexport const searchBoxStateReducer = (state = initialState, action: any): initialStateType => {\r\n    const { type, payload } = action\r\n    const { value, withConcat, location : {pathname = \"/\"} = {} } = payload || {}\r\n    const { searchedData, currentPage, searchConfig, isFetching } = state\r\n    const {searchConfig: initialStateSearchConfig} = initialState\r\n\r\n    switch (type) {\r\n        case LOCATION_CHANGE :\r\n            console.log(\"LOCATION_CHANGE\", payload)\r\n            return !pathname.includes(PATH_SEARCH) ?\r\n                {...state, searchConfig: initialStateSearchConfig} : state\r\n        case SET_SEARCHED_DATA :\r\n            console.log(\"SET_SEARCHED_DATA\", value)\r\n            const newSearchedData = withConcat ? searchedData.concat(value) : value\r\n            return {...state, searchedData: newSearchedData}\r\n        case SET_IS_FETCHING_SEARCH_REDUCER :\r\n            console.log(\"SET_IS_FETCHING_SEARCH_REDUCER\", value)\r\n            return {...state, isFetching: value}\r\n        case SET_CURRENT_PAGE_SEARCH_REDUCER :\r\n            const newCurrentPage = currentPage + 1\r\n            console.log(\"SET_CURRENT_PAGE_SEARCH_REDUCER\", newCurrentPage)\r\n            return {...state, currentPage: newCurrentPage}\r\n        case SET_TOTAL_NUM_OF_PAGE_SEARCH_REDUCER :\r\n            console.log(\"SET_TOTAL_NUM_OF_PAGE_SEARCH_REDUCER\", value)\r\n            return {...state, totalNumOfPages: value}\r\n        case RESET_TO_INITIAL_SEARCH_REDUCER :\r\n            console.log(\"RESET_TO_INITIAL_SEARCH_REDUCER\", value)\r\n            return {...initialState, isFetching, searchConfig: {...searchConfig}}\r\n        case SET_SEARCH_CONFIG_CATEGORY_ID :\r\n            console.log(\"SET_SEARCH_CONFIG_CATEGORY_ID\", value)\r\n            return {...state, searchConfig: {...searchConfig, categoryId: value}}\r\n        case SET_SEARCH_CONFIG_SUBWAY_STATIONS :\r\n            console.log(\"SET_SEARCH_CONFIG_SUBWAY_STATIONS\", value)\r\n            return {...state, searchConfig: {...searchConfig, subwayStations: value}}\r\n        case SET_SEARCH_CONFIG_SEARCH_VALUE :\r\n            console.log(\"SET_SEARCH_CONFIG_SEARCH_VALUE\", value)\r\n            return {...state, searchConfig: {...searchConfig, searchValue: value}}\r\n        case RESET_TO_DEFAULT_STATE_ALL_REDUCERS :\r\n            console.log(\"RESET_TO_DEFAULT_STATE_ALL_REDUCERS\", value)\r\n            return initialState\r\n        default: return state\r\n    }\r\n}","import {\r\n    SET_SEARCHED_DATA,\r\n    SET_IS_FETCHING_SEARCH_REDUCER,\r\n    SET_CURRENT_PAGE_SEARCH_REDUCER,\r\n    SET_TOTAL_NUM_OF_PAGE_SEARCH_REDUCER,\r\n    RESET_TO_INITIAL_SEARCH_REDUCER,\r\n    SET_SEARCH_CONFIG_CATEGORY_ID,\r\n    SET_SEARCH_CONFIG_SUBWAY_STATIONS, SET_SEARCH_CONFIG_SEARCH_VALUE,\r\n} from \"./searchBoxState\";\r\n\r\nexport const setSearchedDataAC = (value:Array<any>, withConcat:boolean):SetSearchedDataAType => ({ type: SET_SEARCHED_DATA, payload: {value, withConcat} })\r\nexport const setIsFetchingSearchReducerAC = (value:boolean):SetIsFetchingSearchReducerACType => ({ type: SET_IS_FETCHING_SEARCH_REDUCER, payload: {value} })\r\nexport const setCurrentPageSearchReducerAC = ():SetCurrentPageSearchReducerACType => ({ type: SET_CURRENT_PAGE_SEARCH_REDUCER })\r\nexport const setTotalNumOfPageSearchReducerAC = (value:number):SetTotalNumOfPageSearchReducerACType => ({ type: SET_TOTAL_NUM_OF_PAGE_SEARCH_REDUCER, payload: {value} })\r\nexport const resetToInitialStateSearchReducerAC = ():ResetToInitialStateSearchReducerACType => ({ type: RESET_TO_INITIAL_SEARCH_REDUCER })\r\nexport const setSearchConfigCategoryAC = (value:any):SetSearchConfigCategoryACType => ({ type: SET_SEARCH_CONFIG_CATEGORY_ID, payload: {value} })\r\nexport const setSearchConfigSubwayStationsAC = (value:string):SetSearchConfigSubwayStationsACType => ({ type: SET_SEARCH_CONFIG_SUBWAY_STATIONS, payload: {value} })\r\nexport const setSearchConfigSearchValueAC = (value:string):SetSearchConfigSearchValueACType => ({ type: SET_SEARCH_CONFIG_SEARCH_VALUE, payload: {value} })\r\n\r\n\r\n\r\nexport type SetSearchedDataAType = { type: typeof SET_SEARCHED_DATA, payload: { value: Array<any>, withConcat: boolean}}\r\nexport type SetIsFetchingSearchReducerACType = { type: typeof SET_IS_FETCHING_SEARCH_REDUCER, payload: { value: boolean }}\r\nexport type SetCurrentPageSearchReducerACType = { type: typeof SET_CURRENT_PAGE_SEARCH_REDUCER }\r\nexport type SetTotalNumOfPageSearchReducerACType = { type: typeof SET_TOTAL_NUM_OF_PAGE_SEARCH_REDUCER, payload: { value: number } }\r\nexport type ResetToInitialStateSearchReducerACType = { type: typeof RESET_TO_INITIAL_SEARCH_REDUCER }\r\nexport type SetSearchConfigCategoryACType = { type: typeof SET_SEARCH_CONFIG_CATEGORY_ID, payload: { value: any } }\r\nexport type SetSearchConfigSubwayStationsACType = { type: typeof SET_SEARCH_CONFIG_SUBWAY_STATIONS, payload: { value: string }}\r\nexport type SetSearchConfigSearchValueACType = { type: typeof SET_SEARCH_CONFIG_SEARCH_VALUE, payload: { value: string }}\r\n","import {RESET_TO_DEFAULT_STATE_ALL_REDUCERS} from \"../mainState/mainState\";\r\n\r\nexport const SET_IS_FETCHING_FEED_REDUCER = \"SET_IS_FETCHING_FEED_REDUCER\"\r\nexport const SET_LAST_ANNOUNCEMENTS = \"SET_LAST_ANNOUNCEMENTS\"\r\n\r\ntype initialStateType = typeof initialState\r\nconst initialState = {\r\n    lastAnnouncements: [],\r\n    isFetching: false,\r\n    descriptionSalamRu: \"\"\r\n}\r\n\r\nexport const feedStateReducer = (state = initialState, action: any): initialStateType => {\r\n    const {type, payload } = action\r\n    const { value, withConcat = false } = payload || {}\r\n    const {lastAnnouncements} = state\r\n\r\n    switch (type) {\r\n        case SET_LAST_ANNOUNCEMENTS :\r\n            console.log(\"SET_LAST_ANNOUNCEMENTS\", value)\r\n            const newLastAnnouncements = withConcat ? lastAnnouncements.concat(value) : value\r\n            return {...state, lastAnnouncements: newLastAnnouncements}\r\n        case SET_IS_FETCHING_FEED_REDUCER :\r\n            console.log(\"SET_IS_FETCHING_FEED_REDUCER\", value)\r\n            return {...state, isFetching: value}\r\n        case RESET_TO_DEFAULT_STATE_ALL_REDUCERS :\r\n            console.log(\"RESET_TO_DEFAULT_STATE_ALL_REDUCERS\", value)\r\n            return initialState\r\n        default: return state\r\n    }\r\n}","import { SET_LAST_ANNOUNCEMENTS, SET_IS_FETCHING_FEED_REDUCER } from \"./feedState\"\r\n\r\nexport type SetLastAnnouncementsACType = { type: typeof SET_LAST_ANNOUNCEMENTS, payload: { value: Array<any> , withConcat:boolean}}\r\nexport type SetetIsFetchingFeedReducerACType = { type: typeof SET_IS_FETCHING_FEED_REDUCER, payload: { value: boolean }}\r\n\r\nexport const setLastAnnouncementsAC = (value:Array<any>, withConcat:boolean):SetLastAnnouncementsACType => ({ type: SET_LAST_ANNOUNCEMENTS, payload: {value, withConcat} })\r\nexport const setIsFetchingFeedReducerAC = (value:boolean):SetetIsFetchingFeedReducerACType => ({ type: SET_IS_FETCHING_FEED_REDUCER, payload: {value} })","import {\r\n    getItemFromLocalStorage,\r\n    RESET_TO_DEFAULT_STATE_ALL_REDUCERS,\r\n    setItemToLocalStorage\r\n} from \"../mainState/mainState\";\r\nimport defaultAvatar from \"../../../pictures/defaultAvatar.jpg\"\r\nexport const SET_SETTINGS_IN_LOCAL_STORAGE_BY_FIELD = \"SET_SETTINGS_IN_LOCAL_STORAGE_BY_FIELD\"\r\nexport const SET_IS_FETCHING_SETTINGS_REDUCER = \"SET_IS_FETCHING_SETTINGS_REDUCER\"\r\n\r\ntype initialStateType = typeof initialState\r\nconst initialState = {\r\n    photo: () => getItemFromLocalStorage(\"photo\") || defaultAvatar,\r\n    name: () => getItemFromLocalStorage(\"name\") || \"\",\r\n    phone: () => getItemFromLocalStorage(\"phone\") || \"\",\r\n    login: () => getItemFromLocalStorage(\"login\") || \"\",\r\n    password: () => getItemFromLocalStorage(\"password\") || \"\",\r\n    isFetching: false\r\n}\r\n\r\nexport type SettingsFieldType = \"photo\" | \"name\" | \"phone\" | \"login\" | \"currentPassword\" | \"password\" | string\r\n\r\nexport const settingsStateReducer = (state = initialState, action : any): initialStateType => {\r\n    const {type, payload } = action\r\n    const { value, field } = payload || {}\r\n\r\n    switch (type) {\r\n        case SET_SETTINGS_IN_LOCAL_STORAGE_BY_FIELD :\r\n            console.log(\"SET_SETTINGS_IN_LOCAL_STORAGE_BY_FIELD\", value)\r\n            setItemToLocalStorage(field, value)\r\n            return state\r\n        case SET_IS_FETCHING_SETTINGS_REDUCER :\r\n            console.log(\"SET_IS_FETCHING_SETTINGS_REDUCER\", value)\r\n            return {...state, isFetching: value}\r\n        case RESET_TO_DEFAULT_STATE_ALL_REDUCERS :\r\n            console.log(\"RESET_TO_DEFAULT_STATE_ALL_REDUCERS\", value)\r\n            return initialState\r\n        default: return state\r\n    }\r\n}","import {\r\n    SET_IS_FETCHING_SETTINGS_REDUCER,\r\n    SET_SETTINGS_IN_LOCAL_STORAGE_BY_FIELD,\r\n    SettingsFieldType\r\n} from \"./settingsState\";\r\n\r\nexport type SetSettingsInLocalStorageByFieldACType = {\r\n    type: typeof SET_SETTINGS_IN_LOCAL_STORAGE_BY_FIELD\r\n    payload : { value: any, field:  SettingsFieldType}\r\n}\r\n\r\nexport type SetIsFetchingSettingsReducerACType = {\r\n    type: typeof SET_IS_FETCHING_SETTINGS_REDUCER\r\n    payload : { value: boolean}\r\n}\r\nexport const setSettingsInLocalStorageByFieldAC = (value:any, field:SettingsFieldType):SetSettingsInLocalStorageByFieldACType =>\r\n    ({ type: SET_SETTINGS_IN_LOCAL_STORAGE_BY_FIELD, payload: {value, field} })\r\n\r\nexport const setIsFetchingSettingsReducerAC = (value:boolean):SetIsFetchingSettingsReducerACType =>\r\n    ({ type: SET_IS_FETCHING_SETTINGS_REDUCER, payload: {value} })\r\n","import {RESET_TO_DEFAULT_STATE_ALL_REDUCERS} from \"../mainState/mainState\";\r\n\r\nexport const SET_IS_FETCHING_ANNOUNCEMENT_REDUCER = \"SET_IS_FETCHING_ANNOUNCEMENT_REDUCER\"\r\nexport const SET_ANNOUNCEMENT = \"SET_ANNOUNCEMENT\"\r\n\r\ntype initialStateType = typeof initialState\r\nconst initialState = {\r\n    announcement: {},\r\n    isFetching: false,\r\n}\r\n\r\nexport const announcementStateReducer = (state = initialState, action: any): initialStateType => {\r\n    const {type, payload } = action\r\n    const { value } = payload || {}\r\n\r\n    switch (type) {\r\n        case SET_ANNOUNCEMENT :\r\n            console.log(\"SET_ANNOUNCEMENT\", value)\r\n            return {...state, announcement: value}\r\n        case SET_IS_FETCHING_ANNOUNCEMENT_REDUCER :\r\n            console.log(\"SET_IS_FETCHING_FEED_REDUCER\", value)\r\n            return {...state, isFetching: value}\r\n        case RESET_TO_DEFAULT_STATE_ALL_REDUCERS :\r\n            console.log(\"RESET_TO_DEFAULT_STATE_ALL_REDUCERS\", value)\r\n            return initialState\r\n        default: return state\r\n    }\r\n}","import { SET_ANNOUNCEMENT, SET_IS_FETCHING_ANNOUNCEMENT_REDUCER } from \"./announcementState\"\r\n\r\nexport type SetAnnouncementsACType = { type: typeof SET_ANNOUNCEMENT, payload: { value: boolean }}\r\nexport type SettIsFetchingAnnouncementReducerACType = { type: typeof SET_IS_FETCHING_ANNOUNCEMENT_REDUCER, payload: { value: boolean }}\r\n\r\nexport const setAnnouncementAC = (value:boolean):SetAnnouncementsACType => ({ type: SET_ANNOUNCEMENT, payload: {value} })\r\nexport const settIsFetchingAnnouncementReducerAC = (value:boolean):SettIsFetchingAnnouncementReducerACType => ({ type: SET_IS_FETCHING_ANNOUNCEMENT_REDUCER, payload: {value} })","import {SET_CURRENT_PAGE_SEARCH_REDUCER, SET_TOTAL_NUM_OF_PAGE_SEARCH_REDUCER} from \"../searchBoxState/searchBoxState\";\r\nimport {RESET_TO_DEFAULT_STATE_ALL_REDUCERS} from \"../mainState/mainState\";\r\n\r\nexport const SET_IS_FETCHING_MY_ANNOUNCEMENTS_REDUCER = \"SET_IS_FETCHING_MY_ANNOUNCEMENTS_REDUCER\"\r\nexport const DELETE_MY_ANNOUNCEMENT_BY_ID = \"DELETE_MY_ANNOUNCEMENT_BY_ID\"\r\nexport const SET_MY_ANNOUNCEMENTS = \"SET_MY_ANNOUNCEMENTS\"\r\nexport const SET_CURRENT_PAGE_MY_ANNOUNCEMENTS_REDUCER = \"SET_CURRENT_PAGE_MY_ANNOUNCEMENTS_REDUCER\"\r\nexport const SET_TOTAL_NUM_OF_PAGE_MY_ANNOUNCEMENTS_REDUCER = \"SET_TOTAL_NUM_OF_PAGE_MY_ANNOUNCEMENTS_REDUCER\"\r\n\r\ntype initialStateType = typeof initialState\r\nconst initialState = {\r\n    myAnnouncements: [],\r\n    currentPage: 0,\r\n    totalNumOfPages: 1,\r\n    isFetching: false\r\n}\r\n\r\nexport const myAnnouncementsStateReducer = (state = initialState, action: any): initialStateType => {\r\n    const {type, payload } = action\r\n    const { value, id, withConcat = false } = payload || {}\r\n    const { myAnnouncements, currentPage } = state\r\n\r\n    switch (type) {\r\n        case SET_MY_ANNOUNCEMENTS :\r\n            console.log(\"SET_MY_ANNOUNCEMENTS\", value)\r\n            const newMyAnnouncementsSet = withConcat ? myAnnouncements.concat(value) : value\r\n            return {...state, myAnnouncements: newMyAnnouncementsSet}\r\n        case DELETE_MY_ANNOUNCEMENT_BY_ID :\r\n            console.log(\"DELETE_MY_ANNOUNCEMENT_BY_ID\", id)\r\n            const newMyAnnouncementsDel = myAnnouncements.filter( ({id: myAnnouncementId}:any) => myAnnouncementId !== id )\r\n            return {...state, myAnnouncements: newMyAnnouncementsDel}\r\n        case SET_IS_FETCHING_MY_ANNOUNCEMENTS_REDUCER :\r\n            console.log(\"SET_IS_FETCHING_MY_ANNOUNCEMENTS_REDUCER\", value)\r\n            return {...state, isFetching: value}\r\n        case SET_CURRENT_PAGE_MY_ANNOUNCEMENTS_REDUCER :\r\n            const newCurrentPage = currentPage + 1\r\n            console.log(\"SET_CURRENT_PAGE_SEARCH_REDUCER\", newCurrentPage)\r\n            return {...state, currentPage: newCurrentPage}\r\n        case SET_TOTAL_NUM_OF_PAGE_MY_ANNOUNCEMENTS_REDUCER :\r\n            console.log(\"SET_TOTAL_NUM_OF_PAGE_SEARCH_REDUCER\", value)\r\n            return {...state, totalNumOfPages: value}\r\n        case RESET_TO_DEFAULT_STATE_ALL_REDUCERS :\r\n            console.log(\"RESET_TO_DEFAULT_STATE_ALL_REDUCERS\", value)\r\n            return initialState\r\n        default: return state\r\n    }\r\n}","import {\r\n    SET_MY_ANNOUNCEMENTS,\r\n    SET_IS_FETCHING_MY_ANNOUNCEMENTS_REDUCER,\r\n    SET_CURRENT_PAGE_MY_ANNOUNCEMENTS_REDUCER,\r\n    SET_TOTAL_NUM_OF_PAGE_MY_ANNOUNCEMENTS_REDUCER, DELETE_MY_ANNOUNCEMENT_BY_ID\r\n} from \"./myAnnouncementState\"\r\n\r\nexport type SetMyAnnouncementsACType =\r\n    { type: typeof SET_MY_ANNOUNCEMENTS, payload: { value: Array<any>, withConcat: boolean }}\r\n\r\nexport type SettIsFetchingMyAnnouncementReducerACType =\r\n    { type: typeof SET_IS_FETCHING_MY_ANNOUNCEMENTS_REDUCER, payload: { value: boolean }}\r\n\r\nexport type SetCurrentPageMyAnnouncementReducerACType = { type: typeof SET_CURRENT_PAGE_MY_ANNOUNCEMENTS_REDUCER }\r\nexport type DelMyAnnouncementByIdACType = { type: typeof DELETE_MY_ANNOUNCEMENT_BY_ID, payload: {id:number} }\r\nexport type SetTotalNumOfPageMyAnnouncementReducerACType = { type: typeof SET_TOTAL_NUM_OF_PAGE_MY_ANNOUNCEMENTS_REDUCER, payload: { value: number } }\r\n\r\n\r\nexport const setMyAnnouncementsAC = (value:Array<any>, withConcat: boolean):SetMyAnnouncementsACType =>\r\n    ({ type: SET_MY_ANNOUNCEMENTS, payload: {value, withConcat} })\r\n\r\nexport const delMyAnnouncementByIdAC = (id:number):DelMyAnnouncementByIdACType =>\r\n    ({ type: DELETE_MY_ANNOUNCEMENT_BY_ID, payload: {id} })\r\n\r\nexport const settIsFetchingMyAnnouncementsReducerAC = (value:boolean):SettIsFetchingMyAnnouncementReducerACType =>\r\n    ({ type: SET_IS_FETCHING_MY_ANNOUNCEMENTS_REDUCER, payload: {value} })\r\n\r\nexport const setCurrentPageMyAnnouncementReducerAC = ():SetCurrentPageMyAnnouncementReducerACType =>\r\n    ({ type: SET_CURRENT_PAGE_MY_ANNOUNCEMENTS_REDUCER })\r\n\r\nexport const setTotalNumOfPageMyAnnouncementReducerAC = (value:number):SetTotalNumOfPageMyAnnouncementReducerACType =>\r\n    ({ type: SET_TOTAL_NUM_OF_PAGE_MY_ANNOUNCEMENTS_REDUCER, payload: {value} })","import {RESET_TO_INITIAL_SEARCH_REDUCER} from \"../searchBoxState/searchBoxState\";\r\nimport {RESET_TO_DEFAULT_STATE_ALL_REDUCERS} from \"../mainState/mainState\";\r\n\r\nexport const SET_ANNOUNCEMENTS_LIST = \"SET_ANNOUNCEMENTS_LIST\"\r\nexport const SET_CURRENT_PAGE_ANNOUNCEMENTS_LIST_REDUCER = \"SET_CURRENT_PAGE_ANNOUNCEMENTS_LIST_REDUCER\"\r\nexport const SET_TOTAL_NUM_OF_PAGE_ANNOUNCEMENTS_LIST_REDUCER = \"SET_TOTAL_NUM_OF_PAGE_ANNOUNCEMENTS_LIST_REDUCER\"\r\nexport const RESET_TO_INITIAL_ANNOUNCEMENTS_LIST_REDUCER = \"RESET_TO_INITIAL_ANNOUNCEMENTS_LIST_REDUCER\"\r\n\r\ntype initialStateType = typeof initialState\r\n\r\nconst initialState = {\r\n    announcementsList: [],\r\n    currentPage: 0,\r\n    totalNumOfPages: 1\r\n}\r\n\r\nexport const announcementsListStateReducer = (state = initialState, action: any): initialStateType => {\r\n\r\n    const {type, payload } = action\r\n    const { value, id, withConcat = false } = payload || {}\r\n    const { announcementsList, currentPage } = state\r\n\r\n    switch (type) {\r\n        case SET_ANNOUNCEMENTS_LIST:\r\n            console.log(\"SET_ANNOUNCEMENTS_LIST\", value)\r\n            const newMyAnnouncementsSet = withConcat ? announcementsList.concat(value) : value\r\n            return {...state, announcementsList: newMyAnnouncementsSet}\r\n        case SET_CURRENT_PAGE_ANNOUNCEMENTS_LIST_REDUCER:\r\n            const newCurrentPage = currentPage + 1\r\n            console.log(\"SET_CURRENT_PAGE_ANNOUNCEMENTS_LIST_REDUCER\", newCurrentPage)\r\n            return {...state, currentPage: newCurrentPage}\r\n        case SET_TOTAL_NUM_OF_PAGE_ANNOUNCEMENTS_LIST_REDUCER :\r\n            console.log(\"SET_TOTAL_NUM_OF_PAGE_ANNOUNCEMENTS_LIST_REDUCER\", value)\r\n            return {...state, totalNumOfPages: value}\r\n        case RESET_TO_INITIAL_ANNOUNCEMENTS_LIST_REDUCER :\r\n            console.log(\"RESET_TO_INITIAL_ANNOUNCEMENTS_LIST_REDUCER\")\r\n            return initialState\r\n        case RESET_TO_DEFAULT_STATE_ALL_REDUCERS :\r\n            console.log(\"RESET_TO_DEFAULT_STATE_ALL_REDUCERS\", value)\r\n            return initialState\r\n        default: return state\r\n    }\r\n}","import {\r\n    RESET_TO_INITIAL_ANNOUNCEMENTS_LIST_REDUCER,\r\n    SET_ANNOUNCEMENTS_LIST,\r\n    SET_CURRENT_PAGE_ANNOUNCEMENTS_LIST_REDUCER,\r\n    SET_TOTAL_NUM_OF_PAGE_ANNOUNCEMENTS_LIST_REDUCER\r\n} from \"./announcementsListState\";\r\n\r\n\r\nexport type SetAnnouncementsListACType = { type: typeof SET_ANNOUNCEMENTS_LIST, payload: { value: Array<any>, withConcat: boolean }}\r\nexport type SetCurrentPageAnnouncementsListReducerACType = { type: typeof SET_CURRENT_PAGE_ANNOUNCEMENTS_LIST_REDUCER }\r\nexport type SetTotalNumOfPageAnnouncementsListReducerACType = { type: typeof SET_TOTAL_NUM_OF_PAGE_ANNOUNCEMENTS_LIST_REDUCER, payload: { value: number } }\r\nexport type ResetToInitialStateAnnouncementsListReducerACType = { type: typeof RESET_TO_INITIAL_ANNOUNCEMENTS_LIST_REDUCER }\r\n\r\nexport const setAnnouncementsListAC = (value:Array<any>, withConcat: boolean):SetAnnouncementsListACType =>\r\n    ({ type: SET_ANNOUNCEMENTS_LIST, payload: {value, withConcat} })\r\nexport const resetToInitialStateAnnouncementsListReducerAC = ():ResetToInitialStateAnnouncementsListReducerACType => ({ type: RESET_TO_INITIAL_ANNOUNCEMENTS_LIST_REDUCER })\r\nexport const setCurrentPageAnnouncementsListReducerAC = ():SetCurrentPageAnnouncementsListReducerACType =>\r\n    ({ type: SET_CURRENT_PAGE_ANNOUNCEMENTS_LIST_REDUCER })\r\n\r\nexport const setTotalNumOfPageAnnouncementsListReducerAC = (value:number):SetTotalNumOfPageAnnouncementsListReducerACType =>\r\n    ({ type: SET_TOTAL_NUM_OF_PAGE_ANNOUNCEMENTS_LIST_REDUCER, payload: {value} })","import {\r\n    RESET_TO_DEFAULT_STATE_ALL_REDUCERS,\r\n    SET_IS_EMPTY_RESPONSE_MAIN_STATE,\r\n    SET_IS_ERROR_FETCH_MAIN_STATE,\r\n    SET_IS_FETCHING_MAIN_STATE,\r\n    SET_SUBWAY_STATIONS_DATA\r\n} from \"./mainState\";\r\n\r\nexport type MainStateActionTypes  = SetIsFetchingMainStateACType & SetSubwayStationsDataACType\r\n\r\nexport type SetIsFetchingMainStateACType = { type: typeof SET_IS_FETCHING_MAIN_STATE, payload: { value: boolean }}\r\nexport type SetIsEmptyResponseMainStateACType = { type: typeof SET_IS_EMPTY_RESPONSE_MAIN_STATE, payload: { value: boolean }}\r\nexport type SetIsErrorFetchMainStateACType = { type: typeof SET_IS_ERROR_FETCH_MAIN_STATE, payload: { value: boolean }}\r\nexport type SetSubwayStationsDataACType = { type: typeof SET_SUBWAY_STATIONS_DATA, payload: { value: Array<any> }}\r\n\r\n\r\nexport const setIsFetchingMainStateAC = (value:boolean):SetIsFetchingMainStateACType => ({ type: SET_IS_FETCHING_MAIN_STATE, payload: {value} })\r\nexport const setIsEmptyResponseMainStateAC = (value:boolean):SetIsEmptyResponseMainStateACType => ({ type: SET_IS_EMPTY_RESPONSE_MAIN_STATE, payload: {value} })\r\nexport const resetToDefaultAllReducersAC = () => ({ type: RESET_TO_DEFAULT_STATE_ALL_REDUCERS })\r\nexport const setIsErrorFetchMainStateAC = (value:boolean):SetIsErrorFetchMainStateACType => ({ type: SET_IS_ERROR_FETCH_MAIN_STATE, payload: {value} })\r\nexport const setSubwayStationsDataAC = (value:Array<any>):SetSubwayStationsDataACType => ({ type: SET_SUBWAY_STATIONS_DATA, payload: {value} })","import {initialStateCategory, initialStateSubway, RESET_TO_DEFAULT_STATE_ALL_REDUCERS} from \"../mainState/mainState\"\r\n\r\nexport const SET_VALUE_BY_PAGE_AND_FIELD_FORM_REDUCER = \"SET_VALUE_BY_PAGE_AND_FIELD_FORM_REDUCER\"\r\nexport const RESET_TO_INITIAL_BY_PAGE_FORM_REDUCER = \"RESET_TO_INITIAL_BY_PAGE_FORM_REDUCER\"\r\nexport const SET_IS_VALID_BY_PAGE_AND_FIELD_FORM_REDUCER = \"SET_IS_VALID_BY_PAGE_AND_FIELD_FORM_REDUCER\"\r\nexport const CHECK_IS_READY_TO_SEND_BY_PAGE_FORM_REDUCER = \"CHECK_IS_READY_TO_SEND_BY_PAGE_FORM_REDUCER\"\r\nexport const SET_IS_READY_TO_SEND = \"SET_IS_READY_TO_SEND\"\r\n\r\nexport type FormReducerPagesType = \"authorization\" | \"registration\" | \"createAnnouncement\" | \"settings\"\r\nexport type FormReducerFieldsType = FormReducerAuthorizationFieldsType | FormReducerRegistrationFieldsType\r\nexport type FormReducerAuthorizationFieldsType = \"login\" | \"password\"\r\nexport type FormReducerRegistrationFieldsType = \"name\" | \"login\" | \"phoneNumber\" | \"password\"\r\n\r\n\r\nexport const defaultInitialStateForFormField = {value: \"\", isValid: true}\r\n\r\nconst initialState = {\r\n    authorization : {\r\n        login: defaultInitialStateForFormField,\r\n        password: defaultInitialStateForFormField,\r\n        isReadyToSend: false\r\n    },\r\n    registration : {\r\n        name: defaultInitialStateForFormField,\r\n        login: defaultInitialStateForFormField,\r\n        phoneNumber: defaultInitialStateForFormField,\r\n        password: defaultInitialStateForFormField,\r\n        isReadyToSend: false\r\n    },\r\n    createAnnouncement : {\r\n        photoList: {value: [], isValid: true},\r\n        name: defaultInitialStateForFormField,\r\n        price: defaultInitialStateForFormField,\r\n        categoryId: {value: initialStateCategory, isValid: true},\r\n        description: defaultInitialStateForFormField,\r\n        sellerPhone: defaultInitialStateForFormField,\r\n        stationId: {value: initialStateSubway, isValid: true},\r\n        isReadyToSend: false\r\n    },\r\n    settings : {\r\n        photo: defaultInitialStateForFormField,\r\n        name: defaultInitialStateForFormField,\r\n        phone: defaultInitialStateForFormField,\r\n        login: defaultInitialStateForFormField,\r\n        isReadyToSend: false\r\n    }\r\n}\r\n\r\nconst checkIsValid = (field: string, value: any) => {\r\n    console.log(\"checkIsValid\", field, value)\r\n    switch (field) {\r\n        case \"name\" :\r\n            return !!value.length\r\n        case \"password\" :\r\n            return value.length <= 24 && value.length >= 3\r\n        case \"phoneNumber\" :\r\n            return !!value.length\r\n        case \"login\" :\r\n            return !!value.length\r\n        case \"stationId\":\r\n            return JSON.stringify(value) !== JSON.stringify(initialStateSubway)\r\n        case \"price\":\r\n            return !!value.length\r\n        case \"phone\":\r\n            return !!value.length\r\n        case \"categoryId\":\r\n            console.log(JSON.stringify(value), JSON.stringify(initialStateCategory))\r\n            return JSON.stringify(value) !== JSON.stringify(initialStateCategory)\r\n        case \"description\":\r\n            return !!value.length\r\n        default : return true\r\n    }\r\n}\r\n\r\nexport const prepareFormStateByPageForSend = ({isReadyToSend, ...restFormState}: any) => {\r\n    const stateEntries = Object.entries(restFormState)\r\n    const defaultCondition = (postData: any, key: any, value: any) => {\r\n        postData[key] = value\r\n        return postData\r\n    }\r\n    return (condition: Function = defaultCondition) => stateEntries.reduce( (postData: any, [key, {value}]: any) => {\r\n        return condition(postData, key, value)\r\n    }, {})\r\n}\r\n\r\nconst formStateReducer = (state = initialState, action: any) => {\r\n    const {type, payload} = action\r\n    const {field = \"\", value = \"\", page = \"\" } = payload || {}\r\n    // @ts-ignore\r\n    const stateByPage = state[page] || {}\r\n    const stateByField = stateByPage[field]\r\n\r\n    switch (type) {\r\n        case SET_VALUE_BY_PAGE_AND_FIELD_FORM_REDUCER :\r\n            console.log(\"SET_VALUE_BY_PAGE_AND_FIELD_FORM_REDUCER\", page, value)\r\n            return {...state, [page] : {...stateByPage, [field] : {...stateByField, value, isValid: true}} }\r\n        case SET_IS_VALID_BY_PAGE_AND_FIELD_FORM_REDUCER :\r\n            const isValid = value !== null ? value : checkIsValid(field, stateByField.value)\r\n            console.log(\"SET_IS_VALID_BY_PAGE_AND_FIELD_FORM_REDUCER\", field, page, value)\r\n            return {...state, [page] : {...stateByPage, [field] : {...stateByField, isValid, isReadyToSend:false}} }\r\n        case SET_IS_READY_TO_SEND :\r\n            console.log(\"SET_IS_READY_TO_SEND\", page, value)\r\n            return {...state, [page] : {...stateByPage, isReadyToSend:value} }\r\n        case CHECK_IS_READY_TO_SEND_BY_PAGE_FORM_REDUCER :\r\n            console.log(\"SET_IS_VALID_BY_PAGE_AND_FIELD_FORM_REDUCER\", page)\r\n            const stateKeys = Object.keys(stateByPage)\r\n            const newState = stateKeys.reduce( (newState: any, field: any) => {\r\n                const {value} = stateByPage[field]\r\n                const isValid = checkIsValid(field, value)\r\n                if(!isValid) {\r\n                    console.log(\"ISVALID FALSE\")\r\n                    newState.isReadyToSend = false\r\n                    newState[field].isValid = false\r\n                }\r\n                return newState\r\n            }, {...stateByPage, isReadyToSend: true} )\r\n            return {...state, [page] : newState }\r\n        case RESET_TO_INITIAL_BY_PAGE_FORM_REDUCER :\r\n            // @ts-ignore\r\n            return {...state, [page] : initialState[page] }\r\n        case RESET_TO_DEFAULT_STATE_ALL_REDUCERS :\r\n            console.log(\"RESET_TO_DEFAULT_STATE_ALL_REDUCERS\", value)\r\n            return initialState\r\n        default: return state\r\n    }\r\n}\r\n\r\nexport default formStateReducer","import {\r\n    FormReducerFieldsType,\r\n    SET_VALUE_BY_PAGE_AND_FIELD_FORM_REDUCER,\r\n    SET_IS_VALID_BY_PAGE_AND_FIELD_FORM_REDUCER,\r\n    CHECK_IS_READY_TO_SEND_BY_PAGE_FORM_REDUCER,\r\n    RESET_TO_INITIAL_BY_PAGE_FORM_REDUCER,\r\n    FormReducerPagesType,\r\n    SET_IS_READY_TO_SEND,\r\n\r\n} from \"./formState\"\r\nimport {SET_LAST_ANNOUNCEMENTS} from \"../feedState/feedState\";\r\n\r\nexport type ResetToInitialByPageFormReducerACType = { type: typeof RESET_TO_INITIAL_BY_PAGE_FORM_REDUCER, payload: { page: FormReducerPagesType }}\r\n\r\n\r\nexport const seValueFormReducerAC = ( value: string | number, field: FormReducerFieldsType, page: FormReducerPagesType,) =>\r\n    ({ type: SET_VALUE_BY_PAGE_AND_FIELD_FORM_REDUCER, payload: {value, field, page} })\r\n\r\nexport const setIsValidFormReducerAC = (field: FormReducerFieldsType, page: FormReducerPagesType, value:boolean | null = null ) =>\r\n    ({ type: SET_IS_VALID_BY_PAGE_AND_FIELD_FORM_REDUCER, payload: {field, page, value} })\r\n\r\nexport const setIsReadyToSendFormReducerAC = (value: boolean, page: FormReducerPagesType ) =>\r\n    ({ type: SET_IS_READY_TO_SEND, payload: {value, page} })\r\n\r\nexport const checkIsReadyToSendByPageFormReducerAC = (page: FormReducerPagesType ) =>\r\n    ({ type: CHECK_IS_READY_TO_SEND_BY_PAGE_FORM_REDUCER, payload: {page} })\r\n\r\nexport const resetToInitialByPageFormReducerAC = (page: FormReducerPagesType): ResetToInitialByPageFormReducerACType =>\r\n    ({ type: RESET_TO_INITIAL_BY_PAGE_FORM_REDUCER, payload: {page} })\r\n","import {AuthorizationData, NewAnnouncementData, RegistrationData} from \"../../api/testAPI\";\r\nimport {Dispatch} from \"redux\";\r\nimport {AppStateType} from \"../store\";\r\nimport {\r\n    logoutOrDeleteUseAC,\r\n    LogoutOrDeleteUserACType,\r\n    setIsAuthAC,\r\n    SetIsAuthACType,\r\n    setIsCorrectAuthDataAC, setIsExistUserAuthDataAC,\r\n} from \"../reducers/authorizationState/authorizationStateActionCreators\";\r\nimport {CallHistoryMethodAction, push} from \"connected-react-router\";\r\nimport {\r\n    setIsFetchingSearchReducerAC,\r\n    SetIsFetchingSearchReducerACType,\r\n    setSearchedDataAC,\r\n    SetSearchedDataAType,\r\n    setTotalNumOfPageSearchReducerAC,\r\n    SetTotalNumOfPageSearchReducerACType\r\n} from \"../reducers/searchBoxState/searchBoxStateActionCreators\";\r\nimport {\r\n    SetetIsFetchingFeedReducerACType,\r\n    setIsFetchingFeedReducerAC,\r\n    setLastAnnouncementsAC,\r\n    SetLastAnnouncementsACType\r\n} from \"../reducers/feedState/feedStateActionCreators\";\r\nimport {SettingsFieldType} from \"../reducers/settingsState/settingsState\";\r\nimport {\r\n    setSettingsInLocalStorageByFieldAC,\r\n    SetSettingsInLocalStorageByFieldACType\r\n} from \"../reducers/settingsState/settingsStateActionCreators\";\r\nimport {\r\n    setAnnouncementAC,\r\n    SetAnnouncementsACType,\r\n    settIsFetchingAnnouncementReducerAC,\r\n    SettIsFetchingAnnouncementReducerACType\r\n} from \"../reducers/announcementState/announcementStateActionCreators\";\r\nimport {\r\n    delMyAnnouncementByIdAC,\r\n    DelMyAnnouncementByIdACType,\r\n    setMyAnnouncementsAC,\r\n    SetMyAnnouncementsACType,\r\n    SettIsFetchingMyAnnouncementReducerACType,\r\n    settIsFetchingMyAnnouncementsReducerAC,\r\n    setTotalNumOfPageMyAnnouncementReducerAC,\r\n    SetTotalNumOfPageMyAnnouncementReducerACType\r\n} from \"../reducers/myAnnouncementState/myAnnouncementStateActionCreators\";\r\nimport {PATH_FEED, PATH_MY_ANNOUNCEMENTS} from \"../../app/App\";\r\nimport {\r\n    setAnnouncementsListAC,\r\n    SetAnnouncementsListACType,\r\n    SetCurrentPageAnnouncementsListReducerACType,\r\n    setTotalNumOfPageAnnouncementsListReducerAC,\r\n    SetTotalNumOfPageAnnouncementsListReducerACType\r\n} from \"../reducers/announcementsListState/announcementsListStateActionCreators\";\r\nimport {\r\n    setIsFetchingMainStateAC,\r\n    SetIsFetchingMainStateACType,\r\n    setSubwayStationsDataAC,\r\n    SetSubwayStationsDataACType,\r\n    SetIsEmptyResponseMainStateACType,\r\n    setIsEmptyResponseMainStateAC,\r\n    setIsErrorFetchMainStateAC,\r\n    SetIsErrorFetchMainStateACType, resetToDefaultAllReducersAC\r\n} from \"../reducers/mainState/mainStateActionCreators\";\r\nimport {\r\n    resetToInitialByPageFormReducerAC,\r\n    ResetToInitialByPageFormReducerACType, setIsReadyToSendFormReducerAC, setIsValidFormReducerAC\r\n} from \"../reducers/formState/formStateActionCreators\";\r\nimport defaultAvatar from \"../../pictures/defaultAvatar.jpg\"\r\n\r\ntype GetStateType = () => AppStateType\r\n\r\n\r\n//--------------------AUTHORIZATION---------------------//\r\nexport const getIsExistUserThunk = () => (dispatch: any, getState: any) => {\r\n    console.log(\"getIsExistUserThunk\")\r\n    dispatch(setIsFetchingMainStateAC(true))\r\n    dispatch(setIsValidFormReducerAC(\"login\", \"registration\"))\r\n    const {\r\n        mainState: {apiService},\r\n        formState\r\n    } = getState()\r\n    const {login : {value, isValid}} = formState[\"registration\"]\r\n\r\n    isValid ? apiService[\"getIsExistUser\"](value)\r\n        .then((response:any) => {\r\n            if (!response.ok)\r\n                throw `CANNOT FETCH GET REQUEST ${response.status}`\r\n            return response.json()\r\n        })\r\n        .then(({result}: any) => {\r\n            dispatch(setIsExistUserAuthDataAC(result))\r\n            result && dispatch(setIsValidFormReducerAC(\"login\", \"registration\", false))\r\n            dispatch(setIsFetchingMainStateAC(false))\r\n        })\r\n        .catch((err: any) => {\r\n            dispatch(setIsFetchingMainStateAC(false))\r\n            // dispatch(setIsErrorFetchMainStateAC(true))\r\n            console.error(err)\r\n        }) : dispatch(setIsFetchingMainStateAC(false))\r\n}\r\n\r\n\r\ntype SendAuthDispatchType = Dispatch<SetIsErrorFetchMainStateACType | SetIsAuthACType | SetIsFetchingMainStateACType | any | SetSettingsInLocalStorageByFieldACType | CallHistoryMethodAction | ResetToInitialByPageFormReducerACType>\r\nexport const sendAuthorizationOrRegistrationThunk = (data: AuthorizationData & RegistrationData) => (dispatch: SendAuthDispatchType, getState: any) => {\r\n    const {authorizationState: {isRegistration}, mainState : {apiService}} = getState()\r\n    dispatch(setIsFetchingMainStateAC(true))\r\n    dispatch(setIsErrorFetchMainStateAC(false))\r\n    console.log(\"sendAuthorizationOrRegistrationThunk\", data)\r\n\r\n    const getRequestMethod = () => isRegistration ? \"postRegistrationData\" : \"postAuthorizationData\"\r\n    const getPageForFormReducer = () => isRegistration ? \"registration\" : \"authorization\"\r\n    apiService[getRequestMethod()](data)\r\n        .then((response:any) => {\r\n            if (!response.ok) throw response.status\r\n            return response.json()\r\n        })\r\n        .then(({result = true}: any) => {\r\n            dispatch(setIsFetchingMainStateAC(false))\r\n            if (result) {\r\n                dispatch(getUserInfoThunk())\r\n                dispatch(setSettingsInLocalStorageByFieldAC(data.login,\"login\"))\r\n                dispatch(setSettingsInLocalStorageByFieldAC(data.password,\"password\"))\r\n                dispatch(setIsAuthAC(true))\r\n            }\r\n        })\r\n        .catch((status: any) => {\r\n            console.log(status)\r\n            status == \"401\" ?\r\n                dispatch(setIsCorrectAuthDataAC(false)) :\r\n                dispatch(setIsErrorFetchMainStateAC(true))\r\n            dispatch(setIsFetchingMainStateAC(false))\r\n            dispatch(setIsReadyToSendFormReducerAC(false, getPageForFormReducer()))\r\n\r\n            console.error(status)\r\n        })\r\n}\r\n\r\n//--------------------SEARCH-BOX---------------------//\r\ntype GetSubwayStationsDispatchType = Dispatch<SetIsErrorFetchMainStateACType | SetSubwayStationsDataACType>\r\nexport const getSubwayStationsThunk = () => (dispatch: GetSubwayStationsDispatchType, getState: any) => {\r\n    console.log(\"getSubwayStationsThunk\")\r\n\r\n    const {mainState: {apiService}} = getState()\r\n\r\n    apiService[\"getSubwayStations\"]()\r\n        .then((response:any) => {\r\n            if (!response.ok)\r\n                throw `CANNOT FETCH GET REQUEST ${response.status}`\r\n            return response.json()\r\n        })\r\n        .then((data: any) => {\r\n            dispatch(setSubwayStationsDataAC(data))\r\n        })\r\n        .catch((err: any) => {\r\n            // dispatch(setIsErrorFetchMainStateAC(true))\r\n            console.error(err)\r\n        })\r\n}\r\n\r\ntype GetAnnouncementsByFiltersDispatchType = Dispatch<SetIsErrorFetchMainStateACType | SetIsEmptyResponseMainStateACType | SetSearchedDataAType | SetTotalNumOfPageSearchReducerACType | SetIsFetchingSearchReducerACType>\r\nexport const getAnnouncementsByFiltersThunk = (withConcat: boolean = false) => (dispatch: GetAnnouncementsByFiltersDispatchType, getState: any) => {\r\n    dispatch(setIsFetchingSearchReducerAC(true))\r\n    dispatch(setIsErrorFetchMainStateAC(false))\r\n    dispatch(setIsEmptyResponseMainStateAC(false))\r\n    console.log(\"getAnnouncementsByFiltersThunk\")\r\n\r\n    const {\r\n        searchBoxState : {\r\n            currentPage,\r\n            searchConfig: {categoryId: {category}, subwayStations: {id:stationId}, searchValue}\r\n        },\r\n        mainState : {apiService} } = getState()\r\n\r\n    apiService[\"getAnnouncementsByFilters\"](currentPage, searchValue, category, stationId)\r\n        .then((response:any) => {\r\n            if(!response.ok) throw response.status\r\n            dispatch(setIsEmptyResponseMainStateAC(response.status === 404))\r\n            if (!response.ok)\r\n                throw `CANNOT FETCH GET REQUEST ${response.status}`\r\n            return response.json()\r\n        })\r\n        .then(({pages, announcements}: any) => {\r\n            dispatch(setTotalNumOfPageSearchReducerAC(pages - 1))\r\n            dispatch(setSearchedDataAC(announcements, withConcat))\r\n            dispatch(setIsFetchingSearchReducerAC(false))\r\n        })\r\n        .catch((status: any) => {\r\n            status === 404 ?\r\n                dispatch(setIsEmptyResponseMainStateAC(true)) :\r\n                dispatch(setIsErrorFetchMainStateAC(true))\r\n            dispatch(setIsFetchingSearchReducerAC(false))\r\n            console.error(status)\r\n        })\r\n}\r\n\r\n//--------------------FEED-PAGE--------------------//\r\ntype getLastAnnouncementsDispatchType = Dispatch<SetIsErrorFetchMainStateACType | SetIsEmptyResponseMainStateACType | SetIsFetchingMainStateACType | SetLastAnnouncementsACType>\r\nexport const getLastAnnouncementsThunk = (page: number, withConcat = false) => (dispatch: getLastAnnouncementsDispatchType, getState: any) => {\r\n    dispatch(setIsFetchingMainStateAC(true))\r\n    dispatch(setIsErrorFetchMainStateAC(false))\r\n    dispatch(setIsEmptyResponseMainStateAC(false))\r\n    console.log(\"getLastAnnouncementsThunk\")\r\n\r\n    const {mainState: {apiService}} = getState()\r\n\r\n    apiService[\"getAnnouncementsByFilters\"](page, \"\", \"\", \"\")\r\n        .then((response:any) => {\r\n            if(!response.ok) throw response.status\r\n            return response.json()\r\n        })\r\n        .then(({announcements}: any)  => {\r\n            dispatch(setLastAnnouncementsAC(announcements, withConcat))\r\n            dispatch(setIsFetchingMainStateAC(false))\r\n        })\r\n        .catch((status: any) => {\r\n            status === 404 ?\r\n                dispatch(setIsEmptyResponseMainStateAC(true)) :\r\n                dispatch(setIsErrorFetchMainStateAC(true))\r\n            dispatch(setIsFetchingMainStateAC(false))\r\n            console.error(status)\r\n        })\r\n}\r\n//--------------------SETTINGS-PAGE--------------------//\r\ntype PostSettingByFieldDispatchType = Dispatch<SetIsErrorFetchMainStateACType | SetSettingsInLocalStorageByFieldACType>\r\nexport const postSettingByFieldThunk = (data: any, field: SettingsFieldType) => (dispatch: PostSettingByFieldDispatchType, getState: any) => {\r\n    dispatch(setIsErrorFetchMainStateAC(false))\r\n\r\n    console.log(\"postSettingByFieldThunk\")\r\n    const [value] = Object.values(data)\r\n\r\n    const {mainState: {apiService}} = getState()\r\n\r\n    apiService[\"postSettingsByField\"](data, field)\r\n        .then((response:any) => {\r\n            if (!response.ok)\r\n                throw `CANNOT FETCH POST REQUEST ${response.status}`\r\n            return response.json()\r\n        })\r\n        .then(({result = false}: any) => {\r\n            result && dispatch(setSettingsInLocalStorageByFieldAC(value, field))\r\n        })\r\n        .catch((err: any) => {\r\n            dispatch(setIsErrorFetchMainStateAC(true))\r\n            console.error(err)\r\n        })\r\n}\r\n\r\ntype PostLogoutOrDeleteUserType = Dispatch<SetIsErrorFetchMainStateACType | LogoutOrDeleteUserACType | CallHistoryMethodAction>\r\ntype LogoutOrDeleteType = \"logout\" | \"delete\"\r\nexport const postLogoutOrDeleteUser = (logoutOrDelete: LogoutOrDeleteType) => (dispatch: PostLogoutOrDeleteUserType, getState:any) => {\r\n    console.log(\"postLogoutOrDeleteUser\")\r\n    dispatch(setIsErrorFetchMainStateAC(false))\r\n\r\n    const {mainState: {apiService}} = getState()\r\n\r\n    const getRequestByLogoutOrDelete = () => {\r\n        if (logoutOrDelete === \"logout\") return \"postLogout\"\r\n        if (logoutOrDelete === \"delete\") return \"postDelete\"\r\n        return \"postLogout\"\r\n    }\r\n\r\n    apiService[getRequestByLogoutOrDelete()]()\r\n        .then((response:any) => {\r\n            if (!response.ok)\r\n                throw `CANNOT FETCH POST REQUEST ${response.status}`\r\n            return response.json()\r\n        })\r\n        .then(({result = false}: any) => {\r\n            if (result) {\r\n                dispatch(logoutOrDeleteUseAC())\r\n                dispatch(resetToDefaultAllReducersAC())\r\n                dispatch(push(PATH_FEED))\r\n            }\r\n        })\r\n        .catch((err: any) => {\r\n            dispatch(setIsErrorFetchMainStateAC(true))\r\n            console.error(err)\r\n        })\r\n}\r\n\r\n//--------------------ANNOUNCEMENT-PAGE--------------------//\r\ntype GetAnnouncementByIdDispatchType = Dispatch<SetIsErrorFetchMainStateACType | SetIsEmptyResponseMainStateACType | SettIsFetchingAnnouncementReducerACType | SetAnnouncementsACType>\r\nexport const getAnnouncementByIdThunk = (category: string, id: number) => (dispatch: GetAnnouncementByIdDispatchType, getState: any) => {\r\n    dispatch(settIsFetchingAnnouncementReducerAC(true))\r\n    dispatch(setIsErrorFetchMainStateAC(false))\r\n    console.log(\"getAnnouncementByIdThunk\")\r\n\r\n    const {mainState: {apiService}} = getState()\r\n\r\n    apiService[\"getAnnouncementByIdThunk\"](category, id)\r\n        .then((response:any) => {\r\n            if(!response.ok) throw response.status\r\n            return response.json()\r\n        })\r\n        .then((data: any) => {\r\n            dispatch(setAnnouncementAC(data))\r\n            dispatch(settIsFetchingAnnouncementReducerAC(false))\r\n        })\r\n        .catch((status: any) => {\r\n            status === 404 ?\r\n                dispatch(setIsEmptyResponseMainStateAC(true)) :\r\n                dispatch(setIsErrorFetchMainStateAC(true))\r\n            dispatch(settIsFetchingAnnouncementReducerAC(false))\r\n            console.error(status)\r\n        })\r\n}\r\n\r\n//--------------------MY-ANNOUNCEMENT-PAGE--------------------//\r\ntype GetMyAnnouncementsDispatchType = Dispatch<SetIsErrorFetchMainStateACType | SetMyAnnouncementsACType | SetIsEmptyResponseMainStateACType | SetIsFetchingMainStateACType | SetTotalNumOfPageMyAnnouncementReducerACType>\r\nexport const getMyAnnouncementsThunk = (withConcat = false) => (dispatch: GetMyAnnouncementsDispatchType, getState: any) => {\r\n    dispatch(setIsFetchingMainStateAC(true))\r\n    dispatch(setIsErrorFetchMainStateAC(false))\r\n    dispatch(setIsEmptyResponseMainStateAC(false))\r\n    console.log(\"getMyAnnouncementsThunk\")\r\n\r\n    const {myAnnouncementsState: {currentPage}, mainState : {apiService}} = getState()\r\n\r\n    apiService[\"getMyAnnouncements\"](currentPage)\r\n        .then((response:any) => {\r\n            if (!response.ok) throw response.status\r\n            return response.json()\r\n        })\r\n        .then(({pages, announcements}: any) => {\r\n            dispatch(setTotalNumOfPageMyAnnouncementReducerAC(pages - 1))\r\n            dispatch(setMyAnnouncementsAC(announcements, withConcat))\r\n            dispatch(setIsFetchingMainStateAC(false))\r\n        })\r\n        .catch((status: any) => {\r\n            status === 404 ?\r\n                dispatch(setIsEmptyResponseMainStateAC(true)) :\r\n                dispatch(setIsErrorFetchMainStateAC(true))\r\n\r\n            dispatch(setIsFetchingMainStateAC(false))\r\n\r\n            console.error(status)\r\n        })\r\n}\r\n\r\ntype PostDeleteAnnouncementDispatchType = Dispatch<SetIsErrorFetchMainStateACType | SettIsFetchingMyAnnouncementReducerACType | DelMyAnnouncementByIdACType>\r\nexport const postDeleteAnnouncementThunk = (id: number) => (dispatch: PostDeleteAnnouncementDispatchType, getState: any) => {\r\n    dispatch(settIsFetchingMyAnnouncementsReducerAC(true))\r\n    dispatch(setIsErrorFetchMainStateAC(false))\r\n    console.log(\"postDeleteAnnouncementThunk\")\r\n\r\n    const {mainState: {apiService}} = getState()\r\n\r\n    apiService[\"postDeleteAnnouncement\"](id)\r\n        .then((response:any) => {\r\n            if (!response.ok)\r\n                throw `CANNOT FETCH POST REQUEST ${response.status}`\r\n            return response.json()\r\n        })\r\n        .then(({result = false}: any) => {\r\n            result && dispatch(delMyAnnouncementByIdAC(id))\r\n            dispatch(settIsFetchingMyAnnouncementsReducerAC(false))\r\n        })\r\n        .catch((err: any) => {\r\n            dispatch(settIsFetchingMyAnnouncementsReducerAC(false))\r\n            dispatch(setIsErrorFetchMainStateAC(true))\r\n            console.error(err)\r\n        })\r\n}\r\n\r\n//--------------------CREATE-ANNOUNCEMENT--------------------//\r\ntype PostNewAnnouncementDispatchType = Dispatch<SetIsErrorFetchMainStateACType | SetIsFetchingMainStateACType | CallHistoryMethodAction>\r\nexport const postNewAnnouncementThunk = (data: NewAnnouncementData) => (dispatch: PostNewAnnouncementDispatchType, getState:any) => {\r\n    dispatch(setIsFetchingMainStateAC(true))\r\n    dispatch(setIsErrorFetchMainStateAC(false))\r\n    console.log(\"postNewAnnouncement\")\r\n\r\n    const {mainState: {apiService}} = getState()\r\n\r\n    apiService[\"postNewAnnouncement\"](data)\r\n        .then((response:any) => {\r\n            if (!response.ok) throw `CANNOT FETCH POST REQUEST ${response.status}`\r\n            else {\r\n                dispatch(setIsFetchingMainStateAC(false))\r\n                dispatch(push(PATH_MY_ANNOUNCEMENTS))\r\n            }\r\n        })\r\n        .catch((err: any) => {\r\n            dispatch(setIsFetchingMainStateAC(false))\r\n            dispatch(setIsErrorFetchMainStateAC(true))\r\n            console.error(err)\r\n        })\r\n}\r\n\r\n//--------------------ANNOUNCEMENTS-LIST-PAGE--------------------//\r\ntype GetAnnouncementsListDispatchType = Dispatch<SetIsErrorFetchMainStateACType | SetIsEmptyResponseMainStateACType | SetTotalNumOfPageAnnouncementsListReducerACType | SetIsFetchingMainStateACType | SetAnnouncementsListACType | SetCurrentPageAnnouncementsListReducerACType>\r\nexport const getAnnouncementsListThunk = (category: string, withConcat = false) => (dispatch: GetAnnouncementsListDispatchType, getState: any) => {\r\n    dispatch(setIsFetchingMainStateAC(true))\r\n    dispatch(setIsErrorFetchMainStateAC(false))\r\n    console.log(\"getAnnouncementsListThunk\")\r\n\r\n    const {announcementsListState: {currentPage}, mainState : {apiService}} = getState()\r\n\r\n    apiService[\"getAnnouncementsByFilters\"](currentPage, \"\", \"\", \"\")\r\n        .then((response:any) => {\r\n            dispatch(setIsEmptyResponseMainStateAC(response.status === 404))\r\n            if (!response.ok)\r\n                throw `CANNOT FETCH GET REQUEST ${response.status}`\r\n            return response.json()\r\n        })\r\n        .then(({pages, announcements}: any) => {\r\n            dispatch(setTotalNumOfPageAnnouncementsListReducerAC(pages - 1))\r\n            dispatch(setAnnouncementsListAC(announcements, withConcat))\r\n            dispatch(setIsFetchingMainStateAC(false))\r\n        })\r\n        .catch((err: any) => {\r\n            dispatch(setIsFetchingMainStateAC(false))\r\n            dispatch(setIsErrorFetchMainStateAC(true))\r\n            console.error(err)\r\n        })\r\n}\r\n//--------------------GET-USER-INFO--------------------//\r\ntype GetUserInfoDispatchType = Dispatch<SetIsErrorFetchMainStateACType | SetSettingsInLocalStorageByFieldACType>\r\ntype GetUserInfoThunkType = typeof getUserInfoThunk\r\nexport const getUserInfoThunk = () => (dispatch:GetUserInfoDispatchType, getState:any) => {\r\n    console.log(\"getUserInfoThunk\")\r\n\r\n    const {mainState: {apiService}} = getState()\r\n\r\n    apiService.getUserInfo()\r\n        .then((response:any) => {\r\n            if (!response.ok)\r\n                throw `CANNOT FETCH GET REQUEST ${response.status}`\r\n            return response.json()\r\n        })\r\n        .then( ({photo = defaultAvatar, ...restUserData}: any) => {\r\n            console.log(\"RESPONSE\", restUserData)\r\n            dispatch(setSettingsInLocalStorageByFieldAC(photo, \"photo\"))\r\n            const userDataEntries = Object.entries(restUserData)\r\n            userDataEntries.forEach( ([field, value]) => {\r\n                console.log(field, value)\r\n                dispatch(setSettingsInLocalStorageByFieldAC(value, field))\r\n            })\r\n        })\r\n}","import React from 'react';\r\nimport \"./buttonStyles.css\"\r\n\r\ntype ButtonPropsType = {\r\n    onClickHandler?: ((event: React.MouseEvent<HTMLDivElement, MouseEvent>) => void)\r\n    label: any\r\n    isDisabled?: boolean\r\n    className?: string\r\n}\r\n\r\nconst Button = (props: ButtonPropsType) => {\r\n\r\n    const {className, isDisabled = false, label, onClickHandler} = props\r\n\r\n  return isDisabled ?\r\n       <div className={`btn ${className} font-weight-bold`}>Отправка...</div> :\r\n      <div onClick={onClickHandler} className={`btn ${className} font-weight-bold`}>{label}</div>\r\n\r\n}\r\n\r\nexport default Button;\r\n","\r\nexport const getIsFetchingMainStateSelector = (state: any) => state.mainState.isFetching\r\nexport const getIsEmptyResponseMainStateSelector = (state: any) => state.mainState.isEmptyResponse\r\nexport const getIsErrorFetchMainStateSelector = (state: any) => state.mainState.isErrorFetch\r\nexport const getSubwayStationsDataSelector = (state: any) => state.mainState.subwayStationsData\r\nexport const getCategoriesDataSelector = (state: any) => state.mainState.categoriesData\r\n\r\nexport const getTheSubCategoriesSelector = (categoriesData: Array<any>, activeClassName?: string) => {\r\n    //Проверка содержит ли объект с категорией подкатегории\r\n    const isIncludesSubCategory = (categoryData: Object) => \"subCategories\" in categoryData\r\n    //Возвращает подготовленный объект категории\r\n    const prepareCategoryToPush = (categoryData: any) => {\r\n        const {id, name, category} = categoryData\r\n        const baseCategory = {id, name, category}\r\n        return isIncludesSubCategory(categoryData) ?\r\n            {...baseCategory, className: activeClassName} : baseCategory\r\n    }\r\n    //В процессе итерации достаём подкатегории из объекта категории\r\n    return categoriesData.reduce( (newCategoriesData: any, category: any) => {\r\n        const {subCategories} = category\r\n        newCategoriesData.push(prepareCategoryToPush(category))\r\n        isIncludesSubCategory(category) && newCategoriesData.push(...subCategories)\r\n        return newCategoriesData\r\n    }, [] )\r\n}","export const getSearchedDataSelector = (state: any) => state.searchBoxState.searchedData\r\nexport const getSearchConfigCategorySelector = (state: any) => state.searchBoxState.searchConfig.categoryId\r\nexport const getSearchConfigSubwayStationsSelector = (state: any) => state.searchBoxState.searchConfig.subwayStations\r\nexport const getSearchConfigSearchValueSelector = (state: any) => state.searchBoxState.searchConfig.searchValue\r\nexport const getIsFetchingSearchReducerSelector = (state: any) => state.searchBoxState.isFetching\r\nexport const getCurrentPageSearchReducerSelector = (state: any) => state.searchBoxState.currentPage\r\nexport const getTotalNumOfPageSearchReducerSelector = (state: any) => state.searchBoxState.totalNumOfPages","import React, {useCallback, useState} from 'react';\nimport \"./searchBoxStyles.css\";\nimport Select from \"./select/select\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {getAnnouncementsByFiltersThunk} from \"../../redux/thunks/thunks\";\nimport Button from \"../button/button\";\nimport {\n    getCategoriesDataSelector,\n    getSubwayStationsDataSelector, getTheSubCategoriesSelector\n} from \"../../redux/reducers/mainState/mainStateSelectors\";\nimport {\n    getIsFetchingSearchReducerSelector,\n    getSearchConfigCategorySelector,\n    getSearchConfigSearchValueSelector,\n    getSearchConfigSubwayStationsSelector\n} from \"../../redux/reducers/searchBoxState/searchBoxStateSelectors\";\nimport {useHistory} from 'react-router-dom';\nimport {\n    resetToInitialStateSearchReducerAC,\n    setSearchConfigCategoryAC,\n    setSearchConfigSearchValueAC,\n    setSearchConfigSubwayStationsAC\n} from '../../redux/reducers/searchBoxState/searchBoxStateActionCreators';\nimport {GET_PATH_SEARCH} from \"../../app/App\";\n\nconst SearchBox = (props: any) => {\n\n    const {placeHolder, className} = props\n\n    //------USE-HISTORY-----//\n    const {location : {pathname}, push} = useHistory()\n\n    //------MAP-STATE-TO-PROPS-----//\n    const subwayStationsData = useSelector(getSubwayStationsDataSelector)\n    const categoriesData = useSelector( (state) =>\n        getTheSubCategoriesSelector(getCategoriesDataSelector(state), \"bg-warning font-weight-bold text-center\"))\n    const isFetching = useSelector(getIsFetchingSearchReducerSelector)\n    const searchConfigCategory = useSelector(getSearchConfigCategorySelector)\n    const searchConfigSubwayStation = useSelector(getSearchConfigSubwayStationsSelector)\n    const searchConfigSearchValue = useSelector(getSearchConfigSearchValueSelector)\n\n    //-----MAP-DISPATCH-TO-PROPS----//\n    const dispatch = useDispatch()\n    const getAnnouncementsByFilters = useCallback(() => dispatch(getAnnouncementsByFiltersThunk()), [dispatch])\n    const resetToInitialStateSearchReducer = useCallback(() => dispatch(resetToInitialStateSearchReducerAC()), [dispatch])\n    const setSearchConfigCategory = useCallback((category) => dispatch(setSearchConfigCategoryAC(category)), [dispatch])\n    const setSearchConfigSubwayStation = useCallback((station) => dispatch(setSearchConfigSubwayStationsAC(station)), [dispatch])\n    const setSearchConfigSearchValue = useCallback((value) => dispatch(setSearchConfigSearchValueAC(value)), [dispatch])\n\n    //-----LOCAL-STATE-----//\n    const [searchValue, setSearchValue] = useState(searchConfigSearchValue)\n\n\n    const selectItemOnChangeHandler = (field: \"category\" | \"subway\", selectItem: any, setIsActiveSelect:Function) => {\n        field === \"category\" && setSearchConfigCategory(selectItem)\n        field === \"subway\" && setSearchConfigSubwayStation(selectItem)\n        setIsActiveSelect(false)\n    }\n\n    const searchOnChangeHandler = (event?: any) => {\n        const { target : {value = \"\"} = {} } = event || {}\n        setSearchValue(value)\n    }\n\n    const onClickFindBtnHandler = () => {\n        getAnnouncementsByFilters()\n        resetToInitialStateSearchReducer()\n        const newPathname = GET_PATH_SEARCH(searchConfigCategory.category)\n        pathname !== newPathname && push(newPathname)\n    }\n\n  return (\n      <>\n          <div className={`searchBox rounded bg-info p-0 mx-auto d-flex col-lg-10 input-group justify-content-center ${className}`}>\n              <Select className={\"col-lg-3 p-2 input-group-prepend\"} onChangeHandlerSelectItem={(selectItem: any, handler: any) => selectItemOnChangeHandler(\"subway\", selectItem, handler)} value={searchConfigSubwayStation.name} selectItems={subwayStationsData}/>\n              <div className=\"searchBox__search col-lg-4 p-2 d-flex\">\n                  <input onBlur={({target: {value}}) => setSearchConfigSearchValue(value)} onChange={searchOnChangeHandler}\n                         className={\"searchBox__search-input w-100 form-control pr-5\"}\n                         value={searchValue} type=\"text\"\n                         placeholder={placeHolder}/>\n                  <div onClick={() => setSearchValue(\"\")} className={\"searchBox__search-clear\"}>&#10006;</div>\n              </div>\n              <Select className={\"col-lg-3 p-2 input-group-append\"} onChangeHandlerSelectItem={(selectItem: any, handler: any) => selectItemOnChangeHandler(\"category\", selectItem, handler)} value={searchConfigCategory.name} selectItems={categoriesData}/>\n              <div className=\"input-group-append p-2 col-md-6 col-lg-2\">\n                  <Button className={\"btn-warning w-100\"} onClickHandler={onClickFindBtnHandler} label={\"Найти\"} isDisabled={isFetching}/>\n              </div>\n          </div>\n          <hr className={\"my-4\"}/>\n    </>\n  );\n}\n\nexport default SearchBox;\n","export const getLastAnnouncementsSelector = (state: any) => state.feedState.lastAnnouncements\r\nexport const getIsFetchingFeedReducerSelector = (state: any) => state.feedState.isFetching\r\nexport const getDescriptionSalamRuSelector = (state: any) => state.feedState.descriptionSalamRu\r\n","// ------AUTHORIZATION-TYPES-----//\r\nimport {SettingsFieldType} from \"../redux/reducers/settingsState/settingsState\";\r\n\r\nexport const API_URL = \"http://45.135.164.81/api\"\r\n\r\nexport type AuthorizationData = { login: string,  password: string }\r\nexport type RegistrationData = { name: string,  login: string, phone: string, password: string }\r\n\r\n// ------CREATE-ANNOUNCEMENT-PAGE---//?\r\n\r\nexport type NewAnnouncementData = {\r\n    categoryId: number,\r\n    name: string,\r\n    description: string\r\n    photoList?: Array<string>,\r\n    price: number,\r\n    stationId: string,\r\n    sellerPhone: string\r\n}\r\n\r\n// ------SEARCH-BOX-TYPES-----//\r\nexport type GetAnnouncementsCategoryType = \"announcements\" |  \"housing\" | \"apartment\" | \"bunk\" | \"room\" | \"job\" | \"vacancies\" | string\r\n\r\n// ------SETTINGS-TYPES---//\r\nexport type PostSettingsAvatarData = { data: string, type: string }\r\nexport type PostSettingsNameData = { name: string }\r\nexport type PostSettingsEmailData = { email: string }\r\nexport type PostSettingsPhoneData = { phone: string }\r\n\r\nexport class serverAPI {\r\n\r\n    // static baseURL = 'http://localhost:8080'\r\n    static baseURL = API_URL\r\n    static login = () => localStorage.getItem(\"login\") || \"defaultUser\"\r\n    static password = () => localStorage.getItem(\"password\") || \"111111\"\r\n    static base64token = () => btoa(`${serverAPI.login()}:${serverAPI.password()}`)\r\n\r\n    // ----HEADERS---//\r\n    static headers = () => new Headers({\r\n        \"Content-Type\" : \"application/json\",\r\n    })\r\n\r\n    static addAuthHeader = (headers: any) => {\r\n        headers.set(\"Authorization\", `Basic ${serverAPI.base64token()}`)\r\n        return headers\r\n    }\r\n    static headerWithAuth = () => serverAPI.addAuthHeader(serverAPI.headers())\r\n\r\n    // ----REQUEST-CONFIGURATION---//\r\n    static getConfiguration = (data?: any, withAuth = true) => {\r\n        console.log(data)\r\n        const headers = withAuth ?\r\n            serverAPI.headerWithAuth() :\r\n            serverAPI.headers()\r\n        const body = data ? JSON.stringify(data) : null\r\n        return {\r\n            method: 'GET',\r\n            body: body,\r\n            headers\r\n        }\r\n    }\r\n\r\n    static postConfiguration = (data?: any, withAuth = true) => {\r\n        console.log(data)\r\n        const headers = withAuth ?\r\n            serverAPI.headerWithAuth() :\r\n            serverAPI.headers()\r\n        const body = data ? JSON.stringify(data) : null\r\n        return {\r\n            method: 'POST',\r\n            body: body,\r\n            headers\r\n        }\r\n    }\r\n\r\n    // static putConfiguration = () => {\r\n    //     return {\r\n    //         method: 'PUT',\r\n    //         headers: serverAPI.headerWithAuth()\r\n    //     }\r\n    // }\r\n\r\n// -----------------CONFIGURATED-REQUEST--------------------//\r\n    static configuredGET = (path: string, withAuth= false, data?:any) => {\r\n        const settings = serverAPI.getConfiguration(data, withAuth)\r\n        return fetch(serverAPI.baseURL + path, settings)\r\n    }\r\n\r\n    static configuredPOST = (path: string, data?: any, withAuth= true) => {\r\n        const settings = serverAPI.postConfiguration(data, withAuth)\r\n        return fetch(serverAPI.baseURL + path, settings)\r\n    }\r\n\r\n    static logoutPOST = () => {\r\n        const settings = {method: 'POST'}\r\n        const baseUrlWithoutApi = serverAPI.baseURL.slice(0, -4)\r\n        const path = \"/logout\"\r\n        return fetch( baseUrlWithoutApi + path, settings)\r\n    }\r\n\r\n    // static configuredPUT = (path) => {\r\n    //     const settings = serverAPI.putConfiguration()\r\n    //     return fetch(serverAPI.baseURL + path, settings)\r\n    // }\r\n\r\n    // ------AUTHORIZATION-----//\r\n    static getIsExistUser = (login: string): Promise<Response> => {\r\n        console.log(login, \"getIsExistUser\")\r\n        const path = `/userExists/${login}`\r\n        return serverAPI.configuredGET(path, false)\r\n    }\r\n\r\n    static postAuthorizationData = (data: AuthorizationData): Promise<Response> => {\r\n        console.log(data, \"postAuthorizationData\")\r\n        const path = \"/login\"\r\n         return serverAPI.configuredPOST(path, data,false)\r\n    }\r\n\r\n    static postRegistrationData = (data: RegistrationData): Promise<Response> => {\r\n        console.log(data, \"postRegistrationData\")\r\n        const path = \"/registration\"\r\n        return serverAPI.configuredPOST(path, data, false)\r\n    }\r\n\r\n    // ------GET-USER-INFO-----//\r\n    static getUserInfo = (): Promise<Response> => {\r\n        console.log(\"getUserInfo\")\r\n        const path = \"/user/settings\"\r\n        return serverAPI.configuredGET(path, true)\r\n    }\r\n\r\n    // ------SEARCH-BOX-----//\r\n    static getSubwayStations = (): Promise<Response> => {\r\n        console.log(\"getSubwayStations\")\r\n        const path = \"/subwayStations\"\r\n        return serverAPI.configuredGET(path, false)\r\n    }\r\n\r\n    static getAnnouncementsByFilters = (page: number, name?: string, categoryId?: string| number, stationId?: string | number): Promise<Response> => {\r\n        const path = `/announcement/filter?categoryId=${categoryId}&name=${name}&stationId=${stationId}&page=${page}`\r\n        console.log(page, categoryId, name, stationId, \"getAnnouncementsByFilters\", path)\r\n        return serverAPI.configuredGET(path, false)\r\n    }\r\n\r\n    static getAnnouncementsList = (page: number): Promise<Response> => {\r\n        const path = `/announcement/all?page=${page}`\r\n        console.log(\"getAnnouncementsList\")\r\n        return serverAPI.configuredGET(path, false)\r\n    }\r\n\r\n    // ------GET-ANNOUNCEMENT-BY-CATEGORY-AND-ID----//\r\n    static getAnnouncementById = (id: number): Promise<Response> => {\r\n        console.log(\"getAnnouncementById\", id)\r\n        const path = `/announcement/${id}`\r\n        return serverAPI.configuredGET(path, false)\r\n    }\r\n\r\n    // ------MY-ANNOUNCEMENTS-PAGE---//\r\n    static getMyAnnouncements = (page: number): Promise<Response> => {\r\n        console.log(\"getMyAnnouncements\", page)\r\n        const path = `/userAnnouncements?page=${page}`\r\n        return serverAPI.configuredGET(path, false)\r\n    }\r\n\r\n    static postDeleteAnnouncement = (id:number): Promise<Response> => {\r\n        console.log(id, \"postDeleteAnnouncement\")\r\n        const path = `/announcement/delete/${id}`\r\n        return serverAPI.configuredPOST(path, null, true)\r\n    }\r\n\r\n\r\n    // ------SETTINGS-PAGE---//\r\n\r\n    static postSettingsByField = (data: any, field: SettingsFieldType): Promise<Response> => {\r\n        console.log(data, \"postSettingsByField\")\r\n        switch (field) {\r\n            case \"photo\": return serverAPI.postSettingsAvatar(data)\r\n            case \"name\": return serverAPI.postSettingsName(data)\r\n            case \"phone\": return serverAPI.postSettingsPhone(data)\r\n            default: return serverAPI.postSettingsAvatar(data)\r\n        }\r\n    }\r\n    static postSettingsAvatar = (data: PostSettingsAvatarData): Promise<Response> => {\r\n        console.log(data, \"postSettingsAvatar\")\r\n        const path = \"/user/settings/avatar\"\r\n        return serverAPI.configuredPOST(path, data, true)\r\n    }\r\n\r\n    static postSettingsName = (data: PostSettingsNameData): Promise<Response> => {\r\n        console.log(data, \"postSettingsName\")\r\n        const path = \"/user/settings/name\"\r\n        return serverAPI.configuredPOST(path, data, true)\r\n    }\r\n\r\n    static postSettingsPhone = (data: PostSettingsPhoneData): Promise<Response> => {\r\n        const path = \"/user/settings/phone\"\r\n        return serverAPI.configuredPOST(path, data, true)\r\n    }\r\n\r\n    static postLogout = (): Promise<Response> => {\r\n        console.log(\"postLogout\")\r\n        return serverAPI.logoutPOST()\r\n    }\r\n\r\n    static postDelete = (): Promise<Response> => {\r\n        console.log(\"postDelete\")\r\n        const path = \"/user/delete\"\r\n        return serverAPI.configuredPOST(path, null, true)\r\n    }\r\n\r\n    // ------CREATE-ANNOUNCEMENT-PAGE---//\r\n    static postNewAnnouncement = (data: NewAnnouncementData): Promise<Response> => {\r\n        console.log(data, \"postNewAnnouncement\")\r\n        const path = \"/announcement/new\"\r\n        return serverAPI.configuredPOST(path, data, true)\r\n    }\r\n}","import React, {useState} from 'react';\n\nimport badCaseImage from \"../pictures/badCaseImage.png\"\nimport { API_URL } from '../api/serverAPI';\n\nconst useBadCaseImage = (photo:string) => {\n\n    const [imageSRC, setImageSRC] = useState(`${API_URL}/photo/${photo}`)\n    const image = new Image\n    image.src = imageSRC\n    image.onerror = () => setImageSRC(badCaseImage)\n\n    return imageSRC\n}\n\nexport default useBadCaseImage;\n","import React from 'react';\nimport \"./pictureStyles.css\"\nimport useBadCaseImage from \"../../hooks/useBadCaseImage\";\n\ntype ImagePropsType = {\n    photo: string\n    className?: string\n    onClickHandler?: any\n    styles?: any\n}\n\nconst Picture = (props: ImagePropsType) => {\n\n    const {photo, className, onClickHandler = null, styles={}} = props\n\n    const imageSRC = useBadCaseImage(photo)\n\n  return <div onClick={onClickHandler} style={{backgroundImage: `url(${imageSRC})`, ...styles}} className={`image ${className}`}/>\n}\n\nexport default Picture;\n","import React from 'react';\nimport \"./announcementStyles.css\"\nimport {NavLink} from \"react-router-dom\";\nimport Image from \"../picture/picture\";\nimport {GET_PATH_SEARCH} from \"../../app/App\";\n\ntype AnnouncementPropsType = {\n    photo: string\n    id: number\n    name: string\n    category: string\n    price: number\n    creationDate: string\n    subwayStation: string\n    hasLike: boolean\n    className?: string\n}\n\nconst Announcement = (props: AnnouncementPropsType) => {\n\n    const {photo, name, creationDate, category, className, price, subwayStation, id} = props\n\n\n  return (\n      <div className={`border text-center d-flex flex-column flex-md-row text-white border-dark mb-3 mr-3 p-0 ${className}`}>\n              <NavLink className={\"col-lg-4 col-md-5 col-sm-12 p-0 card-header\"} to={`${GET_PATH_SEARCH(category)}/${id}`}>\n          {/*<div className=\"card-header p-0\">*/}\n                  <Image photo={photo}/>\n          {/*</div>*/}\n              </NavLink>\n              <div className={\"card-inner-wrapper d-flex flex-column justify-content-between\"}>\n                  <div className=\"card-body d-flex flex-column justify-content-between\">\n                      <h5 className=\"card-title text-primary\">{name}</h5>\n                      <h6 className=\"card-text text-dark\">{`Цена: ${price} руб.`}</h6>\n                      <h6 className=\"card-text text-dark\">{`Метро: ${subwayStation}`}</h6>\n                  </div>\n                  <div className=\"card-footer\">\n                      <small className=\"text-muted\">{`Дата создания: ${creationDate}`}</small>\n                  </div>\n              </div>\n      </div>\n  )\n}\n\nexport default Announcement;\n","import React, {useEffect, useState} from 'react';\nimport \"./buttonUpStyles.css\"\nimport Button from '../button/button';\n\n\nconst ButtonUp = (props: any) => {\n\n    const [isView, setIsView] = useState(false)\n\n    useEffect(() => {\n        document.addEventListener(\"scroll\", onScrollHandler)\n        return () => document.removeEventListener(\"scroll\", onScrollHandler)\n    }, [])\n\n    const onScrollHandler = (event: Event) => {\n        const currentHeight = Math.ceil(window.innerHeight + window.scrollY)\n        const innerHeight = window.innerHeight\n        currentHeight < innerHeight + 300 ? setIsView(false) : setIsView(true)\n    }\n\n  return isView ?\n      <Button className={\"btn-up btn-primary\"} label={\"Наверх\"}\n              onClickHandler={() => window.scrollTo(0,0)} /> : null\n}\n\nexport default ButtonUp;","import React from \"react\";\r\nimport \"./preloaderStyle.css\";\r\n\r\ntype PreloaderPropsType = {\r\n    className?: string\r\n}\r\n\r\nconst Preloader = (props: PreloaderPropsType) => {\r\n    const {className} = props\r\n\r\n    return (\r\n        <span className={`cssload-loader ${className}`}>\r\n            <span className=\"cssload-loader-inner\"/>\r\n        </span>\r\n    )\r\n}\r\n\r\nexport default React.memo(Preloader)","import React from 'react';\n\ntype AlertEmptyResponsePropsType = {\n  alertText?: string\n  className?: string\n}\n\nconst AlertEmptyResponse: React.FC<AlertEmptyResponsePropsType> = (props) => {\n  const {className, alertText = \"По вашему запросу ничего не найдено!!\"} = props\n\n  return (\n          <div className={`alert alert-warning ${className}`}>\n            {alertText}\n          </div>\n  )\n}\n\nexport default AlertEmptyResponse;","import React from 'react';\n\ntype AlertEmptyResponsePropsType = {\n  alertText?: string\n  className?: string\n}\n\nconst AlertErrorFetching: React.FC<AlertEmptyResponsePropsType> = (props) => {\n  const {className, alertText = \"При отправке запроса возникла ошибка, попробуйте еще раз!!\"} = props\n\n  return (\n          <div className={`alert alert-danger text-center ${className}`}>\n            {alertText}\n          </div>\n  )\n}\n\nexport default AlertErrorFetching;","import React from 'react';\nimport Preloader from \"../preloader/preloader\";\nimport AlertEmptyResponse from \"../alertEmptyResponse/alertEmptyResponse\";\nimport AlertErrorFetching from \"../alertErrorFetching/alertErrorFetching\";\nimport {useSelector} from \"react-redux\";\nimport {\n    getIsEmptyResponseMainStateSelector, getIsErrorFetchMainStateSelector,\n    getIsFetchingMainStateSelector\n} from \"../../redux/reducers/mainState/mainStateSelectors\";\n\ntype AnnouncementsMappedListType = {\n    preloader?: JSX.Element\n    alertErrorFetching?: JSX.Element\n    alertEmptyResponse?: JSX.Element\n    isErrorFetching?: boolean\n    isEmptyResponse?: boolean\n    isFetching?: boolean\n    children: any\n}\n\nconst WithBadFetchingCasesWrapper = (props: AnnouncementsMappedListType) => {\n\n    const isFetchingRedux = useSelector(getIsFetchingMainStateSelector)\n    const isEmptyResponseRedux = useSelector(getIsEmptyResponseMainStateSelector)\n    const isErrorFetchingRedux = useSelector(getIsErrorFetchMainStateSelector)\n\n    const {\n        preloader = <Preloader/>,\n        alertEmptyResponse = <AlertEmptyResponse/>,\n        alertErrorFetching = <AlertErrorFetching/>,\n        isErrorFetching = isErrorFetchingRedux,\n        isFetching = isFetchingRedux,\n        isEmptyResponse = isEmptyResponseRedux,\n        children = null\n    } = props\n\n  return (\n      isFetching ?\n          <>{children}{preloader}</> :\n          isErrorFetching ?\n              alertErrorFetching :\n              isEmptyResponse ?\n                  alertEmptyResponse :\n                  children\n  )\n}\n\nexport default WithBadFetchingCasesWrapper;\n","import React, {useCallback} from 'react';\nimport Button from \"../button/button\";\nimport {GET_PATH_SEARCH} from \"../../app/App\";\nimport { NavLink } from 'react-router-dom';\nimport {useDispatch} from \"react-redux\";\nimport {setSearchConfigCategoryAC} from \"../../redux/reducers/searchBoxState/searchBoxStateActionCreators\";\n\ntype navCategoryButtonPropsType = {\n    category: string\n    activeClassName?: string\n    configCategory: any\n    children: any\n    key?: any\n    className?: string\n}\n\nconst CategoryNavigationButton = (props: navCategoryButtonPropsType) => {\n\n    //-----MAP-DISPATCH-TO-PROPS----//\n    const dispatch = useDispatch()\n    const setSearchConfigCategory = useCallback((category) => dispatch(setSearchConfigCategoryAC(category)), [dispatch])\n\n    const {activeClassName = \"active\", key, category, configCategory, className, children} = props\n\n    return <NavLink className={className} key={key} onClick={() => setSearchConfigCategory(configCategory)} to={GET_PATH_SEARCH(category)} activeClassName={activeClassName}>\n        {children}\n    </NavLink>\n\n}\n\nexport default CategoryNavigationButton;\n","import React from 'react';\nimport {useSelector} from \"react-redux\";\nimport {getCategoriesDataSelector} from \"../../redux/reducers/mainState/mainStateSelectors\";\nimport CategoryNavigationButton from \"../categoryNavButton/categoryNavigationButton\";\n\nconst CategoryNavigation: React.FC<any> = (props) => {\n\n  //------MAP-STATE-TO-PROPS-----//\n  const categoriesData = useSelector( (state) => getCategoriesDataSelector(state))\n\n  return (\n      <div className=\"col-lg-2 desktop col-md-3 col-sm-12 p-0 categoryNavigation\">\n          {categoriesData.map( (categoryData: any) => {\n              const {id, name, category, subCategories = []} = categoryData\n              return <>\n                  <CategoryNavigationButton key={id} category={category} activeClassName={\"text-warning\"} configCategory={categoryData}>\n                      <h5>{name}</h5>\n                  </CategoryNavigationButton>\n                  {subCategories.map( (subCategoryData: any) => {\n                      const {id, name, category} = subCategoryData\n                      return <CategoryNavigationButton key={id} activeClassName={\"text-warning\"} category={category} configCategory={subCategoryData}>\n                          <h6>- {name}</h6>\n                      </CategoryNavigationButton> } )}\n              </> } )}\n          <hr className={\"my-4\"}/>\n      </div>\n  )\n}\n\nexport default CategoryNavigation;","import React, {useCallback, useEffect} from 'react';\nimport \"./feedPageStyles.css\"\nimport SearchBox from \"../../components/searchBox/searchBox\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {getLastAnnouncementsThunk} from \"../../redux/thunks/thunks\";\nimport {getLastAnnouncementsSelector} from \"../../redux/reducers/feedState/feedStateSelectors\";\nimport Announcement from \"../../components/announcement/announcement\";\nimport ButtonUp from \"../../components/buttonUp/buttonUp\";\nimport Button from \"../../components/button/button\";\nimport WithBadFetchingCasesWrapper from \"../../components/withBadFetchingCasesWrapper/withBadFetchingCasesWrapper\";\nimport CategoryNavigation from \"../../components/categoryNavigation/categoryNavigation\";\nimport CategoryNavigationButton from \"../../components/categoryNavButton/categoryNavigationButton\";\nimport {initialStateCategory} from \"../../redux/reducers/mainState/mainState\";\n\n\nconst FeedPage = (props: any) => {\n\n    //------MAP-STATE-TO-PROPS-----//\n    const lastAnnouncements = useSelector(getLastAnnouncementsSelector)\n\n    //-----MAP-DISPATCH-TO-PROPS----//\n    const dispatch = useDispatch()\n    const getLastAnnouncements = useCallback((page, withConcat = false) => dispatch(getLastAnnouncementsThunk(page, withConcat)), [dispatch])\n\n    //----COMPONENT-DID-MOUNT-LIFECYCLE----//\n    useEffect(() => {\n        getLastAnnouncements(0)\n        getLastAnnouncements(1, true)\n    }, [])\n\n    return (\n        <>\n            <SearchBox className={\"mt-4\"} placeHolder={\"Поиск по объявлениям\"}/>\n            <div className=\"container-fluid d-lg-flex\">\n                <CategoryNavigation/>\n                <div className=\"col-lg-8\">\n\n                    <div className=\"mb-5\">\n                        <h2 className=\"jumbotron p-2 pl-0\">Последние объявления</h2>\n                        <WithBadFetchingCasesWrapper>\n                            {lastAnnouncements.map((lastAnnouncement: any) =>\n                                <Announcement className={\"horizontalCard\"} {...lastAnnouncement}/>)}\n                        </WithBadFetchingCasesWrapper>\n                        <CategoryNavigationButton category={\"all\"} configCategory={initialStateCategory}>\n                            <Button className={\"btn-success col-md-12 mt-4\"} label={\"Посмотерть все объявления\"}/>\n                        </CategoryNavigationButton>\n                    </div>\n                    <hr className=\"my-4\"/>\n                    <div className=\"jumbotron p-4 \">\n                        <h1 className=\"display-5\">О проекте</h1>\n                        <hr className=\"my-4\"/>\n                        <p className=\"lead\">\n                            Salam.ru – веб-приложение, выполняющее функцию доски объявлений, на которой, есть\n                            возможность разместить объявления, либо найти себе жильё или работу.<br/>\n                            Этот проект создан для помощи братским народам, проживающим на территории города Москвы/МО,\n                            в поиске жилья и работы.\n                        </p>\n                    </div>\n                </div>\n                <ButtonUp/>\n            </div>\n        </>\n    );\n}\n\nexport default FeedPage;\n","import React from 'react';\r\nimport \"./textInputStyles.css\"\r\n\r\ntype propsTypes = {\r\n  placeholder?:string\r\n  inputType?: string\r\n  value: string\r\n  key?: number | string\r\n  onBlurHandler: Function\r\n  onChangeHandler: Function\r\n  isValid?: boolean\r\n  className?: string\r\n  label?: string\r\n}\r\n\r\nconst TextInput = (props: propsTypes) => {\r\n\r\n  const {\r\n    className,\r\n    placeholder,\r\n    value, key,\r\n    onBlurHandler,\r\n    onChangeHandler,\r\n    inputType = \"text\",\r\n    label = \"\",\r\n    isValid = true} = props\r\n\r\n  return (\r\n        <div className={`textInput ${!isValid ? \"textInput__alert\" : null} ${className}`}>\r\n          <label>{label}</label>\r\n          {inputType === \"textArea\" ?\r\n              <textarea style={{resize: \"none\"}} rows={6} className={\"form-control\"} onChange={(event) => onChangeHandler(event)} placeholder={placeholder}\r\n                        onBlur={(event) => onBlurHandler(event)} value={value}/> :\r\n              <input className={\"form-control\"} key={key} onBlur={(event) => onBlurHandler(event)} value={value} type={inputType} placeholder={placeholder}\r\n                     onChange={(event) => onChangeHandler(event)} />}\r\n        </div>\r\n  );\r\n}\r\n\r\nexport default TextInput;\r\n","\r\nexport const getSettingsFieldValueByFieldSelector = (state: any, field: string) => state.settingsState[field]()","import React, {ReactElement, Ref, useEffect, useRef, useState} from 'react';\nimport \"./modalWindowStyles.css\"\nimport useOutsideClick from '../../hooks/useOutsideClick';\n\ntype propsTypes = {\n    alertCloseHandler?: Function\n    isActiveFromProps?: boolean\n    children?: any\n    withOpenBtn?: boolean\n    modal: ReactElement\n}\n\nconst ModalWindow = (props: propsTypes) => {\n\n    const {isActiveFromProps, modal, withOpenBtn = false, children, alertCloseHandler = () => null} = props\n    const ref: Ref<any> = useRef(null)\n\n    const [isActive, setIsActive] = useState(false)\n\n    useEffect(() => {\n      isActiveFromProps && setIsActive(true)\n    }, [isActiveFromProps])\n\n    const outsideClickHandler = () => {\n      isActive && closeModalWindow()\n    }\n    const closeModalWindow = (withAlertClose = true) => {\n        setIsActive(false)\n        withAlertClose && alertCloseHandler()\n    }\n\n    useOutsideClick(ref, outsideClickHandler)\n\n    return (\n\n        <>\n            <div className={`modalWindow ${isActive && \"modalWindow__active\"} `}>\n                <div ref={ref} className=\"p-lg-5 p-4 bg-light position-relative\">\n                    {React.cloneElement(modal, {closeModalWindow})}\n                    <span onClick={() => closeModalWindow()} className={\"popup__close\"}>&times;</span>\n                </div>\n            </div>\n            { withOpenBtn && children(() => setIsActive(true)) }\n        </>\n    );\n}\n\nexport default ModalWindow;\n","import React from 'react';\nimport \"./alertPopupBoxStyles.css\"\nimport Button from \"../../button/button\";\n\nexport type AlertPopupBoxType = {\n    closeModalWindow?: (boolean:boolean | any) => void\n    btnOneConfiguration : {\n        btnOneClassName? : string\n        btnOneLabel : string\n    }\n    btnTwoConfiguration : {\n        btnTwoHandler?: Function\n        btnTwoLabel : string\n        btnTwoClassName? : string\n    }\n    className?:string\n    alertText: string\n}\n\nconst AlertPopupBox = (props: AlertPopupBoxType) => {\n\n    const {\n        closeModalWindow = () => null,\n        alertText,\n        btnOneConfiguration : {btnOneLabel},\n        btnTwoConfiguration : {btnTwoHandler = () => null, btnTwoLabel}\n    } = props\n\n    const onClickBtnTwoHandler = () => {\n        btnTwoHandler()\n        closeModalWindow(false)\n    }\n\n    return (\n        <div className=\"alertPopupBox\">\n            <h3 className={\"alertPopupBox__title\"}>{alertText}</h3>\n            <hr className={\"my-4\"}/>\n            <div className=\"d-lg-flex justify-content-between\">\n                <Button className={\"btn-success col-lg-5\"} onClickHandler={closeModalWindow} label={btnOneLabel}/>\n                <Button className={\"btn-danger my-4 my-lg-0 col-lg-5\"} onClickHandler={onClickBtnTwoHandler} label={btnTwoLabel}/>\n            </div>\n        </div>\n    );\n}\n\nexport default AlertPopupBox;\n","import React from 'react';\nimport ModalWindow from \"../modalWindow\";\nimport AlertPopupBox from \"./alertPopupBox\";\n\nexport type AlertModalType = {\n  btnOneConfiguration : {\n    btnOneHandler?: Function\n    btnOneClassName? : string\n    btnOneLabel : string\n  }\n  btnTwoConfiguration : {\n    btnTwoHandler?: Function\n    btnTwoLabel : string\n    btnTwoClassName? : string\n  }\n  className?:string\n  alertText: string\n  openBtnElement?: any\n  isActiveFromProps?: boolean\n}\n\nconst AlertModalWindow = (props: AlertModalType) => {\n  const {openBtnElement, btnOneConfiguration: {btnOneHandler}, isActiveFromProps} = props\n  return (\n      <ModalWindow isActiveFromProps={isActiveFromProps} alertCloseHandler={btnOneHandler} withOpenBtn={true} modal={<AlertPopupBox {...props}/>}>{ (openModalWindow:any) =>\n          openBtnElement && React.cloneElement(openBtnElement, {onClickHandler: openModalWindow})\n      }</ModalWindow>\n  );\n}\n\nexport default AlertModalWindow;\n","import { FormReducerFieldsType, FormReducerPagesType } from \"./formState\"\r\n\r\nexport const getFieldsByPageFormReducerSelector = (state: any, page: FormReducerPagesType) => state.formState[page]\r\n// export const getIsValidByFieldFormReducerSelector = (state: any, field: FormReducerFieldsType) => state.formState[field].isValid\r\n","\r\nexport const getIsRegistrationSelector = (state: any) => state.authorizationState.isRegistration\r\nexport const getIsAuthSelector = (state: any) => state.authorizationState.isAuth()\r\nexport const getIsExistUserSelector = (state: any) => state.authorizationState.isExistUser\r\nexport const getIsCorrectAuthDataSelector = (state: any) => state.authorizationState.isCorrectAuthData","import React from 'react';\nimport {useSelector} from \"react-redux\";\nimport {getIsAuthSelector} from \"../redux/reducers/authorizationState/authorizationStateSelectors\";\nimport {Redirect} from 'react-router-dom';\nimport {PATH_FEED} from \"../app/App\";\n\nconst withAuthRedirectHoc = (Component: any) => {\n    return (props: any) => {\n        const isAuth = useSelector(getIsAuthSelector)\n        return !isAuth ? <Redirect to={PATH_FEED}/> : <Component {...props}/>\n    }\n}\n\nexport default withAuthRedirectHoc;\n","import React from 'react';\nimport \"./imagePickerStyles.css\"\n\ntype ImagePickerPropsType = {\n    onLoadHandler: Function\n    className?: string\n    styles?: any\n}\n\nconst ImagePicker = (props: ImagePickerPropsType) => {\n\n    const {onLoadHandler, className, styles=null} = props\n\n    const onChangeFileHandler = (event: any) => {\n        const file = event.target.files[0]\n        const {name = `uploadUserImg${Date.now()}`} = file || {}\n        const reader = new FileReader();\n\n        reader.onload = () => {\n            const {result} = reader\n            onLoadHandler(result, name)\n        }\n\n        file && reader.readAsDataURL(file)\n    }\n\n  return <div style={styles} className={`h-100 w-100 ${className}`}>\n      <input onChange={onChangeFileHandler} type=\"file\" className={`imagePicker`}/>\n      <div className=\"h-100 w-100 d-flex justify-content-center align-items-center border border-dark alert-dark\">\n         <h2 className={\"display-4\"}>+</h2>\n      </div>\n  </div>\n}\n\nexport default ImagePicker;\n","import React, {ChangeEvent, useCallback, useEffect} from 'react';\nimport \"./settingsPageStyles.css\"\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {postLogoutOrDeleteUser, postSettingByFieldThunk} from \"../../redux/thunks/thunks\";\nimport {SettingsFieldType} from '../../redux/reducers/settingsState/settingsState';\nimport TextInput from \"../../components/textInput/textInput\";\nimport Button from \"../../components/button/button\";\nimport Image from \"../../components/picture/picture\";\nimport {getSettingsFieldValueByFieldSelector} from '../../redux/reducers/settingsState/settingsStateSelectors';\nimport AlertModalWindow from \"../../components/modalWindow/alertModalWindow/alertModalWindow\";\nimport {setIsValidFormReducerAC, seValueFormReducerAC} from \"../../redux/reducers/formState/formStateActionCreators\";\nimport {getFieldsByPageFormReducerSelector} from \"../../redux/reducers/formState/formStateSelectors\";\nimport withAuthRedirectHoc from '../../hocs/withAuthRedirectHoc';\nimport ImagePicker from \"../../components/imagePicker/imagePicker\";\n\nconst SettingsPage = (props: any) => {\n\n    //------MAP-STATE-TO-PROPS-----//\n    const formState = useSelector((state) => getFieldsByPageFormReducerSelector(state, \"settings\"))\n    const {photo, name, phone, login,} = formState\n\n    const settingsState = useSelector((state) => ({\n        photo: getSettingsFieldValueByFieldSelector(state, \"photo\"),\n        name: getSettingsFieldValueByFieldSelector(state, \"name\"),\n        phone: getSettingsFieldValueByFieldSelector(state, \"phone\"),\n        login: getSettingsFieldValueByFieldSelector(state, \"login\")\n    }))\n    const settingsStateEntries = Object.entries(settingsState)\n\n    //-----MAP-DISPATCH-TO-PROPS----//\n    const dispatch = useDispatch()\n    const postSettingByField = useCallback((data, field) => dispatch(postSettingByFieldThunk(data, field)), [dispatch])\n    const logoutUser = useCallback(() => dispatch(postLogoutOrDeleteUser(\"logout\")), [dispatch])\n    const deleteUser = useCallback(() => dispatch(postLogoutOrDeleteUser(\"delete\")), [dispatch])\n    const seValueFormReducer = useCallback((value, field) => dispatch(seValueFormReducerAC(value, field, \"settings\")), [dispatch])\n    const setIsValidFormReducer = useCallback((field) => dispatch(setIsValidFormReducerAC(field, \"settings\")), [dispatch])\n\n    //------DID-MOUNT-LIFE-CYCLE-----//\n    useEffect(() => {\n        settingsStateEntries.forEach(([key, value]) => seValueFormReducer(value, key))\n    }, [])\n\n    const onLoadImageHandler = (image: any, imageName: string) => {\n        const postData = {photo: image, name: imageName}\n        seValueFormReducer(image, \"photo\")\n        postSettingByField(postData, \"photo\")\n    }\n\n    //Функция - обработчик события изменеия в инпуте. Проверка на валидность значения в инпуте.\n    const onChangeHandler = (event: React.ChangeEvent<HTMLInputElement>, field: SettingsFieldType) => {\n        console.log(\"onChangeHandler\", field)\n        const {currentTarget: {value}} = event\n        seValueFormReducer(value, field)\n    }\n\n    //Функция - обработчик события клик по кнопке отправить или зарегестрироваться\n    const onClickHandler = (field: SettingsFieldType) => {\n        // @ts-ignore\n        const {isValid, value} = formState[field]\n        // @ts-ignore\n        const valueFromSettingsState = settingsState[field]\n        console.log(\"onClickHandler\", isValid)\n        const postData = {[field]: value}\n        isValid && value !== valueFromSettingsState && postSettingByField(postData, field)\n    }\n\n    //TODO Вынести конфиги для всех инпутов в formState!!\n    //Функция возращает массив с конфигурацией для полей ввода\n    const getInputsConfig = () => {\n        return [\n            {\n                field: \"name\",\n                label: \"Имя\",\n                inputType: \"text\",\n                value: name.value,\n                isValid: name.isValid\n            },\n            {\n                field: \"login\",\n                label: \"Логин\",\n                inputType: \"text\",\n                value: login.value,\n                isValid: login.isValid\n            },\n            {\n                field: \"phone\",\n                label: \"Номер телефона\",\n                inputType: \"tel\",\n                value: phone.value,\n                isValid: phone.isValid\n            },\n        ]\n    }\n\n    return (\n        <div className=\"container-lg pb-5 pt-5\">\n            <h2 className=\"display-5 jumbotron p-2 mb-5\">Настройки профиля</h2>\n            <div className=\"d-lg-flex justify-content-around\">\n                <div className=\"settingsPage__settings-wrapper\">\n\n                    <div className=\"settingsPage__setting-avatar w-100\">\n                        <Image photo={photo.value}/>\n                        <ImagePicker className={\"position-absolute fixed-top opacity-0\"}\n                                     onLoadHandler={onLoadImageHandler}/>\n                    </div>\n\n                    <div className=\"settingsPage__logouOrDel-wrapper\">\n                        <AlertModalWindow\n                            openBtnElement={<Button className={\"btn-warning w-100 mb-4\"} label={\"Выйти из аккаунта\"}/>}\n                            btnOneConfiguration={{btnOneLabel: \"Нет\"}}\n                            btnTwoConfiguration={{btnTwoLabel: \"Да\", btnTwoHandler: logoutUser}}\n                            alertText={\"Выйти из аккаунта?\"}/>\n\n                        <AlertModalWindow\n                            openBtnElement={<Button className={\"btn-danger w-100\"} label={\"Удалить аккаунт\"}/>}\n                            btnOneConfiguration={{btnOneLabel: \"Нет\"}}\n                            btnTwoConfiguration={{btnTwoLabel: \"Да\", btnTwoHandler: deleteUser}}\n                            alertText={\"Удалить аккаунт?\"}/>\n                    </div>\n\n                </div>\n                <div className=\"settingsPage__settings-wrapper p-0 mt-5 col-lg-5\">\n                    {getInputsConfig().map(({field, ...restConfig}) => <>\n                        <div className=\"settingsPage__setting d-flex input-group my-2\">\n                            <TextInput key={field} {...restConfig}\n                                       onBlurHandler={() => setIsValidFormReducer(field)}\n                                       onChangeHandler={(event: ChangeEvent<HTMLInputElement>) => onChangeHandler(event, field)}/>\n                            <Button className={\"input-group-append btn-success ml-4 align-self-end\"}\n                                    onClickHandler={() => onClickHandler(field)} label={\"Сохранить\"}/>\n                        </div>\n                        <hr className=\"my-4\"/>\n                    </>)}\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default withAuthRedirectHoc(SettingsPage);\n","export const getAnnouncementSelector = (state: any) => state.announcementState.announcement\r\nexport const getIsFetchingAnnouncementReducerSelector = (state: any) => state.announcementState.isFetching\r\n"," import * as React from \"react\"\r\nimport \"./sliderStyle.css\"\r\nimport {useState} from \"react\";\r\n\r\n\r\ntype NextOrPrevArgType = \"next\" | \"prev\" | string\r\ntype SliderPropsTypes = {\r\n    children : any\r\n    className?: string\r\n}\r\n\r\nfunction Slider(props: SliderPropsTypes) {\r\n\r\n    const {children, className} = props\r\n\r\n    //-------------LOCAL-STATE--------------//\r\n    const [currentSlide, setCurrentSlide] = useState(0)\r\n\r\n    const isLastSlide = () => currentSlide === children[\"length\"] - 1\r\n    const isFirstSlide = () => currentSlide === 0\r\n    const isNeedBtn = (nextOrPrev:string) => {\r\n        if(!children.length) return false\r\n        if(nextOrPrev === \"next\" && !isLastSlide()) return true\r\n        if(nextOrPrev === \"prev\" && !isFirstSlide()) return true\r\n    }\r\n\r\n    const changeSlide: any = (nextOrPrev: NextOrPrevArgType) => {\r\n        console.log(\"changeSlide\", nextOrPrev)\r\n        if(nextOrPrev === \"next\") setCurrentSlide(currentSlide + 1)\r\n        if(nextOrPrev === \"prev\") setCurrentSlide(currentSlide - 1)\r\n    }\r\n\r\n    const transformStyle = {\r\n        transform: `translateX( ${currentSlide * -100}% )`\r\n    }\r\n\r\n    return (\r\n        <div className={`slider ${className}`}>\r\n                {React.Children.map(children, child =>\r\n                    <div style={transformStyle} className={`slider__page`}>\r\n                        { React.cloneElement(child) }\r\n                    </div>)}\r\n            {[\"prev\", \"next\"].map( (el:any) => isNeedBtn(el) ?\r\n                <div onClick={() => changeSlide(el)} className={`carousel-control carousel-control-${el}`}>\r\n                    <span className={`carousel-control-${el}-icon`}/>\r\n                </div> : null)}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default React.forwardRef(Slider)","import React, {useCallback, useEffect} from 'react';\nimport \"./announcementPageStyles.css\"\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {getAnnouncementByIdThunk} from \"../../redux/thunks/thunks\";\nimport {useHistory, useParams} from 'react-router-dom';\nimport {\n    getAnnouncementSelector,\n    getIsFetchingAnnouncementReducerSelector\n} from '../../redux/reducers/announcementState/announcementStateSelectors';\nimport Button from \"../../components/button/button\";\nimport Slider from \"../../components/slider/slider\";\nimport Image from \"../../components/picture/picture\";\n\nconst AnnouncementPage = (props: any) => {\n\n    //------MAP-STATE-TO-PROPS-----//\n    const isFetching = useSelector(getIsFetchingAnnouncementReducerSelector)\n    const {\n        photos = [],\n        name = \"\",\n        price = 0,\n        description = \"\",\n        station = \"\",\n        contactName = \"\",\n        contactPhone = \"\",\n        creationDate = \"\"\n    } = useSelector(getAnnouncementSelector)\n\n    //-----MAP-DISPATCH-TO-PROPS----//\n    const dispatch = useDispatch()\n    const getAnnouncementById = useCallback(() => dispatch(getAnnouncementByIdThunk(category, id)), [dispatch])\n\n    //------CATCH-PARAMS-FROM-URL-----//\n    const {category, id} = useParams()\n\n    const {goBack} = useHistory()\n\n    //----COMPONENT-DID-MOUNT-LIFECYCLE----//\n    useEffect(() => {\n        getAnnouncementById()\n    }, [])\n\n    return (\n        <div className=\"announcementPage__container container-lg pt-5 pb-5\">\n            <div className=\"d-flex flex-column flex-md-row justify-content-md-between\">\n                <Button className={\"btn-primary order-md-1\"} onClickHandler={goBack} label={\"Назад\"}/>\n                <hr className=\"my-4 mobile\"/>\n                <h2 className=\"announcementPage__name text-left m-0\">{name}</h2>\n            </div>\n\n            <hr className=\"my-4\"/>\n            <div className=\"announcementPage__photoAndInfo-wrapper d-block d-lg-flex mb-5\">\n\n                <div className=\"announcementPage__photo-slider\">\n                    <Slider>\n                        {photos.map((photo: string) => <Image photo={photo}/>)}\n                    </Slider>\n                </div>\n\n                <div className=\"announcementPage__info-wrapper mt-5 ml-lg-5 col-sm-12 col-lg-5 p-0\">\n                    <h3 className=\"announcementPage__info-price bg-warning p-2 m-0 text-left\">{`Цена: ${price} руб.`}</h3>\n                    <hr className=\"my-lg-4 my-3\"/>\n                    <h5 className=\"announcementPage__info-location text-left alert alert-warning\">{`Метро: ${station}`}</h5>\n                    <hr className=\"my-lg-4 my-3\"/>\n                    <div className=\"announcementPage__info-inner-wrapper alert alert-success\">\n                        <h5 className=\"announcementPage__info-name text-left\">Продавец: {contactName}</h5>\n                        <h5 className=\"announcementPage__info-name text-left\">Телефон: {contactPhone}</h5>\n                    </div>\n                    <hr className=\"my-lg-4 my-3\"/>\n                    <h5 className=\"announcementPage__creationDate alert alert-dark\">Дата создания\n                        объявления: {creationDate}</h5>\n                </div>\n            </div>\n            <div className=\"announcementPage__description alert alert-primary\">\n                <h5 className={\"text-left\"}>Описание:</h5>\n                <p>{description}</p>\n            </div>\n        </div>\n    );\n}\n\nexport default AnnouncementPage;\n","export const getMyAnnouncementsSelector = (state: any) => state.myAnnouncementsState.myAnnouncements\r\nexport const getIsFetchingMyAnnouncementsReducerSelector = (state: any) => state.myAnnouncementsState.isFetching\r\nexport const getCurrentPageMyAnnouncementsReducerSelector = (state: any) => state.myAnnouncementsState.currentPage\r\nexport const getTotalNumOfPagesMyAnnouncementsReducerSelector = (state: any) => state.myAnnouncementsState.totalNumOfPages\r\n","import React, {useEffect} from 'react';\n\nconst useInfinityScroll = (handler: Function) => {\n\n    const scrollHandler = (event: any) => {\n\n        const currentHeight = Math.ceil(window.innerHeight + window.scrollY)\n        const allHeight = Math.max(\n            document.body.scrollHeight, document.documentElement.scrollHeight,\n            document.body.offsetHeight, document.documentElement.offsetHeight,\n            document.body.clientHeight, document.documentElement.clientHeight\n        )\n\n        if(currentHeight >= allHeight) {\n            handler(event)\n        }\n    }\n\n  useEffect(() => {\n        document.addEventListener('scroll', scrollHandler)\n        return () => document.removeEventListener('scroll', scrollHandler)\n      }, [handler]\n  );\n}\n\nexport default useInfinityScroll;\n","import React, {useCallback, useEffect} from 'react';\nimport \"./myAnnouncementsPageStyles.css\"\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {\n    getCurrentPageMyAnnouncementsReducerSelector,\n    getIsFetchingMyAnnouncementsReducerSelector,\n    getMyAnnouncementsSelector,\n    getTotalNumOfPagesMyAnnouncementsReducerSelector\n} from '../../redux/reducers/myAnnouncementState/myAnnouncementStateSelectors';\nimport {getMyAnnouncementsThunk, postDeleteAnnouncementThunk} from \"../../redux/thunks/thunks\";\nimport Announcement from \"../../components/announcement/announcement\";\nimport useInfinityScroll from \"../../hooks/useInfinityScroll\";\nimport {setCurrentPageMyAnnouncementReducerAC} from \"../../redux/reducers/myAnnouncementState/myAnnouncementStateActionCreators\";\nimport Button from \"../../components/button/button\";\nimport withAuthRedirectHoc from \"../../hocs/withAuthRedirectHoc\";\nimport ButtonUp from \"../../components/buttonUp/buttonUp\";\nimport WithBadFetchingCasesWrapper from \"../../components/withBadFetchingCasesWrapper/withBadFetchingCasesWrapper\";\nimport AlertModalWindow from \"../../components/modalWindow/alertModalWindow/alertModalWindow\";\n\nconst MyAnnouncementsPage = (props: any) => {\n\n    //------MAP-STATE-TO-PROPS-----//\n    const myAnnouncements = useSelector(getMyAnnouncementsSelector)\n    const isFetching = useSelector(getIsFetchingMyAnnouncementsReducerSelector)\n    const currentPage = useSelector(getCurrentPageMyAnnouncementsReducerSelector)\n    const totalNumOfPages = useSelector(getTotalNumOfPagesMyAnnouncementsReducerSelector)\n\n    //-----MAP-DISPATCH-TO-PROPS----//\n    const dispatch = useDispatch()\n    const getMyAnnouncements = useCallback((withConcat = false) => dispatch(getMyAnnouncementsThunk(withConcat)), [dispatch])\n    const setCurrentPage = useCallback(() => dispatch(setCurrentPageMyAnnouncementReducerAC()), [dispatch])\n    const postDeleteAnnouncement = useCallback((id) => dispatch(postDeleteAnnouncementThunk(id)), [dispatch])\n\n    //----COMPONENT-DID-MOUNT-LIFECYCLE----//\n    useEffect(() => {\n        getMyAnnouncements()\n    }, [])\n\n    //------INFINITY-SCROLL------//\n    const infinityScrollHandler = (event: any) => {\n        if (currentPage !== totalNumOfPages) {\n            setCurrentPage()\n            getMyAnnouncements(true)\n        }\n    }\n    useInfinityScroll(infinityScrollHandler)\n\n\n    const onClickBtnUpHandler = () => window.scrollTo(0, 0)\n\n    return (\n        <div className=\"myAnnouncements__container container-lg pt-5 pb-5\">\n            <h2 className=\"display-5 jumbotron p-2\">Мои объявления</h2>\n            <WithBadFetchingCasesWrapper>\n                {myAnnouncements.map(({id, ...restMyAnnouncement}: any) =>\n                    <div key={id} className=\"d-flex mb-3\">\n                        <Announcement className={\"horizontalCard\"} id={id} {...restMyAnnouncement}/>\n                        <AlertModalWindow openBtnElement={<Button\n                            className={\"btn-danger align-self-stretch mb-3 align-items-center d-flex\"}\n                            isDisabled={isFetching} label={\"Удалить объявление\"}/>}\n                                          btnOneConfiguration={{btnOneLabel: \"Нет\"}}\n                                          btnTwoConfiguration={{\n                                              btnTwoLabel: \"Да\",\n                                              btnTwoHandler: () => postDeleteAnnouncement(id)\n                                          }}\n                                          alertText={\"Удалить объявление?\"}/>\n                    </div>)}\n            </WithBadFetchingCasesWrapper>\n            {currentPage !== totalNumOfPages &&\n            <Button className={\"btn-success w-100 my-4 mobile\"} onClickHandler={infinityScrollHandler}\n                    label={\"Загрузить еще объявления\"}/>}\n            <ButtonUp/>\n        </div>\n    );\n}\n\nexport default withAuthRedirectHoc(MyAnnouncementsPage);\n","import React, {ChangeEvent, useCallback, useEffect} from 'react';\nimport \"./createAnnouncementStyles.css\"\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {postNewAnnouncementThunk} from \"../../redux/thunks/thunks\";\nimport TextInput from \"../../components/textInput/textInput\";\nimport Select from \"../../components/searchBox/select/select\";\nimport Button from \"../../components/button/button\";\nimport Image from \"../../components/picture/picture\";\nimport {\n    getCategoriesDataSelector,\n    getIsFetchingMainStateSelector,\n    getSubwayStationsDataSelector,\n    getTheSubCategoriesSelector\n} from \"../../redux/reducers/mainState/mainStateSelectors\";\nimport {\n    checkIsReadyToSendByPageFormReducerAC,\n    resetToInitialByPageFormReducerAC,\n    setIsValidFormReducerAC,\n    seValueFormReducerAC\n} from \"../../redux/reducers/formState/formStateActionCreators\";\nimport {getFieldsByPageFormReducerSelector} from \"../../redux/reducers/formState/formStateSelectors\";\nimport {prepareFormStateByPageForSend} from \"../../redux/reducers/formState/formState\";\nimport {getSettingsFieldValueByFieldSelector} from \"../../redux/reducers/settingsState/settingsStateSelectors\";\nimport withAuthRedirectHoc from \"../../hocs/withAuthRedirectHoc\";\nimport ImagePicker from \"../../components/imagePicker/imagePicker\";\nimport AlertModalWindow from \"../../components/modalWindow/alertModalWindow/alertModalWindow\";\n\ntype CreateAnnouncementFieldsType =\n    \"photos\"\n    | \"name\"\n    | \"price\"\n    | \"category\"\n    | \"description\"\n    | \"subway\"\n    | \"phone\"\n    | string\n\nconst CreateAnnouncement = (props: any) => {\n\n    //------MAP-STATE-TO-PROPS-----//\n    const subwayStationsData = useSelector(getSubwayStationsDataSelector)\n    const [defaultCategory, ...categoriesData] = useSelector( (state) =>\n        getTheSubCategoriesSelector(getCategoriesDataSelector(state), \"active\"))\n    const phoneRedux = useSelector( (state) => getSettingsFieldValueByFieldSelector(state, \"phone\"))\n    const formState = useSelector((state) => getFieldsByPageFormReducerSelector(state, \"createAnnouncement\"))\n    const {\n        photoList, name,\n        price, categoryId,\n        description,\n        sellerPhone, stationId,\n        isReadyToSend\n    } = formState\n    const isFetching = useSelector(getIsFetchingMainStateSelector)\n\n    //-----MAP-DISPATCH-TO-PROPS----//\n    const dispatch = useDispatch()\n    const postNewAnnouncement = useCallback((data) => dispatch(postNewAnnouncementThunk(data)), [dispatch])\n    const setValueFormReducer = useCallback((value, field) => dispatch(seValueFormReducerAC(value, field, \"createAnnouncement\")), [dispatch])\n    const setIsValidFormReducer = useCallback((field) => dispatch(setIsValidFormReducerAC(field, \"createAnnouncement\")), [dispatch])\n    const checkIsReadyToSend = useCallback(() => dispatch(checkIsReadyToSendByPageFormReducerAC(\"createAnnouncement\")), [dispatch])\n    const resetToInitialByPageFormReducer = useCallback(() => dispatch(resetToInitialByPageFormReducerAC(\"createAnnouncement\")), [dispatch])\n\n    //------DID-MOUNT-LIFE-CYCLE-----//\n    useEffect(() => {\n        setValueFormReducer(phoneRedux, \"sellerPhone\")\n        return () => {\n            resetToInitialByPageFormReducer()\n        }\n    }, [])\n\n    //------DID-UPDATE-LIFE-CYCLE-----//\n    useEffect(() => {\n        if(isReadyToSend) {\n            const condition = (postData: any, key: any, value: any) => {\n                key === \"categoryId\" || key === \"stationId\" ? postData[key] = value.id : postData[key] = value\n                return postData\n            }\n            const postData = prepareFormStateByPageForSend(formState)(condition)\n            postNewAnnouncement(postData)\n        }\n    }, [isReadyToSend])\n\n    const selectItemOnChangeHandler = (field: \"categoryId\" | \"stationId\", selectItem: any, setIsActiveSelect: Function) => {\n        if(\"className\" in selectItem) return false\n        setValueFormReducer(selectItem, field)\n        setIsActiveSelect(false)\n    }\n\n    const onLoadImageHandler = (image: any, imageName: string) => {\n        const value = photoList.value.concat({photo: image, name: imageName})\n        setValueFormReducer(value, \"photoList\")\n    }\n\n    //Функция - обработчик события изменеия в инпуте. Проверка на валидность значения в инпуте.\n    const onChangeHandler = (event: React.ChangeEvent<HTMLInputElement>, field: CreateAnnouncementFieldsType) => {\n        console.log(\"onChangeHandler\", field)\n        const {currentTarget: {value}} = event\n        setValueFormReducer(value, field)\n    }\n\n    const deleteLoadedImage = (imageName: string) => {\n        const newPhotosValue = photoList.value.filter( ({photo, name}: any) => name !== imageName)\n        setValueFormReducer(newPhotosValue, \"photoList\")\n    }\n\n    //Функция возращает массив с конфигурацией для полей ввода\n    const getInputsParamsConfig = () => {\n        return [\n            {\n                field: \"name\",\n                label: \"Имя\",\n                inputType: \"text\",\n                value: name.value,\n                isValid: name.isValid\n            },\n            {\n                field: \"price\",\n                label: \"Цена\",\n                inputType: \"number\",\n                value: price.value,\n                isValid: price.isValid\n            },\n            {\n                field: \"description\",\n                label: \"Описание\",\n                inputType: \"textArea\",\n                value: description.value,\n                isValid: description.isValid\n            },\n        ]\n    }\n\n    // const {name, subway, photos, description, phone, category, price} = state\n\n    const getErrorClassName = (field: \"categoryId\" | \"stationId\") =>\n        !formState[field].isValid && \"createAnnouncement__title-error\"\n\n    return (\n        <div className=\"createAnnouncement__container container-lg pt-5\">\n                <h1 className=\"display-5 jumbotron p-2 mb-5\">Создание объявления</h1>\n                <div className=\"createAnnouncement__category d-flex\">\n                    <h4 className={`createAnnouncement__category-title col-lg-3 text-left p-0 ${getErrorClassName(\"categoryId\")}`}>\n                        Категория\n                    </h4>\n                    <Select className={\"col-lg-4\"} onBlurHandler={() => setIsValidFormReducer(\"categoryId\")}\n                        onChangeHandlerSelectItem={(selectItem: any, handler: any) => selectItemOnChangeHandler(\"categoryId\", selectItem, handler)}\n                        value={categoryId.value.label} selectItems={categoriesData} placeHolder={\"Выбор категории\"}/>\n                </div>\n                <hr className=\"my-4\"/>\n                <div className=\"createAnnouncement__params d-block d-lg-flex\">\n                    <h4 className=\"createAnnouncement__params-title col-lg-3 text-lg-left p-0 text-center\">Параметры</h4>\n                    <div className=\"col-lg-4 p-0\">\n                        {getInputsParamsConfig().map(({field, ...restConfig}) =>\n                            <TextInput className={\"mb-3\"} key={field} {...restConfig}\n                                       onBlurHandler={() => setIsValidFormReducer(field)}\n                                       onChangeHandler={(event: ChangeEvent<HTMLInputElement>) => onChangeHandler(event, field)}/>)}\n\n                        <div className=\"createAnnouncement__params-photos position-relative\">\n                            {/*<div className=\"createAnnouncement__params-photos-label mb-3\">*/}\n                                <span className={\"createAnnouncement__params-photos-label mb-3\"}>\n                                    {`Фотографии ${photoList.value.length} из 5`}\n                                </span>\n                            {/*</div>*/}\n                            <div className=\"createAnnouncement__params-photos-files d-flex flex-wrap\">\n                                {photoList.value.map( ({photo, name}: any) =>\n                                    <Image onClickHandler={() => deleteLoadedImage(name)} className={\"createAnnouncement__params-photos-files-file col-lg-4 mr-2\"} photo={photo}/> )}\n                                {photoList.value.length < 5 &&\n                                <ImagePicker className={\"col-lg-4 p-0 my-3\"} onLoadHandler={onLoadImageHandler}/>}\n                                <span>\n                                    Чтобы удалить фото - нажмите на него\n                                </span>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <hr className=\"my-4\"/>\n                <div className=\"createAnnouncement__location d-flex\">\n                    <h4 className={`createAnnouncement__location-title col-lg-3 text-left p-0 ${getErrorClassName(\"stationId\")}`}>Место сделки</h4>\n                    <Select className={\"col-lg-4 p-0\"} onBlurHandler={() => setIsValidFormReducer(\"stationId\")}\n                        onChangeHandlerSelectItem={(selectItem: any, handler: any) => selectItemOnChangeHandler(\"stationId\", selectItem, handler)}\n                        value={stationId.value.name} selectItems={subwayStationsData} placeHolder={\"Выбор метро\"}/>\n                </div>\n                <hr className=\"my-4\"/>\n\n                <div className=\"createAnnouncement__contacts d-flex\">\n                    <h4 className=\"createAnnouncement__contacts-title col-lg-3 text-left p-0\">Контакты</h4>\n                    <TextInput className={\"col-lg-3 p-0\"} isValid={sellerPhone.isValid} value={sellerPhone.value}\n                               placeholder={\"Номер телефона\"} label={\"Телефон\"} inputType={\"number\"}\n                               onBlurHandler={() => setIsValidFormReducer(\"sellerPhone\")}\n                               onChangeHandler={(event: ChangeEvent<HTMLInputElement>) => onChangeHandler(event, \"sellerPhone\")}/>\n                </div>\n                <hr className=\"my-4\"/>\n                <div className={\"d-lg-flex justify-content-around mb-5 col-lg-7 p-0 d-block\"}>\n                    <Button className={\"btn-success col-lg-7 my-3 my-lg-0\"} label={\"Создать объявление\"} isDisabled={isFetching} onClickHandler={checkIsReadyToSend}/>\n                    <AlertModalWindow openBtnElement={<Button className={\"btn-danger col-lg-4\"} label={\"Очистить поля\"} />}\n                                      btnOneConfiguration={{btnOneLabel: \"Нет\" }}\n                                      btnTwoConfiguration={{btnTwoLabel: \"Да\", btnTwoHandler:resetToInitialByPageFormReducer }}\n                                      alertText={\"Сбросить все введённые данные?\"}/>\n                </div>\n            </div>\n    );\n}\n\nexport default withAuthRedirectHoc(CreateAnnouncement);\n","export const getAnnouncementsListSelector = (state: any) => state.announcementsListState.announcementsList\r\nexport const getCurrentPageAnnouncementsListReducerSelector = (state: any) => state.announcementsListState.currentPage\r\nexport const getTotalNumOfPagesAnnouncementsListReducerSelector = (state: any) => state.announcementsListState.totalNumOfPages\r\n","import React, {useCallback, useEffect, useState} from 'react';\nimport \"./announcementsListPageStyles.css\"\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {getAnnouncementsByFiltersThunk, getAnnouncementsListThunk} from \"../../redux/thunks/thunks\";\nimport Announcement from \"../../components/announcement/announcement\";\nimport useInfinityScroll from \"../../hooks/useInfinityScroll\";\nimport {\n    getAnnouncementsListSelector,\n    getCurrentPageAnnouncementsListReducerSelector,\n    getTotalNumOfPagesAnnouncementsListReducerSelector\n} from \"../../redux/reducers/announcementsListState/announcementsListStateSelectors\";\nimport {getIsFetchingMainStateSelector} from \"../../redux/reducers/mainState/mainStateSelectors\";\nimport {\n    resetToInitialStateAnnouncementsListReducerAC,\n    setCurrentPageAnnouncementsListReducerAC\n} from \"../../redux/reducers/announcementsListState/announcementsListStateActionCreators\";\nimport {useHistory} from 'react-router-dom';\nimport {\n    getCurrentPageSearchReducerSelector,\n    getIsFetchingSearchReducerSelector,\n    getSearchConfigCategorySelector,\n    getSearchConfigSubwayStationsSelector,\n    getSearchedDataSelector,\n    getTotalNumOfPageSearchReducerSelector\n} from \"../../redux/reducers/searchBoxState/searchBoxStateSelectors\";\nimport SearchBox from \"../../components/searchBox/searchBox\";\nimport {\n    resetToInitialStateSearchReducerAC,\n    setCurrentPageSearchReducerAC\n} from '../../redux/reducers/searchBoxState/searchBoxStateActionCreators';\nimport ButtonUp from \"../../components/buttonUp/buttonUp\";\nimport WithBadFetchingCasesWrapper from \"../../components/withBadFetchingCasesWrapper/withBadFetchingCasesWrapper\";\nimport Button from \"../../components/button/button\";\nimport CategoryNavigation from '../../components/categoryNavigation/categoryNavigation';\n\n\nconst AnnouncementsListPage = (props: any) => {\n\n    //------USE-HISTORY-----//\n    const {location: {pathname}} = useHistory()\n    const category = pathname.substr(1)\n\n    //------MAP-STATE-TO-PROPS-----//\n\n    //---SEARCHED-BOX-STATE---//\n    const {name: currentCategory} = useSelector(getSearchConfigCategorySelector)\n    const {name: currentSubway}: any = useSelector(getSearchConfigSubwayStationsSelector)\n\n    const searchedData = useSelector(getSearchedDataSelector)\n    const isFetchingSearchState = useSelector(getIsFetchingSearchReducerSelector)\n    const currentPageSearch = useSelector(getCurrentPageSearchReducerSelector)\n    const totalNumOfPageSearch = useSelector(getTotalNumOfPageSearchReducerSelector)\n    const isEqualsCurrAndTotalPageSearch = currentPageSearch === totalNumOfPageSearch\n    //----------------------//\n    const isSearchState = searchedData.length || isFetchingSearchState\n    //---ANNOUNCEMENTS-LIST-STATE---//\n    const announcementsList = useSelector(getAnnouncementsListSelector)\n    const currentPage = useSelector(getCurrentPageAnnouncementsListReducerSelector)\n    const totalNumOfPages = useSelector(getTotalNumOfPagesAnnouncementsListReducerSelector)\n    const isEqualsCurrAndTotalPage = currentPage === totalNumOfPages\n    //---MAIN-STATE---//\n    const isFetchingMainState = useSelector(getIsFetchingMainStateSelector)\n\n    //-----MAP-DISPATCH-TO-PROPS----//\n    const dispatch = useDispatch()\n    const getAnnouncements = useCallback((category, withConcat = false) => dispatch(getAnnouncementsListThunk(category, withConcat)), [dispatch])\n    const getAnnouncementsByFilters = useCallback(() => dispatch(getAnnouncementsByFiltersThunk(true)), [dispatch])\n    const setCurrentPage = useCallback(() => dispatch(setCurrentPageAnnouncementsListReducerAC()), [dispatch])\n    const setCurrentPageSearchBox = useCallback(() => dispatch(setCurrentPageSearchReducerAC()), [dispatch])\n    const resetToInitialStateAnnouncementsList = useCallback(() => dispatch(resetToInitialStateAnnouncementsListReducerAC()), [dispatch])\n    const resetToInitialStateSearchReducer = useCallback(() => dispatch(resetToInitialStateSearchReducerAC()), [dispatch])\n\n    //---GET-ACTIONS---//\n    const getDataAction: () => Function = () => isSearchState ? getAnnouncementsByFilters : getAnnouncements\n    const getDataState: () => Array<any> = () => isSearchState ? searchedData : announcementsList\n    const getSetCurrentPageAction: () => Function = () => isSearchState ? setCurrentPageSearchBox : setCurrentPage\n    const getIsEqualsCurrAndTotalPage: () => boolean = () => isSearchState ? isEqualsCurrAndTotalPageSearch : isEqualsCurrAndTotalPage\n\n    //---LOCAL-STATE---//\n    const [state, setState] = useState(() => ({currentCategory, currentSubway}))\n\n    //----COMPONENT-DID-MOUNT/UNMOUNT-LIFECYCLE----//\n    useEffect(() => {\n        getAnnouncements(category)\n        return () => {\n            resetToInitialStateAnnouncementsList()\n            resetToInitialStateSearchReducer()\n            console.log(\"UNMOUNT!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\")\n        }\n    }, [])\n\n    //----COMPONENT-DID-UPDATE-LIFECYCLE----//\n    useEffect(() => {\n        resetToInitialStateAnnouncementsList()\n        getAnnouncements(category)\n        setState({currentCategory, currentSubway})\n    }, [category])\n\n    //------INFINITY-SCROLL------//\n    const infinityScrollHandler = (event?: any) => {\n        if (!getIsEqualsCurrAndTotalPage()) {\n            getSetCurrentPageAction()()\n            getDataAction()(category, true)\n        }\n    }\n    useInfinityScroll(infinityScrollHandler)\n\n    return (\n        <>\n            <SearchBox className={\"mt-4\"} placeHolder={\"Поиск по объявлениям\"}/>\n            <div className=\"announcementsList__slider-container container-fluid d-lg-flex\">\n                <CategoryNavigation/>\n                <div className=\"slider-container__content col-lg-8\">\n                    <h3 className={\"alert alert-success mb-4 d-flex flex-column\"}>\n                        <span className={\"font-weight-bold\"}>Поиск по : </span>\n                        {state.currentSubway}> {state.currentCategory}\n                    </h3>\n                    <WithBadFetchingCasesWrapper isFetching={isFetchingMainState || isFetchingSearchState}>\n                        {getDataState().map(({id, ...restMyAnnouncement}: any) =>\n                            <Announcement className={\"horizontalCard\"} id={id} {...restMyAnnouncement}/>)}\n                    </WithBadFetchingCasesWrapper>\n                    <ButtonUp/>\n                </div>\n                {!getIsEqualsCurrAndTotalPage() &&\n                <Button className={\"btn-success w-100 my-4 mobile\"} onClickHandler={infinityScrollHandler}\n                        label={\"Загрузить еще объявления\"}/>}\n            </div>\n        </>\n    );\n}\n\nexport default AnnouncementsListPage;\n","import React from 'react';\n\n\nconst CooperationPage = (props: any) => {\n\n    return (\n        <div className=\"contactsPage__container container-lg pb-5 pt-5 text-center\">\n            <div className=\"jumbotron p-4\">\n                <h1 className=\"display-5\">Сотрудничество</h1>\n                <hr className=\"my-4\"/>\n                <h5 className={\"mb-3\"}>Уважаемые пользователи!</h5>\n                <p className=\"lead\">\n                    У нас на сайте вы можете разместить баннер с рекламой своей продукции или услуги.<br/>\n                    По вопросам размещения и любым коммерческим предложениям, пишите на почту – <span className={\"font-weight-bold\"}>salamkgru@yandex.ru</span>.\n                </p>\n            </div>\n        </div>\n\n    );\n}\n\nexport default CooperationPage;\n","import React from 'react';\nimport \"./logoStyles.css\"\nimport { NavLink } from 'react-router-dom';\n\nconst Logo = (props: any) => {\n    const {className} = props\n  return (\n      <NavLink className={className} to={\"/feed\"}>\n          <div className=\"logo navbar-brand mb-0 h1 d-flex\">\n              <span className={\"border rounded d-flex align-items-center p-0 pl-2 pr-2 mr-2 font-weight-bold bg-warning text-dark border-dark\"}>S</span>\n              <span className={\"font-weight-bold\"}>salam.ru</span>\n          </div>\n      </NavLink>\n\n  );\n}\n\nexport default Logo;\n","import React, {ChangeEvent, useCallback, useEffect} from 'react';\nimport \"./authorizationPopupBoxStyles.css\"\nimport TextInput from \"../../textInput/textInput\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {getIsExistUserThunk, sendAuthorizationOrRegistrationThunk} from \"../../../redux/thunks/thunks\";\nimport {\n    setIsCorrectAuthDataAC,\n    setIsRegistrationAC,\n} from \"../../../redux/reducers/authorizationState/authorizationStateActionCreators\";\nimport {\n    getIsCorrectAuthDataSelector, getIsExistUserSelector,\n    getIsRegistrationSelector\n} from \"../../../redux/reducers/authorizationState/authorizationStateSelectors\";\nimport {\n    getIsErrorFetchMainStateSelector,\n    getIsFetchingMainStateSelector\n} from \"../../../redux/reducers/mainState/mainStateSelectors\";\nimport Button from \"../../button/button\";\nimport {\n    checkIsReadyToSendByPageFormReducerAC, resetToInitialByPageFormReducerAC,\n    setIsValidFormReducerAC,\n    seValueFormReducerAC\n} from \"../../../redux/reducers/formState/formStateActionCreators\";\nimport {getFieldsByPageFormReducerSelector} from \"../../../redux/reducers/formState/formStateSelectors\";\nimport {prepareFormStateByPageForSend} from \"../../../redux/reducers/formState/formState\";\nimport AlertErrorFetching from \"../../alertErrorFetching/alertErrorFetching\";\n\n\ntype fieldTypes = \"password\" | \"login\" | \"name\" | string\n\ntype PropsType = {\n    closeModalWindow?: Function\n}\n\nconst AuthorizationPopupBox = (props: PropsType) => {\n\n    //------MAP-STATE-TO-PROPS-----//\n    const isRegistration = useSelector(getIsRegistrationSelector)\n    const isExistUser = useSelector(getIsExistUserSelector)\n    const isErrorFetchMainState = useSelector(getIsErrorFetchMainStateSelector)\n    const isCorrectAuthData = useSelector(getIsCorrectAuthDataSelector)\n    const isFetching = useSelector(getIsFetchingMainStateSelector)\n    const authFormState: any = useSelector((state) => getFieldsByPageFormReducerSelector(state, \"authorization\"))\n    const regFormState: any = useSelector((state) => getFieldsByPageFormReducerSelector(state, \"registration\"))\n    const currentFormState = (isRegistration ? regFormState : authFormState) || {}\n    const currentPage = isRegistration ? \"registration\" : \"authorization\"\n    const {isReadyToSend} = currentFormState\n\n    //-----MAP-DISPATCH-TO-PROPS----//\n    const dispatch = useDispatch()\n    const sendAuthorizationOrRegistration = useCallback((data) => dispatch(sendAuthorizationOrRegistrationThunk(data)), [dispatch])\n    const getIsExistUser = useCallback(() => dispatch(getIsExistUserThunk()), [dispatch])\n    const setIsRegistration = useCallback((boolean) => dispatch(setIsRegistrationAC(boolean)), [dispatch])\n    const seValueFormReducer = useCallback((value, field) => dispatch(seValueFormReducerAC(value, field, currentPage)), [dispatch, isRegistration])\n    const setIsCorrectAuthData = useCallback(() => dispatch(setIsCorrectAuthDataAC(true)), [dispatch])\n    const setIsValidFormReducer = useCallback((field) => dispatch(setIsValidFormReducerAC(field, currentPage)), [dispatch, isRegistration])\n    const resetToInitialByPageFormReducer = useCallback((page) => dispatch(resetToInitialByPageFormReducerAC(page)), [dispatch, isRegistration])\n    const checkIsReadyToSend = useCallback(() => dispatch(checkIsReadyToSendByPageFormReducerAC(currentPage)), [dispatch, isRegistration])\n\n    //------WILL-UNMOUNT-LIFE-CYCLE-----//\n    useEffect(() => {\n        return () => {\n            resetToInitialByPageFormReducer(\"authorization\")\n            resetToInitialByPageFormReducer(\"registration\")\n        }\n    }, [])\n\n    //------DID-UPDATE-LIFE-CYCLE-----//\n    useEffect(() => {\n        if(isReadyToSend) {\n            const postData = prepareFormStateByPageForSend(currentFormState)()\n            sendAuthorizationOrRegistration(postData)\n        }\n    }, [isReadyToSend])\n\n    //Функция - обработчик события изменеия в инпуте. Проверка на валидность значения в инпуте.\n    const onChangeHandler = (event: React.ChangeEvent<HTMLInputElement>, field: fieldTypes) => {\n        const {currentTarget: {value}} = event\n        console.log(\"onChangeHandler\", field, value)\n        seValueFormReducer(value, field)\n        !isCorrectAuthData && setIsCorrectAuthData()\n    }\n\n    //Функция возращает массив с конфигурацией для полей ввода\n    const getInputsConfig = () => {\n        const {name = {}, login = {}, password = {}, phoneNumber = {}} = currentFormState\n        return [\n            {\n                field: \"name\",\n                label: \"Имя\",\n                inputType: \"text\",\n                placeholder: \"Введите ваше имя\",\n                value: name.value,\n                isValid: name.isValid,\n                className: \"mb-4\",\n                onBlurHandler: () => setIsValidFormReducer(\"name\"),\n                onChangeHandler: (event: ChangeEvent<HTMLInputElement>) => onChangeHandler(event, \"name\")\n\n            },\n            {\n                field: \"phoneNumber\",\n                label: \"Номер телефона\",\n                inputType: \"number\",\n                placeholder: \"Введите ваш телефон\",\n                value: phoneNumber.value,\n                isValid: phoneNumber.isValid,\n                className: \"mb-4\",\n                onBlurHandler: () => setIsValidFormReducer(\"phoneNumber\"),\n                onChangeHandler: (event: ChangeEvent<HTMLInputElement>) => onChangeHandler(event, \"phoneNumber\")\n            },\n            {\n                field: \"login\",\n                label: \"Логин\",\n                inputType: \"text\",\n                placeholder: \"Введите ваш Логин\",\n                value: login.value,\n                isValid: login.isValid,\n                className: \"mb-4\",\n                onBlurHandler: () => isRegistration ? getIsExistUser() : setIsValidFormReducer(\"login\"),\n                onChangeHandler: (event: ChangeEvent<HTMLInputElement>) => onChangeHandler(event, \"login\")\n            },\n            {\n                field: \"password\",\n                label: \"Пароль\",\n                inputType: \"password\",\n                placeholder: \"Введите ваш пароль\",\n                value: password.value,\n                isValid: password.isValid,\n                className: \"mb-4\",\n                onBlurHandler: () => setIsValidFormReducer(\"password\"),\n                onChangeHandler: (event: ChangeEvent<HTMLInputElement>) => onChangeHandler(event, \"password\")\n            },\n        ]\n    }\n\n    //Функция возращает кнопку для отображения в зависимости от условия\n    const getBtnByIsExistUserForSwitch = () => {\n        return <span onClick={() => setIsRegistration(!isRegistration)} className={\"authorization-popupBox__reg-btn\"}>\n            {isRegistration ? \"Войти\" : \"Зарегестрироваться\" }\n        </span>\n    }\n\n    return (\n        <div className=\"authorization-popupBox position-relative\">\n            <h1 className={\"authorization-popupBox__title\"}>{!isRegistration ? \"Вход\" : \"Регистрация\"}</h1>\n            {isErrorFetchMainState && <AlertErrorFetching className={\"p-1 pr-0\"} alertText={\"Возникла ошибка!\"}/>}\n            {isExistUser && isRegistration && <AlertErrorFetching className={\"p-1 pr-0\"} alertText={\"Такой логин уже используется!\"}/>}\n            {!isCorrectAuthData && !isRegistration && <AlertErrorFetching className={\"p-1 pr-0\"} alertText={\"Введённые данные не верны!\"}/>}\n            <hr className={\"my-3\"}/>\n            <div className=\"authorization-popupBox__inputs-wrapper mb-2\">\n                { getInputsConfig().map( ({field, ...restInputConfig}) => {\n                    if(!isRegistration && field == \"name\") return null\n                    if(!isRegistration && field == \"phoneNumber\") return null\n                    return <TextInput {...restInputConfig} />\n                }) }\n            </div>\n            <Button onClickHandler={checkIsReadyToSend} label={!isRegistration ? \"Войти\" : \"Зарегестрироваться\"}\n                    isDisabled={isFetching} className={\"authorization-popupBox__btn btn-success\"}/>\n            {getBtnByIsExistUserForSwitch()}\n        </div>\n    );\n}\n\nexport default AuthorizationPopupBox;\n","import React from 'react';\nimport ModalWindow from \"../modalWindow\";\nimport AuthorizationPopupBox from \"./authorizationPopupBox\";\nimport Button from \"../../button/button\";\n\ntype AuthorizationModalWindowType = {\n  isActiveFromProps?: boolean\n  alertCloseHandler?:Function\n}\nconst AuthorizationModalWindow = (props: AuthorizationModalWindowType) => {\n\n  const {isActiveFromProps = false, alertCloseHandler} = props\n\n  return (\n      <ModalWindow alertCloseHandler={alertCloseHandler} isActiveFromProps={isActiveFromProps} withOpenBtn={true} modal={<AuthorizationPopupBox/>}>{\n          (openModalWindow:any) =>\n              <Button label=\"Вход и регистрация\" onClickHandler={openModalWindow} className=\"btn-outline-light align-items-end mr-md-3 mb-3 mb-md-0\"/>\n      }</ModalWindow>\n  );\n}\n\nexport default AuthorizationModalWindow;\n","import React from 'react';\r\nimport \"./navBarStyles.css\"\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {PATH_CONTACTS, PATH_COOPERATION, PATH_SUPPORT} from \"../../app/App\";\r\nimport CategoryNavigationButton from \"../categoryNavButton/categoryNavigationButton\";\r\nimport {initialStateCategory} from \"../../redux/reducers/mainState/mainState\";\r\nimport Button from \"../button/button\";\r\n\r\ntype NavBarPropsType = {\r\n    className?: string\r\n}\r\n\r\nconst NavBar = (props: NavBarPropsType) => {\r\n\r\n    const linkConfigs = [\r\n        {path: PATH_COOPERATION, label: \"Сотрудничество\"},\r\n        {path: PATH_SUPPORT, label: \"Поддержка\"}\r\n    ]\r\n\r\n\r\n    const {className} = props\r\n\r\n  return (\r\n      <div className={`navbar-nav my-4 my-md-0 d-flex col-lg-7 col-md-7  justify-content-md-center flex-fill flex-md-row p-0 ${className}`}>\r\n          <CategoryNavigationButton className={\"nav-link p-md-0\"} category={\"all\"} configCategory={initialStateCategory}>\r\n              <Button className={\"btn-light w-100\"} label={\"Объявления\"}/>\r\n          </CategoryNavigationButton>\r\n          {linkConfigs.map( ({path, label}) =>\r\n              <NavLink className=\"nav-link ml-md-2 p-md-0 \" to={path}>\r\n                  <Button className={\"btn-light w-100\"} label={label}/>\r\n              </NavLink> )}\r\n      </div>\r\n  )\r\n}\r\n\r\nexport default NavBar;\r\n","import React, {useCallback, useRef, useState} from 'react';\r\nimport \"./headerStyles.css\"\r\nimport {Link} from 'react-router-dom';\r\nimport Logo from \"../logo/logo\";\r\nimport AuthorizationModalWindow from \"../modalWindow/authorizationModalWindow/authorizationModalWindow\";\r\nimport {linkToCreateAnnouncement, PATH_MY_ANNOUNCEMENTS, PATH_SETTINGS} from \"../../app/App\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {getIsAuthSelector,} from \"../../redux/reducers/authorizationState/authorizationStateSelectors\";\r\nimport AlertModalWindow from \"../modalWindow/alertModalWindow/alertModalWindow\";\r\nimport Button from \"../button/button\";\r\nimport {postLogoutOrDeleteUser} from \"../../redux/thunks/thunks\";\r\nimport useOutsideClick from \"../../hooks/useOutsideClick\";\r\nimport {getSettingsFieldValueByFieldSelector} from \"../../redux/reducers/settingsState/settingsStateSelectors\";\r\nimport NavBar from \"../navBar/navBar\";\r\n\r\nconst Header = (props: any) => {\r\n\r\n    //------USE-REF-----//\r\n    const ref = useRef(null)\r\n\r\n    //------MAP-STATE-TO-PROPS-----//\r\n    const isAuth = useSelector(getIsAuthSelector)\r\n    const name = useSelector((state) => getSettingsFieldValueByFieldSelector(state, \"name\"))\r\n\r\n    //-----MAP-DISPATCH-TO-PROPS----//\r\n    const dispatch = useDispatch()\r\n    const logoutUser = useCallback(() => dispatch(postLogoutOrDeleteUser(\"logout\")), [dispatch])\r\n\r\n    //------LOCAL-STATE-----//\r\n    const [isActiveAuthModal, setIsActiveAuthModal] = useState(false)\r\n    const [isActiveMobileMenu, setIsActiveMobileMenu] = useState(false)\r\n    const [isActiveAuthMenu, setIsActiveAuthMenu] = useState(false)\r\n    const [isActiveLogoutAlert, setIsActiveLogoutAlert] = useState(false)\r\n\r\n    const outsideClickHandler = () => {\r\n        isActiveAuthMenu && toggleIsActiveAuthMenu()\r\n    }\r\n\r\n    useOutsideClick(ref, outsideClickHandler)\r\n\r\n    const toggleIsActiveAuthMenu = () => {\r\n        console.log(\"toggleIsActiveAuthMenu\")\r\n        setIsActiveAuthMenu(prevState => !prevState)\r\n    }\r\n\r\n    // const linkConfigs = [\r\n    //     {path: PATH_HOUSING, label: \"Недвижимость\"},\r\n    //     {path: PATH_JOB, label: \"Работа\"}\r\n    // ]\r\n\r\n    const alertCreateAnnouncement = useCallback(() =>\r\n        <AlertModalWindow openBtnElement={<Button className={\"btn-outline-light my-sm-2\"} label={\"Разместить объявление\"}/>}\r\n                          btnOneConfiguration={{btnOneLabel: \"Позже\", btnOneHandler:() => setIsActiveAuthModal(false) }}\r\n                          btnTwoConfiguration={{btnTwoLabel: \"Авторизироваться\", btnTwoHandler:() => setIsActiveAuthModal(true) }}\r\n                          alertText={\"Для размещения объявления, необходимо авторизироваться!\"}/>, [])\r\n\r\n    const alertLogout = useCallback(() =>\r\n        <AlertModalWindow isActiveFromProps={true} alertText={\"Выйти из аккаунта?\"}\r\n                          btnOneConfiguration={{btnOneLabel: \"Нет\", btnOneHandler:() => setIsActiveLogoutAlert(false)}}\r\n                          btnTwoConfiguration={{btnTwoLabel: \"Да\", btnTwoHandler:logoutUser }}/>, [])\r\n\r\n    const authMenu = <>\r\n        <div ref={ref} onClick={toggleIsActiveAuthMenu} className=\"dropdown header__authMenu mr-md-4\">\r\n            <Button className={\"btn-warning dropdown-toggle w-100\"} label={name}/>\r\n            <div className={`header__authMenu-menu dropdown-menu ${isActiveAuthMenu && \"header__show\"}`}>\r\n                <Link to={PATH_MY_ANNOUNCEMENTS} className=\"dropdown-item\">\r\n                    Мои объявления\r\n                </Link>\r\n                <Link to={PATH_SETTINGS} className=\"dropdown-item\">\r\n                    Настройки\r\n                </Link>\r\n                <div className=\"dropdown-divider\"/>\r\n                <div onClick={() => setIsActiveLogoutAlert(true)} className=\"dropdown-item\">Выход</div>\r\n            </div>\r\n        </div>\r\n    </>\r\n\r\n    return (\r\n        <div className=\"navbar justify-content-center navbar-dark d-flex flex-column flex-lg-row align-items-center bg-info pl-5 pr-5\">\r\n            <div className={\"d-flex col-sm-12 justify-content-between justify-content-md-center col-md-1 mb-md-3 mb-lg-0 align-items-center \"}>\r\n                <Logo/>\r\n                <span onClick={() => setIsActiveMobileMenu(prevState => !prevState)}\r\n                      className=\"navbar-toggler-icon mobile border rounded border-color-dark p-3\"/>\r\n            </div>\r\n            <div className={`header__menu p-0 flex-md-fill flex-md-column flex-lg-row justify-content-center justify-content-lg-between align-items-center flex-wrap flex-lg-nowrap d-flex ${isActiveMobileMenu && \"header__show\"}`}>\r\n                <NavBar className={\"mb-md-3 mb-lg-0\"}/>\r\n            <div className=\"d-flex align-items-md-center flex-column flex-md-row flex-grow-1 flex-md-grow-0 justifu-content-center\">\r\n                {isAuth ? authMenu : <AuthorizationModalWindow alertCloseHandler={() => setIsActiveAuthModal(false)} isActiveFromProps={isActiveAuthModal}/>}\r\n                {isAuth ? linkToCreateAnnouncement(\"\") : alertCreateAnnouncement()}\r\n            </div>\r\n            </div>\r\n            {isActiveLogoutAlert && alertLogout()}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\nimport \"./footerStyles.css\"\nimport Logo from \"../logo/logo\";\nimport {linkToCreateAnnouncement} from \"../../app/App\";\nimport NavBar from \"../navBar/navBar\";\n\nconst Footer = (props: any) => {\n\n  return (\n      <div className=\"navbar navbar-dark bg-info flex-md-column flex-lg-row pl-5 pr-5 flex-column justify-content-center flex-md-row\">\n          <Logo className={\"mb-3 mb-lg-0\"}/>\n          <div className=\"d-flex flex-column flex-lg-row flex-fill col-sm-12 col-md-10 flex-md-column align-items-md-center flex-md-row p-0 justify-content-md-around\">\n              <NavBar/>\n              {linkToCreateAnnouncement(\"mt-4 mt-lg-0\")}\n          </div>\n\n      </div>\n  );\n}\n\nexport default Footer;\n","import React from 'react';\n\n\nconst SupportPage = (props: any) => {\n\n    return (\n        <div className=\"contactsPage__container container-lg pb-5 pt-5 text-center\">\n            <div className=\"jumbotron p-4\">\n                <h1 className=\"display-5\">Поддержка</h1>\n                <hr className=\"my-4\"/>\n                <h5 className={\"mb-3\"}>Уважаемые пользователи!</h5>\n                <p className=\"lead text-left\">\n                    Вы можете связаться с нами по почте - <span className={\"font-weight-bold\"}>salamkgru@yandex.ru</span>, по:<br/>\n                    - Вопросам, связанным с размещением объявления на сайте и другими техническими вопросами. Тема письма \"в Службу поддержки\". При обращении в Службу поддержки указывайте e-mail указанный при регистрации и логин, в противном случае оно рассматриваться не будет.<br/>\n                    - Вопросам технической поддержки рекламодателей, партнеров.\n                </p>\n            </div>\n        </div>\n\n    );\n}\n\nexport default SupportPage;\n","import React, {useCallback, useEffect} from 'react';\r\nimport \"./appStyles.css\"\r\nimport {Switch, Route, Redirect, NavLink} from 'react-router-dom';\r\nimport FeedPage from \"../pages/feedPage/feedPage\";\r\nimport SettingsPage from \"../pages/settingsPage/settingsPage\";\r\nimport AnnouncementPage from '../pages/announcementPage/announcementPage';\r\nimport MyAnnouncementsPage from \"../pages/myAnnouncementsPage/myAnnouncementsPage\";\r\nimport CreateAnnouncement from \"../pages/createAnnouncement/createAnnouncement\";\r\n\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {getSubwayStationsThunk, getUserInfoThunk} from \"../redux/thunks/thunks\";\r\nimport AnnouncementsListPage from \"../pages/announcementsListPage/announcementsListPage\";\r\nimport {getCategoriesDataSelector, getTheSubCategoriesSelector} from \"../redux/reducers/mainState/mainStateSelectors\";\r\nimport {getIsAuthSelector} from \"../redux/reducers/authorizationState/authorizationStateSelectors\";\r\nimport CooperationPage from \"../pages/cooperationPage/cooperationPage\";\r\nimport Header from \"../components/header/header\";\r\nimport Footer from \"../components/footer/footer\";\r\nimport SupportPage from \"../pages/supportPage/supportPage\";\r\n\r\nexport const PATH_FEED = \"/feed\"\r\nexport const PATH_MY_ANNOUNCEMENTS = \"/myAnnouncements\"\r\nexport const PATH_CREATE_ANNOUNCEMENT = \"/createAnnouncement\"\r\nexport const PATH_SETTINGS = \"/settings\"\r\nexport const PATH_SEARCH = \"/search\"\r\nexport const GET_PATH_SEARCH = (category: string) => `${PATH_SEARCH}/${category}`\r\nexport const PATH_CONTACTS = \"/contacts\"\r\nexport const PATH_COOPERATION = \"/cooperation\"\r\nexport const PATH_SUPPORT = \"/support\"\r\n\r\nexport const linkToCreateAnnouncement = (className: string) => <>\r\n    <NavLink activeClassName={\"active\"}\r\n             className={`header__btn-link btn btn-outline-light flex-grow-1 flex-shrink-03 flex-md-grow-0 my-3 my-lg-0 ${className}`}\r\n             to={PATH_CREATE_ANNOUNCEMENT}>\r\n        Разместить объявление\r\n    </NavLink>\r\n</>\r\n\r\nconst App = () => {\r\n\r\n    //------MAP-STATE-TO-PROPS-----//\r\n    const categoriesData = useSelector((state) =>\r\n        getTheSubCategoriesSelector(getCategoriesDataSelector(state)))\r\n    const isAuth = useSelector(getIsAuthSelector)\r\n\r\n    //-----MAP-DISPATCH-TO-PROPS----//\r\n    const dispatch = useDispatch()\r\n    const getSubwayStations = useCallback(() => dispatch(getSubwayStationsThunk()), [dispatch])\r\n    const getUserData = useCallback(() => dispatch(getUserInfoThunk()), [dispatch])\r\n\r\n    useEffect(() => {\r\n        getSubwayStations()\r\n        isAuth && getUserData()\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"App bg-light fullHeightContent\">\r\n            <Header/>\r\n            <Switch>\r\n                <Route exact path={PATH_CREATE_ANNOUNCEMENT} component={CreateAnnouncement}/>\r\n                <Route exact path={PATH_FEED} component={FeedPage}/>\r\n                <Route exact path={PATH_MY_ANNOUNCEMENTS} component={MyAnnouncementsPage}/>\r\n                <Route exact path={PATH_SETTINGS} component={SettingsPage}/>\r\n                <Route exact path={PATH_COOPERATION} component={CooperationPage}/>\r\n                <Route exact path={PATH_SUPPORT} component={SupportPage}/>\r\n                {categoriesData.map(({category}: any) => <Route exact path={GET_PATH_SEARCH(category)}\r\n                                                                component={AnnouncementsListPage}/>)}\r\n                {categoriesData.map(({category}: any) => <Route exact path={`${GET_PATH_SEARCH(category)}/:id`}\r\n                                                                component={AnnouncementPage}/>)}\r\n                <Redirect to={PATH_FEED}/>\r\n            </Switch>\r\n            <Footer/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\n\r\nimport thunkMiddleWare from \"redux-thunk\";\r\n\r\nimport { connectRouter, routerMiddleware } from 'connected-react-router'\r\nimport { createBrowserHistory } from 'history'\r\nimport {mainStateReducer} from \"./reducers/mainState/mainState\";\r\nimport { authorizationStateReducer } from \"./reducers/authorizationState/authorizationState\";\r\nimport {searchBoxStateReducer} from \"./reducers/searchBoxState/searchBoxState\";\r\nimport {feedStateReducer} from \"./reducers/feedState/feedState\";\r\nimport { settingsStateReducer } from \"./reducers/settingsState/settingsState\";\r\nimport {announcementStateReducer} from \"./reducers/announcementState/announcementState\";\r\nimport {myAnnouncementsStateReducer} from \"./reducers/myAnnouncementState/myAnnouncementState\";\r\nimport {announcementsListStateReducer} from \"./reducers/announcementsListState/announcementsListState\";\r\nimport formStateReducer from \"./reducers/formState/formState\";\r\n\r\nexport const history = createBrowserHistory()\r\n\r\nconst reducers = () => combineReducers({\r\n    router: connectRouter(history),\r\n    mainState: mainStateReducer,\r\n    announcementsListState: announcementsListStateReducer,\r\n    formState: formStateReducer,\r\n    feedState: feedStateReducer,\r\n    searchBoxState: searchBoxStateReducer,\r\n    announcementState: announcementStateReducer,\r\n    myAnnouncementsState: myAnnouncementsStateReducer,\r\n    settingsState: settingsStateReducer,\r\n    authorizationState: authorizationStateReducer\r\n})\r\n\r\ntype rootReducerType = typeof reducers\r\nexport type AppStateType = ReturnType<rootReducerType>\r\n\r\nconst store = createStore(reducers(), applyMiddleware(routerMiddleware(history), thunkMiddleWare))\r\n\r\nexport default store","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./app/App\";\n\nimport { ConnectedRouter } from \"connected-react-router\"\nimport { Provider } from \"react-redux\"\n\nimport store, {history} from \"./redux/store\"\n\n(window as any).store = store\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <ConnectedRouter history={history}>\n                <App/>\n            </ConnectedRouter>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n)"],"sourceRoot":""}